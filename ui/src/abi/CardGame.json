{
  "contractName": "CardGame",
  "abi": [
    {
      "inputs": [],
      "stateMutability": "nonpayable",
      "type": "constructor"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "owner",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "approved",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "uint256",
          "name": "tokenId",
          "type": "uint256"
        }
      ],
      "name": "Approval",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "owner",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "operator",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "bool",
          "name": "approved",
          "type": "bool"
        }
      ],
      "name": "ApprovalForAll",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "address",
          "name": "player",
          "type": "address"
        }
      ],
      "name": "HandMinted",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "previousOwner",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "newOwner",
          "type": "address"
        }
      ],
      "name": "OwnershipTransferred",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "from",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "to",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "uint256",
          "name": "tokenId",
          "type": "uint256"
        }
      ],
      "name": "Transfer",
      "type": "event"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "to",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "tokenId",
          "type": "uint256"
        }
      ],
      "name": "approve",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "owner",
          "type": "address"
        }
      ],
      "name": "balanceOf",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function",
      "constant": true
    },
    {
      "inputs": [],
      "name": "baseURI",
      "outputs": [
        {
          "internalType": "string",
          "name": "",
          "type": "string"
        }
      ],
      "stateMutability": "view",
      "type": "function",
      "constant": true
    },
    {
      "inputs": [],
      "name": "currentDeckIdx",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function",
      "constant": true
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "name": "currentDeckTaken",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function",
      "constant": true
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "tokenId",
          "type": "uint256"
        }
      ],
      "name": "getApproved",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function",
      "constant": true
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "owner",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "operator",
          "type": "address"
        }
      ],
      "name": "isApprovedForAll",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "view",
      "type": "function",
      "constant": true
    },
    {
      "inputs": [],
      "name": "name",
      "outputs": [
        {
          "internalType": "string",
          "name": "",
          "type": "string"
        }
      ],
      "stateMutability": "view",
      "type": "function",
      "constant": true
    },
    {
      "inputs": [],
      "name": "nftId",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function",
      "constant": true
    },
    {
      "inputs": [],
      "name": "owner",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function",
      "constant": true
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "tokenId",
          "type": "uint256"
        }
      ],
      "name": "ownerOf",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function",
      "constant": true
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "name": "players",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function",
      "constant": true
    },
    {
      "inputs": [],
      "name": "renounceOwnership",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "from",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "to",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "tokenId",
          "type": "uint256"
        }
      ],
      "name": "safeTransferFrom",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "from",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "to",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "tokenId",
          "type": "uint256"
        },
        {
          "internalType": "bytes",
          "name": "_data",
          "type": "bytes"
        }
      ],
      "name": "safeTransferFrom",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "operator",
          "type": "address"
        },
        {
          "internalType": "bool",
          "name": "approved",
          "type": "bool"
        }
      ],
      "name": "setApprovalForAll",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "bytes4",
          "name": "interfaceId",
          "type": "bytes4"
        }
      ],
      "name": "supportsInterface",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "view",
      "type": "function",
      "constant": true
    },
    {
      "inputs": [],
      "name": "symbol",
      "outputs": [
        {
          "internalType": "string",
          "name": "",
          "type": "string"
        }
      ],
      "stateMutability": "view",
      "type": "function",
      "constant": true
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "index",
          "type": "uint256"
        }
      ],
      "name": "tokenByIndex",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function",
      "constant": true
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "owner",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "index",
          "type": "uint256"
        }
      ],
      "name": "tokenOfOwnerByIndex",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function",
      "constant": true
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "tokenId",
          "type": "uint256"
        }
      ],
      "name": "tokenURI",
      "outputs": [
        {
          "internalType": "string",
          "name": "",
          "type": "string"
        }
      ],
      "stateMutability": "view",
      "type": "function",
      "constant": true
    },
    {
      "inputs": [],
      "name": "totalSupply",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function",
      "constant": true
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "from",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "to",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "tokenId",
          "type": "uint256"
        }
      ],
      "name": "transferFrom",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "newOwner",
          "type": "address"
        }
      ],
      "name": "transferOwnership",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "tokenId",
          "type": "uint256"
        }
      ],
      "name": "getTokenDetails",
      "outputs": [
        {
          "components": [
            {
              "internalType": "uint256",
              "name": "deckIdx",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "cardIdx",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "suitTypeIdx",
              "type": "uint256"
            },
            {
              "internalType": "bool",
              "name": "isHandCard",
              "type": "bool"
            }
          ],
          "internalType": "struct CardGame.Card",
          "name": "",
          "type": "tuple"
        }
      ],
      "stateMutability": "view",
      "type": "function",
      "constant": true
    },
    {
      "inputs": [],
      "name": "getDeckTaken",
      "outputs": [
        {
          "internalType": "uint256[]",
          "name": "",
          "type": "uint256[]"
        }
      ],
      "stateMutability": "view",
      "type": "function",
      "constant": true
    },
    {
      "inputs": [],
      "name": "getPlayers",
      "outputs": [
        {
          "internalType": "address[]",
          "name": "",
          "type": "address[]"
        }
      ],
      "stateMutability": "view",
      "type": "function",
      "constant": true
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "tokenId",
          "type": "uint256"
        }
      ],
      "name": "getOwnerOf",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function",
      "constant": true
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "myAddr",
          "type": "address"
        }
      ],
      "name": "getInHandTokens",
      "outputs": [
        {
          "internalType": "uint256[]",
          "name": "",
          "type": "uint256[]"
        }
      ],
      "stateMutability": "view",
      "type": "function",
      "constant": true
    },
    {
      "inputs": [
        {
          "components": [
            {
              "internalType": "uint256",
              "name": "deckIdx",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "cardIdx",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "suitTypeIdx",
              "type": "uint256"
            },
            {
              "internalType": "bool",
              "name": "isHandCard",
              "type": "bool"
            }
          ],
          "internalType": "struct CardGame.Card[]",
          "name": "card_hand",
          "type": "tuple[]"
        }
      ],
      "name": "mintNewHand",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    }
  ],
  "metadata": "{\"compiler\":{\"version\":\"0.6.12+commit.27d51765\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"approved\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"bool\",\"name\":\"approved\",\"type\":\"bool\"}],\"name\":\"ApprovalForAll\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"player\",\"type\":\"address\"}],\"name\":\"HandMinted\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"previousOwner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"baseURI\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"currentDeckIdx\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"currentDeckTaken\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"getApproved\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getDeckTaken\",\"outputs\":[{\"internalType\":\"uint256[]\",\"name\":\"\",\"type\":\"uint256[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"myAddr\",\"type\":\"address\"}],\"name\":\"getInHandTokens\",\"outputs\":[{\"internalType\":\"uint256[]\",\"name\":\"\",\"type\":\"uint256[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"getOwnerOf\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getPlayers\",\"outputs\":[{\"internalType\":\"address[]\",\"name\":\"\",\"type\":\"address[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"getTokenDetails\",\"outputs\":[{\"components\":[{\"internalType\":\"uint256\",\"name\":\"deckIdx\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"cardIdx\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"suitTypeIdx\",\"type\":\"uint256\"},{\"internalType\":\"bool\",\"name\":\"isHandCard\",\"type\":\"bool\"}],\"internalType\":\"struct CardGame.Card\",\"name\":\"\",\"type\":\"tuple\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"}],\"name\":\"isApprovedForAll\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"components\":[{\"internalType\":\"uint256\",\"name\":\"deckIdx\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"cardIdx\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"suitTypeIdx\",\"type\":\"uint256\"},{\"internalType\":\"bool\",\"name\":\"isHandCard\",\"type\":\"bool\"}],\"internalType\":\"struct CardGame.Card[]\",\"name\":\"card_hand\",\"type\":\"tuple[]\"}],\"name\":\"mintNewHand\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"nftId\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"ownerOf\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"players\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"renounceOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"safeTransferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"_data\",\"type\":\"bytes\"}],\"name\":\"safeTransferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"internalType\":\"bool\",\"name\":\"approved\",\"type\":\"bool\"}],\"name\":\"setApprovalForAll\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes4\",\"name\":\"interfaceId\",\"type\":\"bytes4\"}],\"name\":\"supportsInterface\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"index\",\"type\":\"uint256\"}],\"name\":\"tokenByIndex\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"index\",\"type\":\"uint256\"}],\"name\":\"tokenOfOwnerByIndex\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"tokenURI\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{\"approve(address,uint256)\":{\"details\":\"See {IERC721-approve}.\"},\"balanceOf(address)\":{\"details\":\"See {IERC721-balanceOf}.\"},\"baseURI()\":{\"details\":\"Returns the base URI set via {_setBaseURI}. This will be automatically added as a prefix in {tokenURI} to each token's URI, or to the token ID if no specific URI is set for that token ID.\"},\"getApproved(uint256)\":{\"details\":\"See {IERC721-getApproved}.\"},\"isApprovedForAll(address,address)\":{\"details\":\"See {IERC721-isApprovedForAll}.\"},\"name()\":{\"details\":\"See {IERC721Metadata-name}.\"},\"owner()\":{\"details\":\"Returns the address of the current owner.\"},\"ownerOf(uint256)\":{\"details\":\"See {IERC721-ownerOf}.\"},\"renounceOwnership()\":{\"details\":\"Leaves the contract without owner. It will not be possible to call `onlyOwner` functions anymore. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby removing any functionality that is only available to the owner.\"},\"safeTransferFrom(address,address,uint256)\":{\"details\":\"See {IERC721-safeTransferFrom}.\"},\"safeTransferFrom(address,address,uint256,bytes)\":{\"details\":\"See {IERC721-safeTransferFrom}.\"},\"setApprovalForAll(address,bool)\":{\"details\":\"See {IERC721-setApprovalForAll}.\"},\"supportsInterface(bytes4)\":{\"details\":\"See {IERC165-supportsInterface}. Time complexity O(1), guaranteed to always use less than 30 000 gas.\"},\"symbol()\":{\"details\":\"See {IERC721Metadata-symbol}.\"},\"tokenByIndex(uint256)\":{\"details\":\"See {IERC721Enumerable-tokenByIndex}.\"},\"tokenOfOwnerByIndex(address,uint256)\":{\"details\":\"See {IERC721Enumerable-tokenOfOwnerByIndex}.\"},\"tokenURI(uint256)\":{\"details\":\"See {IERC721Metadata-tokenURI}.\"},\"totalSupply()\":{\"details\":\"See {IERC721Enumerable-totalSupply}.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"See {IERC721-transferFrom}.\"},\"transferOwnership(address)\":{\"details\":\"Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"/C/Users/swapp/Documents/MyProjects/Crypto/crypto_casino/truffle/contracts/CardGame.sol\":\"CardGame\"},\"evmVersion\":\"istanbul\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"/C/Users/swapp/Documents/MyProjects/Crypto/crypto_casino/truffle/contracts/CardGame.sol\":{\"keccak256\":\"0x7a8d7281d6f79e6712192459d1b60e979649c3da58595579a0bad5cefb1ed073\",\"urls\":[\"bzz-raw://fabe802928628d3c81535647b5fb929588ab188071921a1996e2d47b318b7915\",\"dweb:/ipfs/QmRkfznDKyau8X7vUN9XbpidAP4wuoosoyjqjDEgtQcjXJ\"]},\"@openzeppelin/contracts/access/Ownable.sol\":{\"keccak256\":\"0x15e2d5bd4c28a88548074c54d220e8086f638a71ed07e6b3ba5a70066fcf458d\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://90faf5851c02f9bd42c5bfb54d4f0421a2612f50ab80b2c4fa24fa3792071cc2\",\"dweb:/ipfs/QmRGM4F2PcGVF85aTfaA9YBhCHHDqrMhRjyp6fGeBTtirb\"]},\"@openzeppelin/contracts/introspection/ERC165.sol\":{\"keccak256\":\"0x24141d2f6b98d4cb77a8936eae8cbaad2e261d9062bdc08036096f4550092501\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://b710eb003944777135f027500a5a57b479fe857849f5f467c1ef9687401e3c95\",\"dweb:/ipfs/QmcELzi6KRzAs3DXwxdsoKWRJ13KSeipKQsJgD3unctdZM\"]},\"@openzeppelin/contracts/introspection/IERC165.sol\":{\"keccak256\":\"0xf70bc25d981e4ec9673a995ad2995d5d493ea188d3d8f388bba9c227ce09fb82\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://bd970f51e3a77790c2f02b5b1759827c3b897c3d98c407b3631e8af32e3dc93c\",\"dweb:/ipfs/QmPF85Amgbqjk3SNZKsPCsqCw8JfwYEPMnnhvMJUyX58je\"]},\"@openzeppelin/contracts/math/SafeMath.sol\":{\"keccak256\":\"0xcc78a17dd88fa5a2edc60c8489e2f405c0913b377216a5b26b35656b2d0dab52\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://526dc85e1f9b9b45830e202568d267d93dde7a4fcccf4ad7798dadcd92304d3c\",\"dweb:/ipfs/QmaoXMB972J3cSDLtBq3xBo4jLwqD2uzXTwujtSPqkYVhR\"]},\"@openzeppelin/contracts/token/ERC721/ERC721.sol\":{\"keccak256\":\"0x118ed7540f56b21ff92e21ebaa73584048e98d2ac04ca67571329bb8dbd9032f\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://da2918b7aff73dd51d41bfcfa548f81eb50531b8353500fdbdacf297076db070\",\"dweb:/ipfs/Qmb8ixAs1vBjZRowQNuNg6bRf2NZmgZ1JTBxmQS14PHpcL\"]},\"@openzeppelin/contracts/token/ERC721/IERC721.sol\":{\"keccak256\":\"0x2d99a0deb6648c34fbc66d6ac4a2d64798d7a5321b45624f6736fadc63da1962\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://2dcdce5ede1e5e650d174ec0b35be7d47b6a50f30bc895ef0d9e59fb75052e45\",\"dweb:/ipfs/QmQ2XFsDLTYqfEdw7pYzHiGtFRY11yQm4b6ynYgKqDxeB8\"]},\"@openzeppelin/contracts/token/ERC721/IERC721Enumerable.sol\":{\"keccak256\":\"0xe6bd1b1218338b6f9fe17776f48623b4ac3d8a40405f74a44bc23c00abe2ca13\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://0c354c3f6e9c487759aa7869be4fba68e0b2efc777b514d289c4cbd3ff8f7e1a\",\"dweb:/ipfs/QmdF9LcSYVmiUCL7JxLEYmSLrjga6zJsujfi6sgEJD4M1z\"]},\"@openzeppelin/contracts/token/ERC721/IERC721Metadata.sol\":{\"keccak256\":\"0xccb917776f826ac6b68bd5a15a5f711e3967848a52ba11e6104d9a4f593314a7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://430255ad2229ced6d880e61a67bdc6e48dbbaed8354a7c1fe918cd8b8714a886\",\"dweb:/ipfs/QmTHY56odzqEpEC6v6tafaWMYY7vmULw25q5XHJLCCAeox\"]},\"@openzeppelin/contracts/token/ERC721/IERC721Receiver.sol\":{\"keccak256\":\"0x52146049d6709c870e8ddcd988b5155cb6c5d640cfcd8978aee52bc1ba2ec4eb\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://ada84513617b7c1b2f890b44503735abaec73a1acd030112a17aac7e6c66a4a1\",\"dweb:/ipfs/QmaiFwdio67iJrfjAdkMac24eJ5sS1qD7CZW6PhUU6KjiK\"]},\"@openzeppelin/contracts/utils/Address.sol\":{\"keccak256\":\"0x28911e614500ae7c607a432a709d35da25f3bc5ddc8bd12b278b66358070c0ea\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://256c8c8af5eb072bc473226ab2b2187149b8fc04f5f4a4820db22527f5ce8e3c\",\"dweb:/ipfs/QmRvi5BhnL7Rxf85KrJhwM6RRhukm4tzoctRdgQEheNyiN\"]},\"@openzeppelin/contracts/utils/Context.sol\":{\"keccak256\":\"0x8d3cb350f04ff49cfb10aef08d87f19dcbaecc8027b0bed12f3275cd12f38cf0\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://ded47ec7c96750f9bd04bbbc84f659992d4ba901cb7b532a52cd468272cf378f\",\"dweb:/ipfs/QmfBrGtQP7rZEqEg6Wz6jh2N2Kukpj1z5v3CGWmAqrzm96\"]},\"@openzeppelin/contracts/utils/EnumerableMap.sol\":{\"keccak256\":\"0x4b087f06b6670a131a5a14e53b1d2a5ef19c034cc5ec42eeebcf9554325744ad\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://f6a6af5d848334e40db419773f6360601e311ffc21c2e274f730b8c542da99fd\",\"dweb:/ipfs/QmfA24cxQ2g41ZWUuDF295dxDJ4xF1bSDYtC3EaLd7CzW8\"]},\"@openzeppelin/contracts/utils/EnumerableSet.sol\":{\"keccak256\":\"0x1562cd9922fbf739edfb979f506809e2743789cbde3177515542161c3d04b164\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://4580d57781513d98870d9738c7d39094336e0a70cdb90d68dad549c6ced466ec\",\"dweb:/ipfs/Qmf9YZzzRFuvMnav9dgmeRUpdYMMECiZX8w25sHWVbA18V\"]},\"@openzeppelin/contracts/utils/Strings.sol\":{\"keccak256\":\"0xa1e12f97981f1d0964b1c048978606a57127c56c438bab61cdfe269cad859a74\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://5eefac1760f524971e14aa3f3d79515a3d54fd28c1d3bdca0b36127da349b830\",\"dweb:/ipfs/QmUMzkyH3ytJX5gVPizQruNLhkKmuJb3nFqBDad4LPdg5U\"]}},\"version\":1}",
  "bytecode": "0x60806040526000600b556000600c553480156200001b57600080fd5b506040518060400160405280600981526020017f436173696e6f4e465400000000000000000000000000000000000000000000008152506040518060400160405280600381526020017f4d4f4f0000000000000000000000000000000000000000000000000000000000815250620000a06301ffc9a760e01b620001d360201b60201c565b8160069080519060200190620000b8929190620002b3565b508060079080519060200190620000d1929190620002b3565b50620000ea6380ac58cd60e01b620001d360201b60201c565b62000102635b5e139f60e01b620001d360201b60201c565b6200011a63780e9d6360e01b620001d360201b60201c565b505060006200012e620002ab60201b60201c565b905080600a60006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055508073ffffffffffffffffffffffffffffffffffffffff16600073ffffffffffffffffffffffffffffffffffffffff167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e060405160405180910390a350620003ce565b63ffffffff60e01b817bffffffffffffffffffffffffffffffffffffffffffffffffffffffff191614156200023f576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040162000236906200039b565b60405180910390fd5b6001600080837bffffffffffffffffffffffffffffffffffffffffffffffffffffffff19167bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916815260200190815260200160002060006101000a81548160ff02191690831515021790555050565b600033905090565b828054600181600116156101000203166002900490600052602060002090601f016020900481019282601f10620002f657805160ff191683800117855562000327565b8280016001018555821562000327579182015b828111156200032657825182559160200191906001019062000309565b5b5090506200033691906200033a565b5090565b5b80821115620003555760008160009055506001016200033b565b5090565b600062000368601c83620003bd565b91507f4552433136353a20696e76616c696420696e74657266616365206964000000006000830152602082019050919050565b60006020820190508181036000830152620003b68162000359565b9050919050565b600082825260208201905092915050565b613c3080620003de6000396000f3fe608060405234801561001057600080fd5b50600436106101da5760003560e01c80638b5b9ccc11610104578063c87b56dd116100a2578063f2fde38b11610071578063f2fde38b146105a5578063f34f4c96146105c1578063f71d96cb146105df578063fc1067581461060f576101da565b8063c87b56dd146104f7578063e985e9c514610527578063ead2ae2514610557578063eaec285814610587576101da565b8063a22cb465116100de578063a22cb46514610471578063b88d4fde1461048d578063c1e03728146104a9578063c6bc5182146104d9576101da565b80638b5b9ccc146104175780638da5cb5b1461043557806395d89b4114610453576101da565b806342842e0e1161017c5780636c0360eb1161014b5780636c0360eb1461038f57806370a08231146103ad578063715018a6146103dd57806383638710146103e7576101da565b806342842e0e146102e35780634f6ccce7146102ff57806350f0aa991461032f5780636352211e1461035f576101da565b8063095ea7b3116101b8578063095ea7b31461025d57806318160ddd1461027957806323b872dd146102975780632f745c59146102b3576101da565b806301ffc9a7146101df57806306fdde031461020f578063081812fc1461022d575b600080fd5b6101f960048036038101906101f49190612b43565b61062b565b6040516102069190613620565b60405180910390f35b610217610692565b604051610224919061363b565b60405180910390f35b61024760048036038101906102429190612b95565b610734565b604051610254919061355a565b60405180910390f35b61027760048036038101906102729190612ac6565b6107b9565b005b6102816108d1565b60405161028e91906138d8565b60405180910390f35b6102b160048036038101906102ac91906129c0565b6108e2565b005b6102cd60048036038101906102c89190612ac6565b610942565b6040516102da91906138d8565b60405180910390f35b6102fd60048036038101906102f891906129c0565b61099d565b005b61031960048036038101906103149190612b95565b6109bd565b60405161032691906138d8565b60405180910390f35b6103496004803603810190610344919061295b565b6109e0565b60405161035691906135fe565b60405180910390f35b61037960048036038101906103749190612b95565b610a77565b604051610386919061355a565b60405180910390f35b610397610aae565b6040516103a4919061363b565b60405180910390f35b6103c760048036038101906103c2919061295b565b610b50565b6040516103d491906138d8565b60405180910390f35b6103e5610c0f565b005b61040160048036038101906103fc9190612b95565b610d4c565b60405161040e919061355a565b60405180910390f35b61041f610d5e565b60405161042c91906135dc565b60405180910390f35b61043d610dec565b60405161044a919061355a565b60405180910390f35b61045b610e16565b604051610468919061363b565b60405180910390f35b61048b60048036038101906104869190612a8a565b610eb8565b005b6104a760048036038101906104a29190612a0f565b611039565b005b6104c360048036038101906104be9190612b95565b61109b565b6040516104d091906138bd565b60405180910390f35b6104e1611101565b6040516104ee91906138d8565b60405180910390f35b610511600480360381019061050c9190612b95565b611107565b60405161051e919061363b565b60405180910390f35b610541600480360381019061053c9190612984565b61128a565b60405161054e9190613620565b60405180910390f35b610571600480360381019061056c9190612b95565b61131e565b60405161057e91906138d8565b60405180910390f35b61058f61133f565b60405161059c91906135fe565b60405180910390f35b6105bf60048036038101906105ba919061295b565b611397565b005b6105c9611543565b6040516105d691906138d8565b60405180910390f35b6105f960048036038101906105f49190612b95565b611549565b604051610606919061355a565b60405180910390f35b61062960048036038101906106249190612b02565b611585565b005b6000806000837bffffffffffffffffffffffffffffffffffffffffffffffffffffffff19167bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916815260200190815260200160002060009054906101000a900460ff169050919050565b606060068054600181600116156101000203166002900480601f01602080910402602001604051908101604052809291908181526020018280546001816001161561010002031660029004801561072a5780601f106106ff5761010080835404028352916020019161072a565b820191906000526020600020905b81548152906001019060200180831161070d57829003601f168201915b5050505050905090565b600061073f826117c1565b61077e576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610775906137dd565b60405180910390fd5b6004600083815260200190815260200160002060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff169050919050565b60006107c482610a77565b90508073ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff161415610835576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161082c9061385d565b60405180910390fd5b8073ffffffffffffffffffffffffffffffffffffffff166108546117de565b73ffffffffffffffffffffffffffffffffffffffff16148061088357506108828161087d6117de565b61128a565b5b6108c2576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016108b99061375d565b60405180910390fd5b6108cc83836117e6565b505050565b60006108dd600261189f565b905090565b6108f36108ed6117de565b826118b4565b610932576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016109299061387d565b60405180910390fd5b61093d838383611992565b505050565b600061099582600160008673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020611ba990919063ffffffff16565b905092915050565b6109b883838360405180602001604052806000815250611039565b505050565b6000806109d4836002611bc390919063ffffffff16565b50905080915050919050565b6060601060008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020805480602002602001604051908101604052809291908181526020018280548015610a6b57602002820191906000526020600020905b815481526020019060010190808311610a57575b50505050509050919050565b6000610aa782604051806060016040528060298152602001613bd2602991396002611bef9092919063ffffffff16565b9050919050565b606060098054600181600116156101000203166002900480601f016020809104026020016040519081016040528092919081815260200182805460018160011615610100020316600290048015610b465780601f10610b1b57610100808354040283529160200191610b46565b820191906000526020600020905b815481529060010190602001808311610b2957829003601f168201915b5050505050905090565b60008073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff161415610bc1576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610bb89061377d565b60405180910390fd5b610c08600160008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020611c0e565b9050919050565b610c176117de565b73ffffffffffffffffffffffffffffffffffffffff16610c35610dec565b73ffffffffffffffffffffffffffffffffffffffff1614610c8b576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610c82906137fd565b60405180910390fd5b600073ffffffffffffffffffffffffffffffffffffffff16600a60009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e060405160405180910390a36000600a60006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550565b6000610d5782610a77565b9050919050565b6060600e805480602002602001604051908101604052809291908181526020018280548015610de257602002820191906000526020600020905b8160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019060010190808311610d98575b5050505050905090565b6000600a60009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905090565b606060078054600181600116156101000203166002900480601f016020809104026020016040519081016040528092919081815260200182805460018160011615610100020316600290048015610eae5780601f10610e8357610100808354040283529160200191610eae565b820191906000526020600020905b815481529060010190602001808311610e9157829003601f168201915b5050505050905090565b610ec06117de565b73ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff161415610f2e576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610f25906136fd565b60405180910390fd5b8060056000610f3b6117de565b73ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060006101000a81548160ff0219169083151502179055508173ffffffffffffffffffffffffffffffffffffffff16610fe86117de565b73ffffffffffffffffffffffffffffffffffffffff167f17307eab39ab6107e8899845ad3d59bd9653f200f220920489ca2b5937696c318360405161102d9190613620565b60405180910390a35050565b61104a6110446117de565b836118b4565b611089576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016110809061387d565b60405180910390fd5b61109584848484611c23565b50505050565b6110a361277d565b600f60008381526020019081526020016000206040518060800160405290816000820154815260200160018201548152602001600282015481526020016003820160009054906101000a900460ff1615151515815250509050919050565b600b5481565b6060611112826117c1565b611151576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016111489061383d565b60405180910390fd5b6060600860008481526020019081526020016000208054600181600116156101000203166002900480601f0160208091040260200160405190810160405280929190818152602001828054600181600116156101000203166002900480156111fa5780601f106111cf576101008083540402835291602001916111fa565b820191906000526020600020905b8154815290600101906020018083116111dd57829003601f168201915b50505050509050606061120b610aae565b9050600081511415611221578192505050611285565b60008251111561125657808260405160200161123e929190613536565b60405160208183030381529060405292505050611285565b8061126085611c7f565b604051602001611271929190613536565b604051602081830303815290604052925050505b919050565b6000600560008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060009054906101000a900460ff16905092915050565b600d818154811061132b57fe5b906000526020600020016000915090505481565b6060600d80548060200260200160405190810160405280929190818152602001828054801561138d57602002820191906000526020600020905b815481526020019060010190808311611379575b5050505050905090565b61139f6117de565b73ffffffffffffffffffffffffffffffffffffffff166113bd610dec565b73ffffffffffffffffffffffffffffffffffffffff1614611413576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161140a906137fd565b60405180910390fd5b600073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff161415611483576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161147a9061369d565b60405180910390fd5b8073ffffffffffffffffffffffffffffffffffffffff16600a60009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e060405160405180910390a380600a60006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555050565b600c5481565b600e818154811061155657fe5b906000526020600020016000915054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b60005b81518110156117235760405180608001604052808383815181106115a857fe5b60200260200101516000015181526020018383815181106115c557fe5b60200260200101516020015181526020018383815181106115e257fe5b602002602001015160400151815260200160011515815250600f6000600b54815260200190815260200160002060008201518160000155602082015181600101556040820151816002015560608201518160030160006101000a81548160ff021916908315150217905550905050600d82828151811061165e57fe5b6020026020010151602001519080600181540180825580915050600190039060005260206000200160009091909190915055601060003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020600b54908060018154018082558091505060019003906000526020600020016000909190919091505561170433600b54611dc6565b600b600081548092919060010191905055508080600101915050611588565b50600e339080600181540180825580915050600190039060005260206000200160009091909190916101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055507fe25990158cef48394eca25688e50df28632515e25370a164815fa8151dc447e2336040516117b69190613575565b60405180910390a150565b60006117d7826002611de490919063ffffffff16565b9050919050565b600033905090565b816004600083815260200190815260200160002060006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550808273ffffffffffffffffffffffffffffffffffffffff1661185983610a77565b73ffffffffffffffffffffffffffffffffffffffff167f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b92560405160405180910390a45050565b60006118ad82600001611dfe565b9050919050565b60006118bf826117c1565b6118fe576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016118f59061373d565b60405180910390fd5b600061190983610a77565b90508073ffffffffffffffffffffffffffffffffffffffff168473ffffffffffffffffffffffffffffffffffffffff16148061197857508373ffffffffffffffffffffffffffffffffffffffff1661196084610734565b73ffffffffffffffffffffffffffffffffffffffff16145b806119895750611988818561128a565b5b91505092915050565b8273ffffffffffffffffffffffffffffffffffffffff166119b282610a77565b73ffffffffffffffffffffffffffffffffffffffff1614611a08576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016119ff9061381d565b60405180910390fd5b600073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff161415611a78576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401611a6f906136dd565b60405180910390fd5b611a83838383611e0f565b611a8e6000826117e6565b611adf81600160008673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020611e1490919063ffffffff16565b50611b3181600160008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020611e2e90919063ffffffff16565b50611b4881836002611e489092919063ffffffff16565b50808273ffffffffffffffffffffffffffffffffffffffff168473ffffffffffffffffffffffffffffffffffffffff167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef60405160405180910390a4505050565b6000611bb88360000183611e7d565b60001c905092915050565b600080600080611bd68660000186611eea565b915091508160001c8160001c9350935050509250929050565b6000611c02846000018460001b84611f6d565b60001c90509392505050565b6000611c1c82600001611ffe565b9050919050565b611c2e848484611992565b611c3a8484848461200f565b611c79576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401611c709061367d565b60405180910390fd5b50505050565b60606000821415611cc7576040518060400160405280600181526020017f30000000000000000000000000000000000000000000000000000000000000008152509050611dc1565b600082905060005b60008214611cf1578080600101915050600a8281611ce957fe5b049150611ccf565b60608167ffffffffffffffff81118015611d0a57600080fd5b506040519080825280601f01601f191660200182016040528015611d3d5781602001600182028036833780820191505090505b50905060006001830390508593505b60008414611db957600a8481611d5e57fe5b0660300160f81b82828060019003935081518110611d7857fe5b60200101907effffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916908160001a905350600a8481611db157fe5b049350611d4c565b819450505050505b919050565b611de0828260405180602001604052806000815250612173565b5050565b6000611df6836000018360001b6121ce565b905092915050565b600081600001805490509050919050565b505050565b6000611e26836000018360001b6121f1565b905092915050565b6000611e40836000018360001b6122d9565b905092915050565b6000611e74846000018460001b8473ffffffffffffffffffffffffffffffffffffffff1660001b612349565b90509392505050565b600081836000018054905011611ec8576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401611ebf9061365d565b60405180910390fd5b826000018281548110611ed757fe5b9060005260206000200154905092915050565b60008082846000018054905011611f36576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401611f2d9061379d565b60405180910390fd5b6000846000018481548110611f4757fe5b906000526020600020906002020190508060000154816001015492509250509250929050565b60008084600101600085815260200190815260200160002054905060008114158390611fcf576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401611fc6919061363b565b60405180910390fd5b50846000016001820381548110611fe257fe5b9060005260206000209060020201600101549150509392505050565b600081600001805490509050919050565b60006120308473ffffffffffffffffffffffffffffffffffffffff16612425565b61203d576001905061216b565b606061210463150b7a0260e01b6120526117de565b8887876040516024016120689493929190613590565b604051602081830303815290604052907bffffffffffffffffffffffffffffffffffffffffffffffffffffffff19166020820180517bffffffffffffffffffffffffffffffffffffffffffffffffffffffff8381831617835250505050604051806060016040528060328152602001613ba0603291398773ffffffffffffffffffffffffffffffffffffffff166124389092919063ffffffff16565b905060008180602001905181019061211c9190612b6c565b905063150b7a0260e01b7bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916817bffffffffffffffffffffffffffffffffffffffffffffffffffffffff191614925050505b949350505050565b61217d8383612450565b61218a600084848461200f565b6121c9576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016121c09061367d565b60405180910390fd5b505050565b600080836001016000848152602001908152602001600020541415905092915050565b600080836001016000848152602001908152602001600020549050600081146122cd576000600182039050600060018660000180549050039050600086600001828154811061223c57fe5b906000526020600020015490508087600001848154811061225957fe5b906000526020600020018190555060018301876001016000838152602001908152602001600020819055508660000180548061229157fe5b600190038181906000526020600020016000905590558660010160008781526020019081526020016000206000905560019450505050506122d3565b60009150505b92915050565b60006122e583836125de565b61233e578260000182908060018154018082558091505060019003906000526020600020016000909190919091505582600001805490508360010160008481526020019081526020016000208190555060019050612343565b600090505b92915050565b60008084600101600085815260200190815260200160002054905060008114156123f05784600001604051806040016040528086815260200185815250908060018154018082558091505060019003906000526020600020906002020160009091909190915060008201518160000155602082015181600101555050846000018054905085600101600086815260200190815260200160002081905550600191505061241e565b8285600001600183038154811061240357fe5b90600052602060002090600202016001018190555060009150505b9392505050565b600080823b905060008111915050919050565b60606124478484600085612601565b90509392505050565b600073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff1614156124c0576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016124b7906137bd565b60405180910390fd5b6124c9816117c1565b15612509576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401612500906136bd565b60405180910390fd5b61251560008383611e0f565b61256681600160008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020611e2e90919063ffffffff16565b5061257d81836002611e489092919063ffffffff16565b50808273ffffffffffffffffffffffffffffffffffffffff16600073ffffffffffffffffffffffffffffffffffffffff167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef60405160405180910390a45050565b600080836001016000848152602001908152602001600020541415905092915050565b606082471015612646576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161263d9061371d565b60405180910390fd5b61264f85612425565b61268e576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016126859061389d565b60405180910390fd5b600060608673ffffffffffffffffffffffffffffffffffffffff1685876040516126b8919061351f565b60006040518083038185875af1925050503d80600081146126f5576040519150601f19603f3d011682016040523d82523d6000602084013e6126fa565b606091505b509150915061270a828286612716565b92505050949350505050565b6060831561272657829050612776565b6000835111156127395782518084602001fd5b816040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161276d919061363b565b60405180910390fd5b9392505050565b60405180608001604052806000815260200160008152602001600081526020016000151581525090565b6000813590506127b681613b43565b92915050565b600082601f8301126127cd57600080fd5b81356127e06127db82613920565b6138f3565b9150818183526020840193506020810190508385608084028201111561280557600080fd5b60005b83811015612835578161281b88826128d2565b845260208401935060808301925050600181019050612808565b5050505092915050565b60008135905061284e81613b5a565b92915050565b60008135905061286381613b71565b92915050565b60008151905061287881613b71565b92915050565b600082601f83011261288f57600080fd5b81356128a261289d82613948565b6138f3565b915080825260208301602083018583830111156128be57600080fd5b6128c9838284613af0565b50505092915050565b6000608082840312156128e457600080fd5b6128ee60806138f3565b905060006128fe84828501612946565b600083015250602061291284828501612946565b602083015250604061292684828501612946565b604083015250606061293a8482850161283f565b60608301525092915050565b60008135905061295581613b88565b92915050565b60006020828403121561296d57600080fd5b600061297b848285016127a7565b91505092915050565b6000806040838503121561299757600080fd5b60006129a5858286016127a7565b92505060206129b6858286016127a7565b9150509250929050565b6000806000606084860312156129d557600080fd5b60006129e3868287016127a7565b93505060206129f4868287016127a7565b9250506040612a0586828701612946565b9150509250925092565b60008060008060808587031215612a2557600080fd5b6000612a33878288016127a7565b9450506020612a44878288016127a7565b9350506040612a5587828801612946565b925050606085013567ffffffffffffffff811115612a7257600080fd5b612a7e8782880161287e565b91505092959194509250565b60008060408385031215612a9d57600080fd5b6000612aab858286016127a7565b9250506020612abc8582860161283f565b9150509250929050565b60008060408385031215612ad957600080fd5b6000612ae7858286016127a7565b9250506020612af885828601612946565b9150509250929050565b600060208284031215612b1457600080fd5b600082013567ffffffffffffffff811115612b2e57600080fd5b612b3a848285016127bc565b91505092915050565b600060208284031215612b5557600080fd5b6000612b6384828501612854565b91505092915050565b600060208284031215612b7e57600080fd5b6000612b8c84828501612869565b91505092915050565b600060208284031215612ba757600080fd5b6000612bb584828501612946565b91505092915050565b6000612bca8383612c0c565b60208301905092915050565b6000612be28383613501565b60208301905092915050565b612bf781613aba565b82525050565b612c0681613a46565b82525050565b612c1581613a34565b82525050565b612c2481613a34565b82525050565b6000612c3582613994565b612c3f81856139da565b9350612c4a83613974565b8060005b83811015612c7b578151612c628882612bbe565b9750612c6d836139c0565b925050600181019050612c4e565b5085935050505092915050565b6000612c938261399f565b612c9d81856139eb565b9350612ca883613984565b8060005b83811015612cd9578151612cc08882612bd6565b9750612ccb836139cd565b925050600181019050612cac565b5085935050505092915050565b612cef81613a58565b82525050565b612cfe81613a58565b82525050565b6000612d0f826139aa565b612d1981856139fc565b9350612d29818560208601613aff565b612d3281613b32565b840191505092915050565b6000612d48826139aa565b612d528185613a0d565b9350612d62818560208601613aff565b80840191505092915050565b6000612d79826139b5565b612d838185613a18565b9350612d93818560208601613aff565b612d9c81613b32565b840191505092915050565b6000612db2826139b5565b612dbc8185613a29565b9350612dcc818560208601613aff565b80840191505092915050565b6000612de5602283613a18565b91507f456e756d657261626c655365743a20696e646578206f7574206f6620626f756e60008301527f64730000000000000000000000000000000000000000000000000000000000006020830152604082019050919050565b6000612e4b603283613a18565b91507f4552433732313a207472616e7366657220746f206e6f6e20455243373231526560008301527f63656976657220696d706c656d656e74657200000000000000000000000000006020830152604082019050919050565b6000612eb1602683613a18565b91507f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160008301527f64647265737300000000000000000000000000000000000000000000000000006020830152604082019050919050565b6000612f17601c83613a18565b91507f4552433732313a20746f6b656e20616c7265616479206d696e746564000000006000830152602082019050919050565b6000612f57602483613a18565b91507f4552433732313a207472616e7366657220746f20746865207a65726f2061646460008301527f72657373000000000000000000000000000000000000000000000000000000006020830152604082019050919050565b6000612fbd601983613a18565b91507f4552433732313a20617070726f766520746f2063616c6c6572000000000000006000830152602082019050919050565b6000612ffd602683613a18565b91507f416464726573733a20696e73756666696369656e742062616c616e636520666f60008301527f722063616c6c00000000000000000000000000000000000000000000000000006020830152604082019050919050565b6000613063602c83613a18565b91507f4552433732313a206f70657261746f7220717565727920666f72206e6f6e657860008301527f697374656e7420746f6b656e00000000000000000000000000000000000000006020830152604082019050919050565b60006130c9603883613a18565b91507f4552433732313a20617070726f76652063616c6c6572206973206e6f74206f7760008301527f6e6572206e6f7220617070726f76656420666f7220616c6c00000000000000006020830152604082019050919050565b600061312f602a83613a18565b91507f4552433732313a2062616c616e636520717565727920666f7220746865207a6560008301527f726f2061646472657373000000000000000000000000000000000000000000006020830152604082019050919050565b6000613195602283613a18565b91507f456e756d657261626c654d61703a20696e646578206f7574206f6620626f756e60008301527f64730000000000000000000000000000000000000000000000000000000000006020830152604082019050919050565b60006131fb602083613a18565b91507f4552433732313a206d696e7420746f20746865207a65726f20616464726573736000830152602082019050919050565b600061323b602c83613a18565b91507f4552433732313a20617070726f76656420717565727920666f72206e6f6e657860008301527f697374656e7420746f6b656e00000000000000000000000000000000000000006020830152604082019050919050565b60006132a1602083613a18565b91507f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e65726000830152602082019050919050565b60006132e1602983613a18565b91507f4552433732313a207472616e73666572206f6620746f6b656e2074686174206960008301527f73206e6f74206f776e00000000000000000000000000000000000000000000006020830152604082019050919050565b6000613347602f83613a18565b91507f4552433732314d657461646174613a2055524920717565727920666f72206e6f60008301527f6e6578697374656e7420746f6b656e00000000000000000000000000000000006020830152604082019050919050565b60006133ad602183613a18565b91507f4552433732313a20617070726f76616c20746f2063757272656e74206f776e6560008301527f72000000000000000000000000000000000000000000000000000000000000006020830152604082019050919050565b6000613413603183613a18565b91507f4552433732313a207472616e736665722063616c6c6572206973206e6f74206f60008301527f776e6572206e6f7220617070726f7665640000000000000000000000000000006020830152604082019050919050565b6000613479601d83613a18565b91507f416464726573733a2063616c6c20746f206e6f6e2d636f6e74726163740000006000830152602082019050919050565b6080820160008201516134c26000850182613501565b5060208201516134d56020850182613501565b5060408201516134e86040850182613501565b5060608201516134fb6060850182612ce6565b50505050565b61350a81613ab0565b82525050565b61351981613ab0565b82525050565b600061352b8284612d3d565b915081905092915050565b60006135428285612da7565b915061354e8284612da7565b91508190509392505050565b600060208201905061356f6000830184612c1b565b92915050565b600060208201905061358a6000830184612bee565b92915050565b60006080820190506135a56000830187612bfd565b6135b26020830186612c1b565b6135bf6040830185613510565b81810360608301526135d18184612d04565b905095945050505050565b600060208201905081810360008301526135f68184612c2a565b905092915050565b600060208201905081810360008301526136188184612c88565b905092915050565b60006020820190506136356000830184612cf5565b92915050565b600060208201905081810360008301526136558184612d6e565b905092915050565b6000602082019050818103600083015261367681612dd8565b9050919050565b6000602082019050818103600083015261369681612e3e565b9050919050565b600060208201905081810360008301526136b681612ea4565b9050919050565b600060208201905081810360008301526136d681612f0a565b9050919050565b600060208201905081810360008301526136f681612f4a565b9050919050565b6000602082019050818103600083015261371681612fb0565b9050919050565b6000602082019050818103600083015261373681612ff0565b9050919050565b6000602082019050818103600083015261375681613056565b9050919050565b60006020820190508181036000830152613776816130bc565b9050919050565b6000602082019050818103600083015261379681613122565b9050919050565b600060208201905081810360008301526137b681613188565b9050919050565b600060208201905081810360008301526137d6816131ee565b9050919050565b600060208201905081810360008301526137f68161322e565b9050919050565b6000602082019050818103600083015261381681613294565b9050919050565b60006020820190508181036000830152613836816132d4565b9050919050565b600060208201905081810360008301526138568161333a565b9050919050565b60006020820190508181036000830152613876816133a0565b9050919050565b6000602082019050818103600083015261389681613406565b9050919050565b600060208201905081810360008301526138b68161346c565b9050919050565b60006080820190506138d260008301846134ac565b92915050565b60006020820190506138ed6000830184613510565b92915050565b6000604051905081810181811067ffffffffffffffff8211171561391657600080fd5b8060405250919050565b600067ffffffffffffffff82111561393757600080fd5b602082029050602081019050919050565b600067ffffffffffffffff82111561395f57600080fd5b601f19601f8301169050602081019050919050565b6000819050602082019050919050565b6000819050602082019050919050565b600081519050919050565b600081519050919050565b600081519050919050565b600081519050919050565b6000602082019050919050565b6000602082019050919050565b600082825260208201905092915050565b600082825260208201905092915050565b600082825260208201905092915050565b600081905092915050565b600082825260208201905092915050565b600081905092915050565b6000613a3f82613a90565b9050919050565b6000613a5182613a90565b9050919050565b60008115159050919050565b60007fffffffff0000000000000000000000000000000000000000000000000000000082169050919050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6000819050919050565b6000613ac582613acc565b9050919050565b6000613ad782613ade565b9050919050565b6000613ae982613a90565b9050919050565b82818337600083830152505050565b60005b83811015613b1d578082015181840152602081019050613b02565b83811115613b2c576000848401525b50505050565b6000601f19601f8301169050919050565b613b4c81613a34565b8114613b5757600080fd5b50565b613b6381613a58565b8114613b6e57600080fd5b50565b613b7a81613a64565b8114613b8557600080fd5b50565b613b9181613ab0565b8114613b9c57600080fd5b5056fe4552433732313a207472616e7366657220746f206e6f6e20455243373231526563656976657220696d706c656d656e7465724552433732313a206f776e657220717565727920666f72206e6f6e6578697374656e7420746f6b656ea2646970667358221220aedcb4d1a5d55325a41d9b5e21796c81bb735799e970551d877ffa9f71b1c98d64736f6c634300060c0033",
  "deployedBytecode": "0x608060405234801561001057600080fd5b50600436106101da5760003560e01c80638b5b9ccc11610104578063c87b56dd116100a2578063f2fde38b11610071578063f2fde38b146105a5578063f34f4c96146105c1578063f71d96cb146105df578063fc1067581461060f576101da565b8063c87b56dd146104f7578063e985e9c514610527578063ead2ae2514610557578063eaec285814610587576101da565b8063a22cb465116100de578063a22cb46514610471578063b88d4fde1461048d578063c1e03728146104a9578063c6bc5182146104d9576101da565b80638b5b9ccc146104175780638da5cb5b1461043557806395d89b4114610453576101da565b806342842e0e1161017c5780636c0360eb1161014b5780636c0360eb1461038f57806370a08231146103ad578063715018a6146103dd57806383638710146103e7576101da565b806342842e0e146102e35780634f6ccce7146102ff57806350f0aa991461032f5780636352211e1461035f576101da565b8063095ea7b3116101b8578063095ea7b31461025d57806318160ddd1461027957806323b872dd146102975780632f745c59146102b3576101da565b806301ffc9a7146101df57806306fdde031461020f578063081812fc1461022d575b600080fd5b6101f960048036038101906101f49190612b43565b61062b565b6040516102069190613620565b60405180910390f35b610217610692565b604051610224919061363b565b60405180910390f35b61024760048036038101906102429190612b95565b610734565b604051610254919061355a565b60405180910390f35b61027760048036038101906102729190612ac6565b6107b9565b005b6102816108d1565b60405161028e91906138d8565b60405180910390f35b6102b160048036038101906102ac91906129c0565b6108e2565b005b6102cd60048036038101906102c89190612ac6565b610942565b6040516102da91906138d8565b60405180910390f35b6102fd60048036038101906102f891906129c0565b61099d565b005b61031960048036038101906103149190612b95565b6109bd565b60405161032691906138d8565b60405180910390f35b6103496004803603810190610344919061295b565b6109e0565b60405161035691906135fe565b60405180910390f35b61037960048036038101906103749190612b95565b610a77565b604051610386919061355a565b60405180910390f35b610397610aae565b6040516103a4919061363b565b60405180910390f35b6103c760048036038101906103c2919061295b565b610b50565b6040516103d491906138d8565b60405180910390f35b6103e5610c0f565b005b61040160048036038101906103fc9190612b95565b610d4c565b60405161040e919061355a565b60405180910390f35b61041f610d5e565b60405161042c91906135dc565b60405180910390f35b61043d610dec565b60405161044a919061355a565b60405180910390f35b61045b610e16565b604051610468919061363b565b60405180910390f35b61048b60048036038101906104869190612a8a565b610eb8565b005b6104a760048036038101906104a29190612a0f565b611039565b005b6104c360048036038101906104be9190612b95565b61109b565b6040516104d091906138bd565b60405180910390f35b6104e1611101565b6040516104ee91906138d8565b60405180910390f35b610511600480360381019061050c9190612b95565b611107565b60405161051e919061363b565b60405180910390f35b610541600480360381019061053c9190612984565b61128a565b60405161054e9190613620565b60405180910390f35b610571600480360381019061056c9190612b95565b61131e565b60405161057e91906138d8565b60405180910390f35b61058f61133f565b60405161059c91906135fe565b60405180910390f35b6105bf60048036038101906105ba919061295b565b611397565b005b6105c9611543565b6040516105d691906138d8565b60405180910390f35b6105f960048036038101906105f49190612b95565b611549565b604051610606919061355a565b60405180910390f35b61062960048036038101906106249190612b02565b611585565b005b6000806000837bffffffffffffffffffffffffffffffffffffffffffffffffffffffff19167bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916815260200190815260200160002060009054906101000a900460ff169050919050565b606060068054600181600116156101000203166002900480601f01602080910402602001604051908101604052809291908181526020018280546001816001161561010002031660029004801561072a5780601f106106ff5761010080835404028352916020019161072a565b820191906000526020600020905b81548152906001019060200180831161070d57829003601f168201915b5050505050905090565b600061073f826117c1565b61077e576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610775906137dd565b60405180910390fd5b6004600083815260200190815260200160002060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff169050919050565b60006107c482610a77565b90508073ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff161415610835576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161082c9061385d565b60405180910390fd5b8073ffffffffffffffffffffffffffffffffffffffff166108546117de565b73ffffffffffffffffffffffffffffffffffffffff16148061088357506108828161087d6117de565b61128a565b5b6108c2576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016108b99061375d565b60405180910390fd5b6108cc83836117e6565b505050565b60006108dd600261189f565b905090565b6108f36108ed6117de565b826118b4565b610932576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016109299061387d565b60405180910390fd5b61093d838383611992565b505050565b600061099582600160008673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020611ba990919063ffffffff16565b905092915050565b6109b883838360405180602001604052806000815250611039565b505050565b6000806109d4836002611bc390919063ffffffff16565b50905080915050919050565b6060601060008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020805480602002602001604051908101604052809291908181526020018280548015610a6b57602002820191906000526020600020905b815481526020019060010190808311610a57575b50505050509050919050565b6000610aa782604051806060016040528060298152602001613bd2602991396002611bef9092919063ffffffff16565b9050919050565b606060098054600181600116156101000203166002900480601f016020809104026020016040519081016040528092919081815260200182805460018160011615610100020316600290048015610b465780601f10610b1b57610100808354040283529160200191610b46565b820191906000526020600020905b815481529060010190602001808311610b2957829003601f168201915b5050505050905090565b60008073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff161415610bc1576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610bb89061377d565b60405180910390fd5b610c08600160008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020611c0e565b9050919050565b610c176117de565b73ffffffffffffffffffffffffffffffffffffffff16610c35610dec565b73ffffffffffffffffffffffffffffffffffffffff1614610c8b576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610c82906137fd565b60405180910390fd5b600073ffffffffffffffffffffffffffffffffffffffff16600a60009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e060405160405180910390a36000600a60006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550565b6000610d5782610a77565b9050919050565b6060600e805480602002602001604051908101604052809291908181526020018280548015610de257602002820191906000526020600020905b8160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019060010190808311610d98575b5050505050905090565b6000600a60009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905090565b606060078054600181600116156101000203166002900480601f016020809104026020016040519081016040528092919081815260200182805460018160011615610100020316600290048015610eae5780601f10610e8357610100808354040283529160200191610eae565b820191906000526020600020905b815481529060010190602001808311610e9157829003601f168201915b5050505050905090565b610ec06117de565b73ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff161415610f2e576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610f25906136fd565b60405180910390fd5b8060056000610f3b6117de565b73ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060006101000a81548160ff0219169083151502179055508173ffffffffffffffffffffffffffffffffffffffff16610fe86117de565b73ffffffffffffffffffffffffffffffffffffffff167f17307eab39ab6107e8899845ad3d59bd9653f200f220920489ca2b5937696c318360405161102d9190613620565b60405180910390a35050565b61104a6110446117de565b836118b4565b611089576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016110809061387d565b60405180910390fd5b61109584848484611c23565b50505050565b6110a361277d565b600f60008381526020019081526020016000206040518060800160405290816000820154815260200160018201548152602001600282015481526020016003820160009054906101000a900460ff1615151515815250509050919050565b600b5481565b6060611112826117c1565b611151576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016111489061383d565b60405180910390fd5b6060600860008481526020019081526020016000208054600181600116156101000203166002900480601f0160208091040260200160405190810160405280929190818152602001828054600181600116156101000203166002900480156111fa5780601f106111cf576101008083540402835291602001916111fa565b820191906000526020600020905b8154815290600101906020018083116111dd57829003601f168201915b50505050509050606061120b610aae565b9050600081511415611221578192505050611285565b60008251111561125657808260405160200161123e929190613536565b60405160208183030381529060405292505050611285565b8061126085611c7f565b604051602001611271929190613536565b604051602081830303815290604052925050505b919050565b6000600560008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060009054906101000a900460ff16905092915050565b600d818154811061132b57fe5b906000526020600020016000915090505481565b6060600d80548060200260200160405190810160405280929190818152602001828054801561138d57602002820191906000526020600020905b815481526020019060010190808311611379575b5050505050905090565b61139f6117de565b73ffffffffffffffffffffffffffffffffffffffff166113bd610dec565b73ffffffffffffffffffffffffffffffffffffffff1614611413576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161140a906137fd565b60405180910390fd5b600073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff161415611483576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161147a9061369d565b60405180910390fd5b8073ffffffffffffffffffffffffffffffffffffffff16600a60009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e060405160405180910390a380600a60006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555050565b600c5481565b600e818154811061155657fe5b906000526020600020016000915054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b60005b81518110156117235760405180608001604052808383815181106115a857fe5b60200260200101516000015181526020018383815181106115c557fe5b60200260200101516020015181526020018383815181106115e257fe5b602002602001015160400151815260200160011515815250600f6000600b54815260200190815260200160002060008201518160000155602082015181600101556040820151816002015560608201518160030160006101000a81548160ff021916908315150217905550905050600d82828151811061165e57fe5b6020026020010151602001519080600181540180825580915050600190039060005260206000200160009091909190915055601060003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020600b54908060018154018082558091505060019003906000526020600020016000909190919091505561170433600b54611dc6565b600b600081548092919060010191905055508080600101915050611588565b50600e339080600181540180825580915050600190039060005260206000200160009091909190916101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055507fe25990158cef48394eca25688e50df28632515e25370a164815fa8151dc447e2336040516117b69190613575565b60405180910390a150565b60006117d7826002611de490919063ffffffff16565b9050919050565b600033905090565b816004600083815260200190815260200160002060006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550808273ffffffffffffffffffffffffffffffffffffffff1661185983610a77565b73ffffffffffffffffffffffffffffffffffffffff167f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b92560405160405180910390a45050565b60006118ad82600001611dfe565b9050919050565b60006118bf826117c1565b6118fe576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016118f59061373d565b60405180910390fd5b600061190983610a77565b90508073ffffffffffffffffffffffffffffffffffffffff168473ffffffffffffffffffffffffffffffffffffffff16148061197857508373ffffffffffffffffffffffffffffffffffffffff1661196084610734565b73ffffffffffffffffffffffffffffffffffffffff16145b806119895750611988818561128a565b5b91505092915050565b8273ffffffffffffffffffffffffffffffffffffffff166119b282610a77565b73ffffffffffffffffffffffffffffffffffffffff1614611a08576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016119ff9061381d565b60405180910390fd5b600073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff161415611a78576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401611a6f906136dd565b60405180910390fd5b611a83838383611e0f565b611a8e6000826117e6565b611adf81600160008673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020611e1490919063ffffffff16565b50611b3181600160008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020611e2e90919063ffffffff16565b50611b4881836002611e489092919063ffffffff16565b50808273ffffffffffffffffffffffffffffffffffffffff168473ffffffffffffffffffffffffffffffffffffffff167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef60405160405180910390a4505050565b6000611bb88360000183611e7d565b60001c905092915050565b600080600080611bd68660000186611eea565b915091508160001c8160001c9350935050509250929050565b6000611c02846000018460001b84611f6d565b60001c90509392505050565b6000611c1c82600001611ffe565b9050919050565b611c2e848484611992565b611c3a8484848461200f565b611c79576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401611c709061367d565b60405180910390fd5b50505050565b60606000821415611cc7576040518060400160405280600181526020017f30000000000000000000000000000000000000000000000000000000000000008152509050611dc1565b600082905060005b60008214611cf1578080600101915050600a8281611ce957fe5b049150611ccf565b60608167ffffffffffffffff81118015611d0a57600080fd5b506040519080825280601f01601f191660200182016040528015611d3d5781602001600182028036833780820191505090505b50905060006001830390508593505b60008414611db957600a8481611d5e57fe5b0660300160f81b82828060019003935081518110611d7857fe5b60200101907effffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916908160001a905350600a8481611db157fe5b049350611d4c565b819450505050505b919050565b611de0828260405180602001604052806000815250612173565b5050565b6000611df6836000018360001b6121ce565b905092915050565b600081600001805490509050919050565b505050565b6000611e26836000018360001b6121f1565b905092915050565b6000611e40836000018360001b6122d9565b905092915050565b6000611e74846000018460001b8473ffffffffffffffffffffffffffffffffffffffff1660001b612349565b90509392505050565b600081836000018054905011611ec8576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401611ebf9061365d565b60405180910390fd5b826000018281548110611ed757fe5b9060005260206000200154905092915050565b60008082846000018054905011611f36576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401611f2d9061379d565b60405180910390fd5b6000846000018481548110611f4757fe5b906000526020600020906002020190508060000154816001015492509250509250929050565b60008084600101600085815260200190815260200160002054905060008114158390611fcf576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401611fc6919061363b565b60405180910390fd5b50846000016001820381548110611fe257fe5b9060005260206000209060020201600101549150509392505050565b600081600001805490509050919050565b60006120308473ffffffffffffffffffffffffffffffffffffffff16612425565b61203d576001905061216b565b606061210463150b7a0260e01b6120526117de565b8887876040516024016120689493929190613590565b604051602081830303815290604052907bffffffffffffffffffffffffffffffffffffffffffffffffffffffff19166020820180517bffffffffffffffffffffffffffffffffffffffffffffffffffffffff8381831617835250505050604051806060016040528060328152602001613ba0603291398773ffffffffffffffffffffffffffffffffffffffff166124389092919063ffffffff16565b905060008180602001905181019061211c9190612b6c565b905063150b7a0260e01b7bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916817bffffffffffffffffffffffffffffffffffffffffffffffffffffffff191614925050505b949350505050565b61217d8383612450565b61218a600084848461200f565b6121c9576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016121c09061367d565b60405180910390fd5b505050565b600080836001016000848152602001908152602001600020541415905092915050565b600080836001016000848152602001908152602001600020549050600081146122cd576000600182039050600060018660000180549050039050600086600001828154811061223c57fe5b906000526020600020015490508087600001848154811061225957fe5b906000526020600020018190555060018301876001016000838152602001908152602001600020819055508660000180548061229157fe5b600190038181906000526020600020016000905590558660010160008781526020019081526020016000206000905560019450505050506122d3565b60009150505b92915050565b60006122e583836125de565b61233e578260000182908060018154018082558091505060019003906000526020600020016000909190919091505582600001805490508360010160008481526020019081526020016000208190555060019050612343565b600090505b92915050565b60008084600101600085815260200190815260200160002054905060008114156123f05784600001604051806040016040528086815260200185815250908060018154018082558091505060019003906000526020600020906002020160009091909190915060008201518160000155602082015181600101555050846000018054905085600101600086815260200190815260200160002081905550600191505061241e565b8285600001600183038154811061240357fe5b90600052602060002090600202016001018190555060009150505b9392505050565b600080823b905060008111915050919050565b60606124478484600085612601565b90509392505050565b600073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff1614156124c0576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016124b7906137bd565b60405180910390fd5b6124c9816117c1565b15612509576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401612500906136bd565b60405180910390fd5b61251560008383611e0f565b61256681600160008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020611e2e90919063ffffffff16565b5061257d81836002611e489092919063ffffffff16565b50808273ffffffffffffffffffffffffffffffffffffffff16600073ffffffffffffffffffffffffffffffffffffffff167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef60405160405180910390a45050565b600080836001016000848152602001908152602001600020541415905092915050565b606082471015612646576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161263d9061371d565b60405180910390fd5b61264f85612425565b61268e576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016126859061389d565b60405180910390fd5b600060608673ffffffffffffffffffffffffffffffffffffffff1685876040516126b8919061351f565b60006040518083038185875af1925050503d80600081146126f5576040519150601f19603f3d011682016040523d82523d6000602084013e6126fa565b606091505b509150915061270a828286612716565b92505050949350505050565b6060831561272657829050612776565b6000835111156127395782518084602001fd5b816040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161276d919061363b565b60405180910390fd5b9392505050565b60405180608001604052806000815260200160008152602001600081526020016000151581525090565b6000813590506127b681613b43565b92915050565b600082601f8301126127cd57600080fd5b81356127e06127db82613920565b6138f3565b9150818183526020840193506020810190508385608084028201111561280557600080fd5b60005b83811015612835578161281b88826128d2565b845260208401935060808301925050600181019050612808565b5050505092915050565b60008135905061284e81613b5a565b92915050565b60008135905061286381613b71565b92915050565b60008151905061287881613b71565b92915050565b600082601f83011261288f57600080fd5b81356128a261289d82613948565b6138f3565b915080825260208301602083018583830111156128be57600080fd5b6128c9838284613af0565b50505092915050565b6000608082840312156128e457600080fd5b6128ee60806138f3565b905060006128fe84828501612946565b600083015250602061291284828501612946565b602083015250604061292684828501612946565b604083015250606061293a8482850161283f565b60608301525092915050565b60008135905061295581613b88565b92915050565b60006020828403121561296d57600080fd5b600061297b848285016127a7565b91505092915050565b6000806040838503121561299757600080fd5b60006129a5858286016127a7565b92505060206129b6858286016127a7565b9150509250929050565b6000806000606084860312156129d557600080fd5b60006129e3868287016127a7565b93505060206129f4868287016127a7565b9250506040612a0586828701612946565b9150509250925092565b60008060008060808587031215612a2557600080fd5b6000612a33878288016127a7565b9450506020612a44878288016127a7565b9350506040612a5587828801612946565b925050606085013567ffffffffffffffff811115612a7257600080fd5b612a7e8782880161287e565b91505092959194509250565b60008060408385031215612a9d57600080fd5b6000612aab858286016127a7565b9250506020612abc8582860161283f565b9150509250929050565b60008060408385031215612ad957600080fd5b6000612ae7858286016127a7565b9250506020612af885828601612946565b9150509250929050565b600060208284031215612b1457600080fd5b600082013567ffffffffffffffff811115612b2e57600080fd5b612b3a848285016127bc565b91505092915050565b600060208284031215612b5557600080fd5b6000612b6384828501612854565b91505092915050565b600060208284031215612b7e57600080fd5b6000612b8c84828501612869565b91505092915050565b600060208284031215612ba757600080fd5b6000612bb584828501612946565b91505092915050565b6000612bca8383612c0c565b60208301905092915050565b6000612be28383613501565b60208301905092915050565b612bf781613aba565b82525050565b612c0681613a46565b82525050565b612c1581613a34565b82525050565b612c2481613a34565b82525050565b6000612c3582613994565b612c3f81856139da565b9350612c4a83613974565b8060005b83811015612c7b578151612c628882612bbe565b9750612c6d836139c0565b925050600181019050612c4e565b5085935050505092915050565b6000612c938261399f565b612c9d81856139eb565b9350612ca883613984565b8060005b83811015612cd9578151612cc08882612bd6565b9750612ccb836139cd565b925050600181019050612cac565b5085935050505092915050565b612cef81613a58565b82525050565b612cfe81613a58565b82525050565b6000612d0f826139aa565b612d1981856139fc565b9350612d29818560208601613aff565b612d3281613b32565b840191505092915050565b6000612d48826139aa565b612d528185613a0d565b9350612d62818560208601613aff565b80840191505092915050565b6000612d79826139b5565b612d838185613a18565b9350612d93818560208601613aff565b612d9c81613b32565b840191505092915050565b6000612db2826139b5565b612dbc8185613a29565b9350612dcc818560208601613aff565b80840191505092915050565b6000612de5602283613a18565b91507f456e756d657261626c655365743a20696e646578206f7574206f6620626f756e60008301527f64730000000000000000000000000000000000000000000000000000000000006020830152604082019050919050565b6000612e4b603283613a18565b91507f4552433732313a207472616e7366657220746f206e6f6e20455243373231526560008301527f63656976657220696d706c656d656e74657200000000000000000000000000006020830152604082019050919050565b6000612eb1602683613a18565b91507f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160008301527f64647265737300000000000000000000000000000000000000000000000000006020830152604082019050919050565b6000612f17601c83613a18565b91507f4552433732313a20746f6b656e20616c7265616479206d696e746564000000006000830152602082019050919050565b6000612f57602483613a18565b91507f4552433732313a207472616e7366657220746f20746865207a65726f2061646460008301527f72657373000000000000000000000000000000000000000000000000000000006020830152604082019050919050565b6000612fbd601983613a18565b91507f4552433732313a20617070726f766520746f2063616c6c6572000000000000006000830152602082019050919050565b6000612ffd602683613a18565b91507f416464726573733a20696e73756666696369656e742062616c616e636520666f60008301527f722063616c6c00000000000000000000000000000000000000000000000000006020830152604082019050919050565b6000613063602c83613a18565b91507f4552433732313a206f70657261746f7220717565727920666f72206e6f6e657860008301527f697374656e7420746f6b656e00000000000000000000000000000000000000006020830152604082019050919050565b60006130c9603883613a18565b91507f4552433732313a20617070726f76652063616c6c6572206973206e6f74206f7760008301527f6e6572206e6f7220617070726f76656420666f7220616c6c00000000000000006020830152604082019050919050565b600061312f602a83613a18565b91507f4552433732313a2062616c616e636520717565727920666f7220746865207a6560008301527f726f2061646472657373000000000000000000000000000000000000000000006020830152604082019050919050565b6000613195602283613a18565b91507f456e756d657261626c654d61703a20696e646578206f7574206f6620626f756e60008301527f64730000000000000000000000000000000000000000000000000000000000006020830152604082019050919050565b60006131fb602083613a18565b91507f4552433732313a206d696e7420746f20746865207a65726f20616464726573736000830152602082019050919050565b600061323b602c83613a18565b91507f4552433732313a20617070726f76656420717565727920666f72206e6f6e657860008301527f697374656e7420746f6b656e00000000000000000000000000000000000000006020830152604082019050919050565b60006132a1602083613a18565b91507f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e65726000830152602082019050919050565b60006132e1602983613a18565b91507f4552433732313a207472616e73666572206f6620746f6b656e2074686174206960008301527f73206e6f74206f776e00000000000000000000000000000000000000000000006020830152604082019050919050565b6000613347602f83613a18565b91507f4552433732314d657461646174613a2055524920717565727920666f72206e6f60008301527f6e6578697374656e7420746f6b656e00000000000000000000000000000000006020830152604082019050919050565b60006133ad602183613a18565b91507f4552433732313a20617070726f76616c20746f2063757272656e74206f776e6560008301527f72000000000000000000000000000000000000000000000000000000000000006020830152604082019050919050565b6000613413603183613a18565b91507f4552433732313a207472616e736665722063616c6c6572206973206e6f74206f60008301527f776e6572206e6f7220617070726f7665640000000000000000000000000000006020830152604082019050919050565b6000613479601d83613a18565b91507f416464726573733a2063616c6c20746f206e6f6e2d636f6e74726163740000006000830152602082019050919050565b6080820160008201516134c26000850182613501565b5060208201516134d56020850182613501565b5060408201516134e86040850182613501565b5060608201516134fb6060850182612ce6565b50505050565b61350a81613ab0565b82525050565b61351981613ab0565b82525050565b600061352b8284612d3d565b915081905092915050565b60006135428285612da7565b915061354e8284612da7565b91508190509392505050565b600060208201905061356f6000830184612c1b565b92915050565b600060208201905061358a6000830184612bee565b92915050565b60006080820190506135a56000830187612bfd565b6135b26020830186612c1b565b6135bf6040830185613510565b81810360608301526135d18184612d04565b905095945050505050565b600060208201905081810360008301526135f68184612c2a565b905092915050565b600060208201905081810360008301526136188184612c88565b905092915050565b60006020820190506136356000830184612cf5565b92915050565b600060208201905081810360008301526136558184612d6e565b905092915050565b6000602082019050818103600083015261367681612dd8565b9050919050565b6000602082019050818103600083015261369681612e3e565b9050919050565b600060208201905081810360008301526136b681612ea4565b9050919050565b600060208201905081810360008301526136d681612f0a565b9050919050565b600060208201905081810360008301526136f681612f4a565b9050919050565b6000602082019050818103600083015261371681612fb0565b9050919050565b6000602082019050818103600083015261373681612ff0565b9050919050565b6000602082019050818103600083015261375681613056565b9050919050565b60006020820190508181036000830152613776816130bc565b9050919050565b6000602082019050818103600083015261379681613122565b9050919050565b600060208201905081810360008301526137b681613188565b9050919050565b600060208201905081810360008301526137d6816131ee565b9050919050565b600060208201905081810360008301526137f68161322e565b9050919050565b6000602082019050818103600083015261381681613294565b9050919050565b60006020820190508181036000830152613836816132d4565b9050919050565b600060208201905081810360008301526138568161333a565b9050919050565b60006020820190508181036000830152613876816133a0565b9050919050565b6000602082019050818103600083015261389681613406565b9050919050565b600060208201905081810360008301526138b68161346c565b9050919050565b60006080820190506138d260008301846134ac565b92915050565b60006020820190506138ed6000830184613510565b92915050565b6000604051905081810181811067ffffffffffffffff8211171561391657600080fd5b8060405250919050565b600067ffffffffffffffff82111561393757600080fd5b602082029050602081019050919050565b600067ffffffffffffffff82111561395f57600080fd5b601f19601f8301169050602081019050919050565b6000819050602082019050919050565b6000819050602082019050919050565b600081519050919050565b600081519050919050565b600081519050919050565b600081519050919050565b6000602082019050919050565b6000602082019050919050565b600082825260208201905092915050565b600082825260208201905092915050565b600082825260208201905092915050565b600081905092915050565b600082825260208201905092915050565b600081905092915050565b6000613a3f82613a90565b9050919050565b6000613a5182613a90565b9050919050565b60008115159050919050565b60007fffffffff0000000000000000000000000000000000000000000000000000000082169050919050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6000819050919050565b6000613ac582613acc565b9050919050565b6000613ad782613ade565b9050919050565b6000613ae982613a90565b9050919050565b82818337600083830152505050565b60005b83811015613b1d578082015181840152602081019050613b02565b83811115613b2c576000848401525b50505050565b6000601f19601f8301169050919050565b613b4c81613a34565b8114613b5757600080fd5b50565b613b6381613a58565b8114613b6e57600080fd5b50565b613b7a81613a64565b8114613b8557600080fd5b50565b613b9181613ab0565b8114613b9c57600080fd5b5056fe4552433732313a207472616e7366657220746f206e6f6e20455243373231526563656976657220696d706c656d656e7465724552433732313a206f776e657220717565727920666f72206e6f6e6578697374656e7420746f6b656ea2646970667358221220aedcb4d1a5d55325a41d9b5e21796c81bb735799e970551d877ffa9f71b1c98d64736f6c634300060c0033",
  "immutableReferences": {},
  "sourceMap": "186:1453:0:-:0;;;402:1;382:21;;436:1;407:30;;227:53;;;;;;;;;;3577:369:5;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;768:40:2;435:10;787:20;;768:18;;;:40;;:::i;:::-;3659:5:5;3651;:13;;;;;;;;;;;;:::i;:::-;;3684:7;3674;:17;;;;;;;;;;;;:::i;:::-;;3779:40;2742:10;3798:20;;3779:18;;;:40;;:::i;:::-;3829:49;3074:10;3848:29;;3829:18;;;:49;;:::i;:::-;3888:51;3447:10;3907:31;;3888:18;;;:51;;:::i;:::-;3577:369;;884:17:1;904:12;:10;;;:12;;:::i;:::-;884:32;;935:9;926:6;;:18;;;;;;;;;;;;;;;;;;992:9;959:43;;988:1;959:43;;;;;;;;;;;;850:159;186:1453:0;;1507:198:2;1605:10;1590:25;;:11;:25;;;;;1582:66;;;;;;;;;;;;:::i;:::-;;;;;;;;;1694:4;1658:20;:33;1679:11;1658:33;;;;;;;;;;;;;;;;;;:40;;;;;;;;;;;;;;;;;;1507:198;:::o;598:104:11:-;651:15;685:10;678:17;;598:104;:::o;186:1453:0:-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;:::o;:::-;;;;;;;;;;;;;;;;;;;;;:::o;6:328:-1:-;;166:67;230:2;225:3;166:67;:::i;:::-;159:74;;266:30;262:1;257:3;253:11;246:51;325:2;320:3;316:12;309:19;;152:182;;;:::o;342:416::-;;542:2;531:9;527:18;519:26;;592:9;586:4;582:20;578:1;567:9;563:17;556:47;617:131;743:4;617:131;:::i;:::-;609:139;;513:245;;;:::o;766:163::-;;881:6;876:3;869:19;918:4;913:3;909:14;894:29;;862:67;;;;:::o;186:1453:0:-;;;;;;;",
  "deployedSourceMap": "186:1453:0:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;965:148:2;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;4517:98:5;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;7222:217;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;6766:395;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;6260:208;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;8086:300;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;6029:160;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;8452:149;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;6540:169;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;1054:115:0;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;4280:175:5;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;5855:95;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;4005:218;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;1717:145:1;;;:::i;:::-;;950:99:0;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;860:85;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;1085::1;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;4679:102:5;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;7506:290;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;8667:282;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;644:112:0;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;382:21;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;4847:776:5;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;7862:162;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;441:30:0;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;761:93;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;2011:240:1;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;407:30:0;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;475:24;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;1174:462;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;965:148:2;1050:4;1073:20;:33;1094:11;1073:33;;;;;;;;;;;;;;;;;;;;;;;;;;;1066:40;;965:148;;;:::o;4517:98:5:-;4571:13;4603:5;4596:12;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;4517:98;:::o;7222:217::-;7298:7;7325:16;7333:7;7325;:16::i;:::-;7317:73;;;;;;;;;;;;:::i;:::-;;;;;;;;;7408:15;:24;7424:7;7408:24;;;;;;;;;;;;;;;;;;;;;7401:31;;7222:217;;;:::o;6766:395::-;6846:13;6862:23;6877:7;6862:14;:23::i;:::-;6846:39;;6909:5;6903:11;;:2;:11;;;;6895:57;;;;;;;;;;;;:::i;:::-;;;;;;;;;6987:5;6971:21;;:12;:10;:12::i;:::-;:21;;;:69;;;;6996:44;7020:5;7027:12;:10;:12::i;:::-;6996:23;:44::i;:::-;6971:69;6963:159;;;;;;;;;;;;:::i;:::-;;;;;;;;;7133:21;7142:2;7146:7;7133:8;:21::i;:::-;6766:395;;;:::o;6260:208::-;6321:7;6440:21;:12;:19;:21::i;:::-;6433:28;;6260:208;:::o;8086:300::-;8245:41;8264:12;:10;:12::i;:::-;8278:7;8245:18;:41::i;:::-;8237:103;;;;;;;;;;;;:::i;:::-;;;;;;;;;8351:28;8361:4;8367:2;8371:7;8351:9;:28::i;:::-;8086:300;;;:::o;6029:160::-;6126:7;6152:30;6176:5;6152:13;:20;6166:5;6152:20;;;;;;;;;;;;;;;:23;;:30;;;;:::i;:::-;6145:37;;6029:160;;;;:::o;8452:149::-;8555:39;8572:4;8578:2;8582:7;8555:39;;;;;;;;;;;;:16;:39::i;:::-;8452:149;;;:::o;6540:169::-;6615:7;6635:15;6656:22;6672:5;6656:12;:15;;:22;;;;:::i;:::-;6634:44;;;6695:7;6688:14;;;6540:169;;;:::o;1054:115:0:-;1115:14;1143:13;:21;1157:6;1143:21;;;;;;;;;;;;;;;1136:28;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1054:115;;;:::o;4280:175:5:-;4352:7;4378:70;4395:7;4378:70;;;;;;;;;;;;;;;;;:12;:16;;:70;;;;;:::i;:::-;4371:77;;4280:175;;;:::o;5855:95::-;5903:13;5935:8;5928:15;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;5855:95;:::o;4005:218::-;4077:7;4121:1;4104:19;;:5;:19;;;;4096:74;;;;;;;;;;;;:::i;:::-;;;;;;;;;4187:29;:13;:20;4201:5;4187:20;;;;;;;;;;;;;;;:27;:29::i;:::-;4180:36;;4005:218;;;:::o;1717:145:1:-;1308:12;:10;:12::i;:::-;1297:23;;:7;:5;:7::i;:::-;:23;;;1289:68;;;;;;;;;;;;:::i;:::-;;;;;;;;;1823:1:::1;1786:40;;1807:6;;;;;;;;;;;1786:40;;;;;;;;;;;;1853:1;1836:6;;:19;;;;;;;;;;;;;;;;;;1717:145::o:0;950:99:0:-;1008:7;1028:16;1036:7;1028;:16::i;:::-;1021:23;;950:99;;;:::o;860:85::-;902:17;933:7;926:14;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;860:85;:::o;1085::1:-;1131:7;1157:6;;;;;;;;;;;1150:13;;1085:85;:::o;4679:102:5:-;4735:13;4767:7;4760:14;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;4679:102;:::o;7506:290::-;7620:12;:10;:12::i;:::-;7608:24;;:8;:24;;;;7600:62;;;;;;;;;;;;:::i;:::-;;;;;;;;;7718:8;7673:18;:32;7692:12;:10;:12::i;:::-;7673:32;;;;;;;;;;;;;;;:42;7706:8;7673:42;;;;;;;;;;;;;;;;:53;;;;;;;;;;;;;;;;;;7770:8;7741:48;;7756:12;:10;:12::i;:::-;7741:48;;;7780:8;7741:48;;;;;;:::i;:::-;;;;;;;;7506:290;;:::o;8667:282::-;8798:41;8817:12;:10;:12::i;:::-;8831:7;8798:18;:41::i;:::-;8790:103;;;;;;;;;;;;:::i;:::-;;;;;;;;;8903:39;8917:4;8923:2;8927:7;8936:5;8903:13;:39::i;:::-;8667:282;;;;:::o;644:112:0:-;707:11;;:::i;:::-;732:10;:19;743:7;732:19;;;;;;;;;;;725:26;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;644:112;;;:::o;382:21::-;;;;:::o;4847:776:5:-;4920:13;4953:16;4961:7;4953;:16::i;:::-;4945:76;;;;;;;;;;;;:::i;:::-;;;;;;;;;5032:23;5058:10;:19;5069:7;5058:19;;;;;;;;;;;5032:45;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;5087:18;5108:9;:7;:9::i;:::-;5087:30;;5212:1;5196:4;5190:18;:23;5186:70;;;5236:9;5229:16;;;;;;5186:70;5384:1;5364:9;5358:23;:27;5354:106;;;5432:4;5438:9;5415:33;;;;;;;;;:::i;:::-;;;;;;;;;;;;;5401:48;;;;;;5354:106;5590:4;5596:18;:7;:16;:18::i;:::-;5573:42;;;;;;;;;:::i;:::-;;;;;;;;;;;;;5559:57;;;;4847:776;;;;:::o;7862:162::-;7959:4;7982:18;:25;8001:5;7982:25;;;;;;;;;;;;;;;:35;8008:8;7982:35;;;;;;;;;;;;;;;;;;;;;;;;;7975:42;;7862:162;;;;:::o;441:30:0:-;;;;;;;;;;;;;;;;;;;;;;;;;:::o;761:93::-;806:13;833:16;826:23;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;761:93;:::o;2011:240:1:-;1308:12;:10;:12::i;:::-;1297:23;;:7;:5;:7::i;:::-;:23;;;1289:68;;;;;;;;;;;;:::i;:::-;;;;;;;;;2119:1:::1;2099:22;;:8;:22;;;;2091:73;;;;;;;;;;;;:::i;:::-;;;;;;;;;2208:8;2179:38;;2200:6;;;;;;;;;;;2179:38;;;;;;;;;;;;2236:8;2227:6;;:17;;;;;;;;;;;;;;;;;;2011:240:::0;:::o;407:30:0:-;;;;:::o;475:24::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;1174:462::-;1237:6;1232:339;1253:9;:16;1249:1;:20;1232:339;;;1346:80;;;;;;;;1351:9;1361:1;1351:12;;;;;;;;;;;;;;:20;;;1346:80;;;;1373:9;1383:1;1373:12;;;;;;;;;;;;;;:20;;;1346:80;;;;1395:9;1405:1;1395:12;;;;;;;;;;;;;;:24;;;1346:80;;;;1421:4;1346:80;;;;;1326:10;:17;1337:5;;1326:17;;;;;;;;;;;:100;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1432:16;1454:9;1464:1;1454:12;;;;;;;;;;;;;;:20;;;1432:43;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1481:13;:25;1495:10;1481:25;;;;;;;;;;;;;;;1512:5;;1481:37;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1524:28;1534:10;1546:5;;1524:9;:28::i;:::-;1558:5;;:7;;;;;;;;;;;;;1271:3;;;;;;;1232:339;;;;1575:7;1588:10;1575:24;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1609:22;1620:10;1609:22;;;;;;:::i;:::-;;;;;;;;1174:462;:::o;10383:125:5:-;10448:4;10471:30;10493:7;10471:12;:21;;:30;;;;:::i;:::-;10464:37;;10383:125;;;:::o;598:104:11:-;651:15;685:10;678:17;;598:104;:::o;16225:189:5:-;16326:2;16299:15;:24;16315:7;16299:24;;;;;;;;;;;;:29;;;;;;;;;;;;;;;;;;16381:7;16377:2;16343:46;;16352:23;16367:7;16352:14;:23::i;:::-;16343:46;;;;;;;;;;;;16225:189;;:::o;7820:121:12:-;7889:7;7915:19;7923:3;:10;;7915:7;:19::i;:::-;7908:26;;7820:121;;;:::o;10666:351:5:-;10759:4;10783:16;10791:7;10783;:16::i;:::-;10775:73;;;;;;;;;;;;:::i;:::-;;;;;;;;;10858:13;10874:23;10889:7;10874:14;:23::i;:::-;10858:39;;10926:5;10915:16;;:7;:16;;;:51;;;;10959:7;10935:31;;:20;10947:7;10935:11;:20::i;:::-;:31;;;10915:51;:94;;;;10970:39;10994:5;11001:7;10970:23;:39::i;:::-;10915:94;10907:103;;;10666:351;;;;:::o;13707:584::-;13831:4;13804:31;;:23;13819:7;13804:14;:23::i;:::-;:31;;;13796:85;;;;;;;;;;;;:::i;:::-;;;;;;;;;13931:1;13917:16;;:2;:16;;;;13909:65;;;;;;;;;;;;:::i;:::-;;;;;;;;;13985:39;14006:4;14012:2;14016:7;13985:20;:39::i;:::-;14086:29;14103:1;14107:7;14086:8;:29::i;:::-;14126:35;14153:7;14126:13;:19;14140:4;14126:19;;;;;;;;;;;;;;;:26;;:35;;;;:::i;:::-;;14171:30;14193:7;14171:13;:17;14185:2;14171:17;;;;;;;;;;;;;;;:21;;:30;;;;:::i;:::-;;14212:29;14229:7;14238:2;14212:12;:16;;:29;;;;;:::i;:::-;;14276:7;14272:2;14257:27;;14266:4;14257:27;;;;;;;;;;;;13707:584;;;:::o;9250:135:13:-;9321:7;9355:22;9359:3;:10;;9371:5;9355:3;:22::i;:::-;9347:31;;9340:38;;9250:135;;;;:::o;8269:233:12:-;8349:7;8358;8378:11;8391:13;8408:22;8412:3;:10;;8424:5;8408:3;:22::i;:::-;8377:53;;;;8456:3;8448:12;;8486:5;8478:14;;8440:55;;;;;;8269:233;;;;;:::o;9522:211::-;9629:7;9679:44;9684:3;:10;;9704:3;9696:12;;9710;9679:4;:44::i;:::-;9671:53;;9648:78;;9522:211;;;;;:::o;8806:112:13:-;8866:7;8892:19;8900:3;:10;;8892:7;:19::i;:::-;8885:26;;8806:112;;;:::o;9811:269:5:-;9924:28;9934:4;9940:2;9944:7;9924:9;:28::i;:::-;9970:48;9993:4;9999:2;10003:7;10012:5;9970:22;:48::i;:::-;9962:111;;;;;;;;;;;;:::i;:::-;;;;;;;;;9811:269;;;;:::o;210:725:14:-;266:13;492:1;483:5;:10;479:51;;;509:10;;;;;;;;;;;;;;;;;;;;;479:51;539:12;554:5;539:20;;569:14;593:75;608:1;600:4;:9;593:75;;625:8;;;;;;;655:2;647:10;;;;;;;;;593:75;;;677:19;709:6;699:17;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;677:39;;726:13;751:1;742:6;:10;726:26;;769:5;762:12;;784:114;799:1;791:4;:9;784:114;;859:2;852:4;:9;;;;;;847:2;:14;834:29;;816:6;823:7;;;;;;;816:15;;;;;;;;;;;:47;;;;;;;;;;;885:2;877:10;;;;;;;;;784:114;;;921:6;907:21;;;;;;210:725;;;;:::o;11348:108:5:-;11423:26;11433:2;11437:7;11423:26;;;;;;;;;;;;:9;:26::i;:::-;11348:108;;:::o;7588:149:12:-;7672:4;7695:35;7705:3;:10;;7725:3;7717:12;;7695:9;:35::i;:::-;7688:42;;7588:149;;;;:::o;4491:108::-;4547:7;4573:3;:12;;:19;;;;4566:26;;4491:108;;;:::o;17010:93:5:-;;;;:::o;8365:135:13:-;8435:4;8458:35;8466:3;:10;;8486:5;8478:14;;8458:7;:35::i;:::-;8451:42;;8365:135;;;;:::o;8068:129::-;8135:4;8158:32;8163:3;:10;;8183:5;8175:14;;8158:4;:32::i;:::-;8151:39;;8068:129;;;;:::o;7027:183:12:-;7116:4;7139:64;7144:3;:10;;7164:3;7156:12;;7194:5;7178:23;;7170:32;;7139:4;:64::i;:::-;7132:71;;7027:183;;;;;:::o;4452:201:13:-;4519:7;4567:5;4546:3;:11;;:18;;;;:26;4538:73;;;;;;;;;;;;:::i;:::-;;;;;;;;;4628:3;:11;;4640:5;4628:18;;;;;;;;;;;;;;;;4621:25;;4452:201;;;;:::o;4942:274:12:-;5009:7;5018;5067:5;5045:3;:12;;:19;;;;:27;5037:74;;;;;;;;;;;;:::i;:::-;;;;;;;;;5122:22;5147:3;:12;;5160:5;5147:19;;;;;;;;;;;;;;;;;;5122:44;;5184:5;:10;;;5196:5;:12;;;5176:33;;;;;4942:274;;;;;:::o;6403:315::-;6497:7;6516:16;6535:3;:12;;:17;6548:3;6535:17;;;;;;;;;;;;6516:36;;6582:1;6570:8;:13;;6585:12;6562:36;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;6651:3;:12;;6675:1;6664:8;:12;6651:26;;;;;;;;;;;;;;;;;;:33;;;6644:40;;;6403:315;;;;;:::o;4013:107:13:-;4069:7;4095:3;:11;;:18;;;;4088:25;;4013:107;;;:::o;15524:589:5:-;15644:4;15669:15;:2;:13;;;:15::i;:::-;15664:58;;15707:4;15700:11;;;;15664:58;15731:23;15757:246;15809:45;;;15868:12;:10;:12::i;:::-;15894:4;15912:7;15933:5;15773:175;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;15757:246;;;;;;;;;;;;;;;;;:2;:15;;;;:246;;;;;:::i;:::-;15731:272;;16013:13;16040:10;16029:32;;;;;;;;;;;;:::i;:::-;16013:48;;1078:10;16089:16;;16079:26;;;:6;:26;;;;16071:35;;;;15524:589;;;;;;;:::o;11677:247::-;11772:18;11778:2;11782:7;11772:5;:18::i;:::-;11808:54;11839:1;11843:2;11847:7;11856:5;11808:22;:54::i;:::-;11800:117;;;;;;;;;;;;:::i;:::-;;;;;;;;;11677:247;;;:::o;4278:123:12:-;4349:4;4393:1;4372:3;:12;;:17;4385:3;4372:17;;;;;;;;;;;;:22;;4365:29;;4278:123;;;;:::o;2212:1512:13:-;2278:4;2394:18;2415:3;:12;;:19;2428:5;2415:19;;;;;;;;;;;;2394:40;;2463:1;2449:10;:15;2445:1273;;2806:21;2843:1;2830:10;:14;2806:38;;2858:17;2899:1;2878:3;:11;;:18;;;;:22;2858:42;;3140:17;3160:3;:11;;3172:9;3160:22;;;;;;;;;;;;;;;;3140:42;;3303:9;3274:3;:11;;3286:13;3274:26;;;;;;;;;;;;;;;:38;;;;3420:1;3404:13;:17;3378:3;:12;;:23;3391:9;3378:23;;;;;;;;;;;:43;;;;3527:3;:11;;:17;;;;;;;;;;;;;;;;;;;;;;;;3619:3;:12;;:19;3632:5;3619:19;;;;;;;;;;;3612:26;;;3660:4;3653:11;;;;;;;;2445:1273;3702:5;3695:12;;;2212:1512;;;;;:::o;1640:404::-;1703:4;1724:21;1734:3;1739:5;1724:9;:21::i;:::-;1719:319;;1761:3;:11;;1778:5;1761:23;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1941:3;:11;;:18;;;;1919:3;:12;;:19;1932:5;1919:19;;;;;;;;;;;:40;;;;1980:4;1973:11;;;;1719:319;2022:5;2015:12;;1640:404;;;;;:::o;1836:678:12:-;1912:4;2026:16;2045:3;:12;;:17;2058:3;2045:17;;;;;;;;;;;;2026:36;;2089:1;2077:8;:13;2073:435;;;2143:3;:12;;2161:38;;;;;;;;2178:3;2161:38;;;;2191:5;2161:38;;;2143:57;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2355:3;:12;;:19;;;;2335:3;:12;;:17;2348:3;2335:17;;;;;;;;;;;:39;;;;2395:4;2388:11;;;;;2073:435;2466:5;2430:3;:12;;2454:1;2443:8;:12;2430:26;;;;;;;;;;;;;;;;;;:33;;:41;;;;2492:5;2485:12;;;1836:678;;;;;;:::o;726:413:10:-;786:4;989:12;1098:7;1086:20;1078:28;;1131:1;1124:4;:8;1117:15;;;726:413;;;:::o;3581:193::-;3684:12;3715:52;3737:6;3745:4;3751:1;3754:12;3715:21;:52::i;:::-;3708:59;;3581:193;;;;;:::o;12246:393:5:-;12339:1;12325:16;;:2;:16;;;;12317:61;;;;;;;;;;;;:::i;:::-;;;;;;;;;12397:16;12405:7;12397;:16::i;:::-;12396:17;12388:58;;;;;;;;;;;;:::i;:::-;;;;;;;;;12457:45;12486:1;12490:2;12494:7;12457:20;:45::i;:::-;12513:30;12535:7;12513:13;:17;12527:2;12513:17;;;;;;;;;;;;;;;:21;;:30;;;;:::i;:::-;;12554:29;12571:7;12580:2;12554:12;:16;;:29;;;;;:::i;:::-;;12624:7;12620:2;12599:33;;12616:1;12599:33;;;;;;;;;;;;12246:393;;:::o;3805:127:13:-;3878:4;3924:1;3901:3;:12;;:19;3914:5;3901:19;;;;;;;;;;;;:24;;3894:31;;3805:127;;;;:::o;4608:523:10:-;4735:12;4792:5;4767:21;:30;;4759:81;;;;;;;;;;;;:::i;:::-;;;;;;;;;4858:18;4869:6;4858:10;:18::i;:::-;4850:60;;;;;;;;;;;;:::i;:::-;;;;;;;;;4981:12;4995:23;5022:6;:11;;5042:5;5050:4;5022:33;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;4980:75;;;;5072:52;5090:7;5099:10;5111:12;5072:17;:52::i;:::-;5065:59;;;;4608:523;;;;;;:::o;7091:725::-;7206:12;7234:7;7230:580;;;7264:10;7257:17;;;;7230:580;7395:1;7375:10;:17;:21;7371:429;;;7633:10;7627:17;7693:15;7680:10;7676:2;7672:19;7665:44;7582:145;7772:12;7765:20;;;;;;;;;;;:::i;:::-;;;;;;;;7091:725;;;;;;:::o;-1:-1:-1:-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;5:130::-;;85:6;72:20;63:29;;97:33;124:5;97:33;:::i;:::-;57:78;;;;:::o;173:767::-;;310:3;303:4;295:6;291:17;287:27;277:2;;328:1;325;318:12;277:2;365:6;352:20;387:100;402:84;479:6;402:84;:::i;:::-;387:100;:::i;:::-;378:109;;504:5;529:6;522:5;515:21;559:4;551:6;547:17;537:27;;581:4;576:3;572:14;565:21;;634:6;681:3;673:4;665:6;661:17;656:3;652:27;649:36;646:2;;;698:1;695;688:12;646:2;723:1;708:226;733:6;730:1;727:13;708:226;;;791:3;813:57;866:3;854:10;813:57;:::i;:::-;808:3;801:70;894:4;889:3;885:14;878:21;;922:4;917:3;913:14;906:21;;765:169;755:1;752;748:9;743:14;;708:226;;;712:14;270:670;;;;;;;:::o;948:124::-;;1025:6;1012:20;1003:29;;1037:30;1061:5;1037:30;:::i;:::-;997:75;;;;:::o;1079:128::-;;1158:6;1145:20;1136:29;;1170:32;1196:5;1170:32;:::i;:::-;1130:77;;;;:::o;1214:132::-;;1297:6;1291:13;1282:22;;1309:32;1335:5;1309:32;:::i;:::-;1276:70;;;;:::o;1354:440::-;;1455:3;1448:4;1440:6;1436:17;1432:27;1422:2;;1473:1;1470;1463:12;1422:2;1510:6;1497:20;1532:64;1547:48;1588:6;1547:48;:::i;:::-;1532:64;:::i;:::-;1523:73;;1616:6;1609:5;1602:21;1652:4;1644:6;1640:17;1685:4;1678:5;1674:16;1720:3;1711:6;1706:3;1702:16;1699:25;1696:2;;;1737:1;1734;1727:12;1696:2;1747:41;1781:6;1776:3;1771;1747:41;:::i;:::-;1415:379;;;;;;;:::o;1829:766::-;;1938:4;1926:9;1921:3;1917:19;1913:30;1910:2;;;1956:1;1953;1946:12;1910:2;1974:20;1989:4;1974:20;:::i;:::-;1965:29;;2047:1;2079:49;2124:3;2115:6;2104:9;2100:22;2079:49;:::i;:::-;2072:4;2065:5;2061:16;2054:75;2004:136;2193:2;2226:49;2271:3;2262:6;2251:9;2247:22;2226:49;:::i;:::-;2219:4;2212:5;2208:16;2201:75;2150:137;2344:2;2377:49;2422:3;2413:6;2402:9;2398:22;2377:49;:::i;:::-;2370:4;2363:5;2359:16;2352:75;2297:141;2494:2;2527:46;2569:3;2560:6;2549:9;2545:22;2527:46;:::i;:::-;2520:4;2513:5;2509:16;2502:72;2448:137;1904:691;;;;:::o;2602:130::-;;2682:6;2669:20;2660:29;;2694:33;2721:5;2694:33;:::i;:::-;2654:78;;;;:::o;2739:241::-;;2843:2;2831:9;2822:7;2818:23;2814:32;2811:2;;;2859:1;2856;2849:12;2811:2;2894:1;2911:53;2956:7;2947:6;2936:9;2932:22;2911:53;:::i;:::-;2901:63;;2873:97;2805:175;;;;:::o;2987:366::-;;;3108:2;3096:9;3087:7;3083:23;3079:32;3076:2;;;3124:1;3121;3114:12;3076:2;3159:1;3176:53;3221:7;3212:6;3201:9;3197:22;3176:53;:::i;:::-;3166:63;;3138:97;3266:2;3284:53;3329:7;3320:6;3309:9;3305:22;3284:53;:::i;:::-;3274:63;;3245:98;3070:283;;;;;:::o;3360:491::-;;;;3498:2;3486:9;3477:7;3473:23;3469:32;3466:2;;;3514:1;3511;3504:12;3466:2;3549:1;3566:53;3611:7;3602:6;3591:9;3587:22;3566:53;:::i;:::-;3556:63;;3528:97;3656:2;3674:53;3719:7;3710:6;3699:9;3695:22;3674:53;:::i;:::-;3664:63;;3635:98;3764:2;3782:53;3827:7;3818:6;3807:9;3803:22;3782:53;:::i;:::-;3772:63;;3743:98;3460:391;;;;;:::o;3858:721::-;;;;;4022:3;4010:9;4001:7;3997:23;3993:33;3990:2;;;4039:1;4036;4029:12;3990:2;4074:1;4091:53;4136:7;4127:6;4116:9;4112:22;4091:53;:::i;:::-;4081:63;;4053:97;4181:2;4199:53;4244:7;4235:6;4224:9;4220:22;4199:53;:::i;:::-;4189:63;;4160:98;4289:2;4307:53;4352:7;4343:6;4332:9;4328:22;4307:53;:::i;:::-;4297:63;;4268:98;4425:2;4414:9;4410:18;4397:32;4449:18;4441:6;4438:30;4435:2;;;4481:1;4478;4471:12;4435:2;4501:62;4555:7;4546:6;4535:9;4531:22;4501:62;:::i;:::-;4491:72;;4376:193;3984:595;;;;;;;:::o;4586:360::-;;;4704:2;4692:9;4683:7;4679:23;4675:32;4672:2;;;4720:1;4717;4710:12;4672:2;4755:1;4772:53;4817:7;4808:6;4797:9;4793:22;4772:53;:::i;:::-;4762:63;;4734:97;4862:2;4880:50;4922:7;4913:6;4902:9;4898:22;4880:50;:::i;:::-;4870:60;;4841:95;4666:280;;;;;:::o;4953:366::-;;;5074:2;5062:9;5053:7;5049:23;5045:32;5042:2;;;5090:1;5087;5080:12;5042:2;5125:1;5142:53;5187:7;5178:6;5167:9;5163:22;5142:53;:::i;:::-;5132:63;;5104:97;5232:2;5250:53;5295:7;5286:6;5275:9;5271:22;5250:53;:::i;:::-;5240:63;;5211:98;5036:283;;;;;:::o;5326:417::-;;5475:2;5463:9;5454:7;5450:23;5446:32;5443:2;;;5491:1;5488;5481:12;5443:2;5554:1;5543:9;5539:17;5526:31;5577:18;5569:6;5566:30;5563:2;;;5609:1;5606;5599:12;5563:2;5629:98;5719:7;5710:6;5699:9;5695:22;5629:98;:::i;:::-;5619:108;;5505:228;5437:306;;;;:::o;5750:239::-;;5853:2;5841:9;5832:7;5828:23;5824:32;5821:2;;;5869:1;5866;5859:12;5821:2;5904:1;5921:52;5965:7;5956:6;5945:9;5941:22;5921:52;:::i;:::-;5911:62;;5883:96;5815:174;;;;:::o;5996:261::-;;6110:2;6098:9;6089:7;6085:23;6081:32;6078:2;;;6126:1;6123;6116:12;6078:2;6161:1;6178:63;6233:7;6224:6;6213:9;6209:22;6178:63;:::i;:::-;6168:73;;6140:107;6072:185;;;;:::o;6264:241::-;;6368:2;6356:9;6347:7;6343:23;6339:32;6336:2;;;6384:1;6381;6374:12;6336:2;6419:1;6436:53;6481:7;6472:6;6461:9;6457:22;6436:53;:::i;:::-;6426:63;;6398:97;6330:175;;;;:::o;6513:173::-;;6600:46;6642:3;6634:6;6600:46;:::i;:::-;6675:4;6670:3;6666:14;6652:28;;6593:93;;;;:::o;6695:173::-;;6782:46;6824:3;6816:6;6782:46;:::i;:::-;6857:4;6852:3;6848:14;6834:28;;6775:93;;;;:::o;6876:142::-;6967:45;7006:5;6967:45;:::i;:::-;6962:3;6955:58;6949:69;;:::o;7025:137::-;7124:32;7150:5;7124:32;:::i;:::-;7119:3;7112:45;7106:56;;:::o;7169:103::-;7242:24;7260:5;7242:24;:::i;:::-;7237:3;7230:37;7224:48;;:::o;7279:113::-;7362:24;7380:5;7362:24;:::i;:::-;7357:3;7350:37;7344:48;;:::o;7430:690::-;;7575:54;7623:5;7575:54;:::i;:::-;7642:86;7721:6;7716:3;7642:86;:::i;:::-;7635:93;;7749:56;7799:5;7749:56;:::i;:::-;7825:7;7853:1;7838:260;7863:6;7860:1;7857:13;7838:260;;;7930:6;7924:13;7951:63;8010:3;7995:13;7951:63;:::i;:::-;7944:70;;8031:60;8084:6;8031:60;:::i;:::-;8021:70;;7895:203;7885:1;7882;7878:9;7873:14;;7838:260;;;7842:14;8111:3;8104:10;;7554:566;;;;;;;:::o;8159:690::-;;8304:54;8352:5;8304:54;:::i;:::-;8371:86;8450:6;8445:3;8371:86;:::i;:::-;8364:93;;8478:56;8528:5;8478:56;:::i;:::-;8554:7;8582:1;8567:260;8592:6;8589:1;8586:13;8567:260;;;8659:6;8653:13;8680:63;8739:3;8724:13;8680:63;:::i;:::-;8673:70;;8760:60;8813:6;8760:60;:::i;:::-;8750:70;;8624:203;8614:1;8611;8607:9;8602:14;;8567:260;;;8571:14;8840:3;8833:10;;8283:566;;;;;;;:::o;8857:94::-;8924:21;8939:5;8924:21;:::i;:::-;8919:3;8912:34;8906:45;;:::o;8958:104::-;9035:21;9050:5;9035:21;:::i;:::-;9030:3;9023:34;9017:45;;:::o;9069:343::-;;9179:38;9211:5;9179:38;:::i;:::-;9229:70;9292:6;9287:3;9229:70;:::i;:::-;9222:77;;9304:52;9349:6;9344:3;9337:4;9330:5;9326:16;9304:52;:::i;:::-;9377:29;9399:6;9377:29;:::i;:::-;9372:3;9368:39;9361:46;;9159:253;;;;;:::o;9419:356::-;;9547:38;9579:5;9547:38;:::i;:::-;9597:88;9678:6;9673:3;9597:88;:::i;:::-;9590:95;;9690:52;9735:6;9730:3;9723:4;9716:5;9712:16;9690:52;:::i;:::-;9763:6;9758:3;9754:16;9747:23;;9527:248;;;;;:::o;9782:347::-;;9894:39;9927:5;9894:39;:::i;:::-;9945:71;10009:6;10004:3;9945:71;:::i;:::-;9938:78;;10021:52;10066:6;10061:3;10054:4;10047:5;10043:16;10021:52;:::i;:::-;10094:29;10116:6;10094:29;:::i;:::-;10089:3;10085:39;10078:46;;9874:255;;;;;:::o;10136:360::-;;10266:39;10299:5;10266:39;:::i;:::-;10317:89;10399:6;10394:3;10317:89;:::i;:::-;10310:96;;10411:52;10456:6;10451:3;10444:4;10437:5;10433:16;10411:52;:::i;:::-;10484:6;10479:3;10475:16;10468:23;;10246:250;;;;;:::o;10504:371::-;;10664:67;10728:2;10723:3;10664:67;:::i;:::-;10657:74;;10764:34;10760:1;10755:3;10751:11;10744:55;10833:4;10828:2;10823:3;10819:12;10812:26;10866:2;10861:3;10857:12;10850:19;;10650:225;;;:::o;10884:387::-;;11044:67;11108:2;11103:3;11044:67;:::i;:::-;11037:74;;11144:34;11140:1;11135:3;11131:11;11124:55;11213:20;11208:2;11203:3;11199:12;11192:42;11262:2;11257:3;11253:12;11246:19;;11030:241;;;:::o;11280:375::-;;11440:67;11504:2;11499:3;11440:67;:::i;:::-;11433:74;;11540:34;11536:1;11531:3;11527:11;11520:55;11609:8;11604:2;11599:3;11595:12;11588:30;11646:2;11641:3;11637:12;11630:19;;11426:229;;;:::o;11664:328::-;;11824:67;11888:2;11883:3;11824:67;:::i;:::-;11817:74;;11924:30;11920:1;11915:3;11911:11;11904:51;11983:2;11978:3;11974:12;11967:19;;11810:182;;;:::o;12001:373::-;;12161:67;12225:2;12220:3;12161:67;:::i;:::-;12154:74;;12261:34;12257:1;12252:3;12248:11;12241:55;12330:6;12325:2;12320:3;12316:12;12309:28;12365:2;12360:3;12356:12;12349:19;;12147:227;;;:::o;12383:325::-;;12543:67;12607:2;12602:3;12543:67;:::i;:::-;12536:74;;12643:27;12639:1;12634:3;12630:11;12623:48;12699:2;12694:3;12690:12;12683:19;;12529:179;;;:::o;12717:375::-;;12877:67;12941:2;12936:3;12877:67;:::i;:::-;12870:74;;12977:34;12973:1;12968:3;12964:11;12957:55;13046:8;13041:2;13036:3;13032:12;13025:30;13083:2;13078:3;13074:12;13067:19;;12863:229;;;:::o;13101:381::-;;13261:67;13325:2;13320:3;13261:67;:::i;:::-;13254:74;;13361:34;13357:1;13352:3;13348:11;13341:55;13430:14;13425:2;13420:3;13416:12;13409:36;13473:2;13468:3;13464:12;13457:19;;13247:235;;;:::o;13491:393::-;;13651:67;13715:2;13710:3;13651:67;:::i;:::-;13644:74;;13751:34;13747:1;13742:3;13738:11;13731:55;13820:26;13815:2;13810:3;13806:12;13799:48;13875:2;13870:3;13866:12;13859:19;;13637:247;;;:::o;13893:379::-;;14053:67;14117:2;14112:3;14053:67;:::i;:::-;14046:74;;14153:34;14149:1;14144:3;14140:11;14133:55;14222:12;14217:2;14212:3;14208:12;14201:34;14263:2;14258:3;14254:12;14247:19;;14039:233;;;:::o;14281:371::-;;14441:67;14505:2;14500:3;14441:67;:::i;:::-;14434:74;;14541:34;14537:1;14532:3;14528:11;14521:55;14610:4;14605:2;14600:3;14596:12;14589:26;14643:2;14638:3;14634:12;14627:19;;14427:225;;;:::o;14661:332::-;;14821:67;14885:2;14880:3;14821:67;:::i;:::-;14814:74;;14921:34;14917:1;14912:3;14908:11;14901:55;14984:2;14979:3;14975:12;14968:19;;14807:186;;;:::o;15002:381::-;;15162:67;15226:2;15221:3;15162:67;:::i;:::-;15155:74;;15262:34;15258:1;15253:3;15249:11;15242:55;15331:14;15326:2;15321:3;15317:12;15310:36;15374:2;15369:3;15365:12;15358:19;;15148:235;;;:::o;15392:332::-;;15552:67;15616:2;15611:3;15552:67;:::i;:::-;15545:74;;15652:34;15648:1;15643:3;15639:11;15632:55;15715:2;15710:3;15706:12;15699:19;;15538:186;;;:::o;15733:378::-;;15893:67;15957:2;15952:3;15893:67;:::i;:::-;15886:74;;15993:34;15989:1;15984:3;15980:11;15973:55;16062:11;16057:2;16052:3;16048:12;16041:33;16102:2;16097:3;16093:12;16086:19;;15879:232;;;:::o;16120:384::-;;16280:67;16344:2;16339:3;16280:67;:::i;:::-;16273:74;;16380:34;16376:1;16371:3;16367:11;16360:55;16449:17;16444:2;16439:3;16435:12;16428:39;16495:2;16490:3;16486:12;16479:19;;16266:238;;;:::o;16513:370::-;;16673:67;16737:2;16732:3;16673:67;:::i;:::-;16666:74;;16773:34;16769:1;16764:3;16760:11;16753:55;16842:3;16837:2;16832:3;16828:12;16821:25;16874:2;16869:3;16865:12;16858:19;;16659:224;;;:::o;16892:386::-;;17052:67;17116:2;17111:3;17052:67;:::i;:::-;17045:74;;17152:34;17148:1;17143:3;17139:11;17132:55;17221:19;17216:2;17211:3;17207:12;17200:41;17269:2;17264:3;17260:12;17253:19;;17038:240;;;:::o;17287:329::-;;17447:67;17511:2;17506:3;17447:67;:::i;:::-;17440:74;;17547:31;17543:1;17538:3;17534:11;17527:52;17607:2;17602:3;17598:12;17591:19;;17433:183;;;:::o;17675:787::-;17808:4;17803:3;17799:14;17894:4;17887:5;17883:16;17877:23;17906:63;17963:4;17958:3;17954:14;17940:12;17906:63;:::i;:::-;17828:147;18051:4;18044:5;18040:16;18034:23;18063:63;18120:4;18115:3;18111:14;18097:12;18063:63;:::i;:::-;17985:147;18212:4;18205:5;18201:16;18195:23;18224:63;18281:4;18276:3;18272:14;18258:12;18224:63;:::i;:::-;18142:151;18372:4;18365:5;18361:16;18355:23;18384:57;18435:4;18430:3;18426:14;18412:12;18384:57;:::i;:::-;18303:144;17781:681;;;:::o;18469:103::-;18542:24;18560:5;18542:24;:::i;:::-;18537:3;18530:37;18524:48;;:::o;18579:113::-;18662:24;18680:5;18662:24;:::i;:::-;18657:3;18650:37;18644:48;;:::o;18699:271::-;;18852:93;18941:3;18932:6;18852:93;:::i;:::-;18845:100;;18962:3;18955:10;;18833:137;;;;:::o;18977:436::-;;19180:95;19271:3;19262:6;19180:95;:::i;:::-;19173:102;;19293:95;19384:3;19375:6;19293:95;:::i;:::-;19286:102;;19405:3;19398:10;;19161:252;;;;;:::o;19420:222::-;;19547:2;19536:9;19532:18;19524:26;;19561:71;19629:1;19618:9;19614:17;19605:6;19561:71;:::i;:::-;19518:124;;;;:::o;19649:238::-;;19784:2;19773:9;19769:18;19761:26;;19798:79;19874:1;19863:9;19859:17;19850:6;19798:79;:::i;:::-;19755:132;;;;:::o;19894:672::-;;20139:3;20128:9;20124:19;20116:27;;20154:87;20238:1;20227:9;20223:17;20214:6;20154:87;:::i;:::-;20252:72;20320:2;20309:9;20305:18;20296:6;20252:72;:::i;:::-;20335;20403:2;20392:9;20388:18;20379:6;20335:72;:::i;:::-;20455:9;20449:4;20445:20;20440:2;20429:9;20425:18;20418:48;20480:76;20551:4;20542:6;20480:76;:::i;:::-;20472:84;;20110:456;;;;;;;:::o;20573:370::-;;20750:2;20739:9;20735:18;20727:26;;20800:9;20794:4;20790:20;20786:1;20775:9;20771:17;20764:47;20825:108;20928:4;20919:6;20825:108;:::i;:::-;20817:116;;20721:222;;;;:::o;20950:370::-;;21127:2;21116:9;21112:18;21104:26;;21177:9;21171:4;21167:20;21163:1;21152:9;21148:17;21141:47;21202:108;21305:4;21296:6;21202:108;:::i;:::-;21194:116;;21098:222;;;;:::o;21327:210::-;;21448:2;21437:9;21433:18;21425:26;;21462:65;21524:1;21513:9;21509:17;21500:6;21462:65;:::i;:::-;21419:118;;;;:::o;21544:310::-;;21691:2;21680:9;21676:18;21668:26;;21741:9;21735:4;21731:20;21727:1;21716:9;21712:17;21705:47;21766:78;21839:4;21830:6;21766:78;:::i;:::-;21758:86;;21662:192;;;;:::o;21861:416::-;;22061:2;22050:9;22046:18;22038:26;;22111:9;22105:4;22101:20;22097:1;22086:9;22082:17;22075:47;22136:131;22262:4;22136:131;:::i;:::-;22128:139;;22032:245;;;:::o;22284:416::-;;22484:2;22473:9;22469:18;22461:26;;22534:9;22528:4;22524:20;22520:1;22509:9;22505:17;22498:47;22559:131;22685:4;22559:131;:::i;:::-;22551:139;;22455:245;;;:::o;22707:416::-;;22907:2;22896:9;22892:18;22884:26;;22957:9;22951:4;22947:20;22943:1;22932:9;22928:17;22921:47;22982:131;23108:4;22982:131;:::i;:::-;22974:139;;22878:245;;;:::o;23130:416::-;;23330:2;23319:9;23315:18;23307:26;;23380:9;23374:4;23370:20;23366:1;23355:9;23351:17;23344:47;23405:131;23531:4;23405:131;:::i;:::-;23397:139;;23301:245;;;:::o;23553:416::-;;23753:2;23742:9;23738:18;23730:26;;23803:9;23797:4;23793:20;23789:1;23778:9;23774:17;23767:47;23828:131;23954:4;23828:131;:::i;:::-;23820:139;;23724:245;;;:::o;23976:416::-;;24176:2;24165:9;24161:18;24153:26;;24226:9;24220:4;24216:20;24212:1;24201:9;24197:17;24190:47;24251:131;24377:4;24251:131;:::i;:::-;24243:139;;24147:245;;;:::o;24399:416::-;;24599:2;24588:9;24584:18;24576:26;;24649:9;24643:4;24639:20;24635:1;24624:9;24620:17;24613:47;24674:131;24800:4;24674:131;:::i;:::-;24666:139;;24570:245;;;:::o;24822:416::-;;25022:2;25011:9;25007:18;24999:26;;25072:9;25066:4;25062:20;25058:1;25047:9;25043:17;25036:47;25097:131;25223:4;25097:131;:::i;:::-;25089:139;;24993:245;;;:::o;25245:416::-;;25445:2;25434:9;25430:18;25422:26;;25495:9;25489:4;25485:20;25481:1;25470:9;25466:17;25459:47;25520:131;25646:4;25520:131;:::i;:::-;25512:139;;25416:245;;;:::o;25668:416::-;;25868:2;25857:9;25853:18;25845:26;;25918:9;25912:4;25908:20;25904:1;25893:9;25889:17;25882:47;25943:131;26069:4;25943:131;:::i;:::-;25935:139;;25839:245;;;:::o;26091:416::-;;26291:2;26280:9;26276:18;26268:26;;26341:9;26335:4;26331:20;26327:1;26316:9;26312:17;26305:47;26366:131;26492:4;26366:131;:::i;:::-;26358:139;;26262:245;;;:::o;26514:416::-;;26714:2;26703:9;26699:18;26691:26;;26764:9;26758:4;26754:20;26750:1;26739:9;26735:17;26728:47;26789:131;26915:4;26789:131;:::i;:::-;26781:139;;26685:245;;;:::o;26937:416::-;;27137:2;27126:9;27122:18;27114:26;;27187:9;27181:4;27177:20;27173:1;27162:9;27158:17;27151:47;27212:131;27338:4;27212:131;:::i;:::-;27204:139;;27108:245;;;:::o;27360:416::-;;27560:2;27549:9;27545:18;27537:26;;27610:9;27604:4;27600:20;27596:1;27585:9;27581:17;27574:47;27635:131;27761:4;27635:131;:::i;:::-;27627:139;;27531:245;;;:::o;27783:416::-;;27983:2;27972:9;27968:18;27960:26;;28033:9;28027:4;28023:20;28019:1;28008:9;28004:17;27997:47;28058:131;28184:4;28058:131;:::i;:::-;28050:139;;27954:245;;;:::o;28206:416::-;;28406:2;28395:9;28391:18;28383:26;;28456:9;28450:4;28446:20;28442:1;28431:9;28427:17;28420:47;28481:131;28607:4;28481:131;:::i;:::-;28473:139;;28377:245;;;:::o;28629:416::-;;28829:2;28818:9;28814:18;28806:26;;28879:9;28873:4;28869:20;28865:1;28854:9;28850:17;28843:47;28904:131;29030:4;28904:131;:::i;:::-;28896:139;;28800:245;;;:::o;29052:416::-;;29252:2;29241:9;29237:18;29229:26;;29302:9;29296:4;29292:20;29288:1;29277:9;29273:17;29266:47;29327:131;29453:4;29327:131;:::i;:::-;29319:139;;29223:245;;;:::o;29475:416::-;;29675:2;29664:9;29660:18;29652:26;;29725:9;29719:4;29715:20;29711:1;29700:9;29696:17;29689:47;29750:131;29876:4;29750:131;:::i;:::-;29742:139;;29646:245;;;:::o;29898:303::-;;30065:3;30054:9;30050:19;30042:27;;30080:111;30188:1;30177:9;30173:17;30164:6;30080:111;:::i;:::-;30036:165;;;;:::o;30208:222::-;;30335:2;30324:9;30320:18;30312:26;;30349:71;30417:1;30406:9;30402:17;30393:6;30349:71;:::i;:::-;30306:124;;;;:::o;30437:256::-;;30499:2;30493:9;30483:19;;30537:4;30529:6;30525:17;30636:6;30624:10;30621:22;30600:18;30588:10;30585:34;30582:62;30579:2;;;30657:1;30654;30647:12;30579:2;30677:10;30673:2;30666:22;30477:216;;;;:::o;30700:324::-;;30879:18;30871:6;30868:30;30865:2;;;30911:1;30908;30901:12;30865:2;30946:4;30938:6;30934:17;30926:25;;31009:4;31003;30999:15;30991:23;;30802:222;;;:::o;31031:321::-;;31174:18;31166:6;31163:30;31160:2;;;31206:1;31203;31196:12;31160:2;31273:4;31269:9;31262:4;31254:6;31250:17;31246:33;31238:41;;31337:4;31331;31327:15;31319:23;;31097:255;;;:::o;31359:151::-;;31445:3;31437:11;;31483:4;31478:3;31474:14;31466:22;;31431:79;;;:::o;31517:151::-;;31603:3;31595:11;;31641:4;31636:3;31632:14;31624:22;;31589:79;;;:::o;31675:137::-;;31784:5;31778:12;31768:22;;31749:63;;;:::o;31819:137::-;;31928:5;31922:12;31912:22;;31893:63;;;:::o;31963:121::-;;32056:5;32050:12;32040:22;;32021:63;;;:::o;32091:122::-;;32185:5;32179:12;32169:22;;32150:63;;;:::o;32220:108::-;;32318:4;32313:3;32309:14;32301:22;;32295:33;;;:::o;32335:108::-;;32433:4;32428:3;32424:14;32416:22;;32410:33;;;:::o;32451:178::-;;32581:6;32576:3;32569:19;32618:4;32613:3;32609:14;32594:29;;32562:67;;;;:::o;32638:178::-;;32768:6;32763:3;32756:19;32805:4;32800:3;32796:14;32781:29;;32749:67;;;;:::o;32825:162::-;;32939:6;32934:3;32927:19;32976:4;32971:3;32967:14;32952:29;;32920:67;;;;:::o;32996:144::-;;33131:3;33116:18;;33109:31;;;;:::o;33149:163::-;;33264:6;33259:3;33252:19;33301:4;33296:3;33292:14;33277:29;;33245:67;;;;:::o;33321:145::-;;33457:3;33442:18;;33435:31;;;;:::o;33474:91::-;;33536:24;33554:5;33536:24;:::i;:::-;33525:35;;33519:46;;;:::o;33572:99::-;;33642:24;33660:5;33642:24;:::i;:::-;33631:35;;33625:46;;;:::o;33678:85::-;;33751:5;33744:13;33737:21;33726:32;;33720:43;;;:::o;33770:144::-;;33842:66;33835:5;33831:78;33820:89;;33814:100;;;:::o;33921:121::-;;33994:42;33987:5;33983:54;33972:65;;33966:76;;;:::o;34049:72::-;;34111:5;34100:16;;34094:27;;;:::o;34128:129::-;;34215:37;34246:5;34215:37;:::i;:::-;34202:50;;34196:61;;;:::o;34264:121::-;;34343:37;34374:5;34343:37;:::i;:::-;34330:50;;34324:61;;;:::o;34392:108::-;;34471:24;34489:5;34471:24;:::i;:::-;34458:37;;34452:48;;;:::o;34508:145::-;34589:6;34584:3;34579;34566:30;34645:1;34636:6;34631:3;34627:16;34620:27;34559:94;;;:::o;34662:268::-;34727:1;34734:101;34748:6;34745:1;34742:13;34734:101;;;34824:1;34819:3;34815:11;34809:18;34805:1;34800:3;34796:11;34789:39;34770:2;34767:1;34763:10;34758:15;;34734:101;;;34850:6;34847:1;34844:13;34841:2;;;34915:1;34906:6;34901:3;34897:16;34890:27;34841:2;34711:219;;;;:::o;34938:97::-;;35026:2;35022:7;35017:2;35010:5;35006:14;35002:28;34992:38;;34986:49;;;:::o;35043:117::-;35112:24;35130:5;35112:24;:::i;:::-;35105:5;35102:35;35092:2;;35151:1;35148;35141:12;35092:2;35086:74;:::o;35167:111::-;35233:21;35248:5;35233:21;:::i;:::-;35226:5;35223:32;35213:2;;35269:1;35266;35259:12;35213:2;35207:71;:::o;35285:115::-;35353:23;35370:5;35353:23;:::i;:::-;35346:5;35343:34;35333:2;;35391:1;35388;35381:12;35333:2;35327:73;:::o;35407:117::-;35476:24;35494:5;35476:24;:::i;:::-;35469:5;35466:35;35456:2;;35515:1;35512;35505:12;35456:2;35450:74;:::o",
  "source": "pragma solidity >=0.4.22 <0.8.0;\r\npragma experimental ABIEncoderV2;\r\n\r\nimport \"@openzeppelin/contracts/token/ERC721/ERC721.sol\";\r\nimport \"@openzeppelin/contracts/access/Ownable.sol\";\r\n\r\ncontract CardGame is ERC721, Ownable {\r\n\tconstructor() ERC721(\"CasinoNFT\", \"MOO\") public {\r\n\t}\r\n\r\n\tstruct Card {\r\n\t\tuint deckIdx;\r\n\t\tuint cardIdx;\r\n\t\tuint suitTypeIdx;\r\n\t\tbool isHandCard;\r\n\t}\r\n\r\n\tuint public nftId = 0;\r\n\tuint public currentDeckIdx = 0;\r\n\tuint[] public currentDeckTaken;\r\n\taddress[] public players;\r\n\r\n\tmapping(uint256 => Card) private _cardStack;\r\n\tmapping(address => uint[]) private _inHandTokens;\r\n\r\n\tevent HandMinted(address player);\r\n\r\n\tfunction getTokenDetails(uint256 tokenId) public view returns (Card memory) {\r\n\t\treturn _cardStack[tokenId];\r\n\t}\r\n\r\n\tfunction getDeckTaken() public view returns (uint[] memory) {\r\n\t\treturn currentDeckTaken;\r\n\t}\r\n\t\r\n\tfunction getPlayers() public view returns(address [] memory) {\r\n\t\treturn players;\r\n\t}\r\n\r\n\tfunction getOwnerOf(uint256 tokenId) public view returns (address){\r\n\t\treturn ownerOf(tokenId);\r\n\t}\r\n\r\n\tfunction getInHandTokens(address myAddr) public view returns(uint [] memory) {\r\n\t\treturn _inHandTokens[myAddr];\r\n\t}\r\n\r\n\tfunction mintNewHand(Card[] memory card_hand) public {\r\n\t\tfor (uint i = 0; i < card_hand.length; i++) {\r\n\t\t\t// uint deckIdx = card_hand[i].deckIdx;\r\n\t\t\t_cardStack[nftId] = Card(card_hand[i].deckIdx, card_hand[i].cardIdx, card_hand[i].suitTypeIdx, true);\r\n\t\t\tcurrentDeckTaken.push(card_hand[i].cardIdx);\r\n\t\t\t_inHandTokens[msg.sender].push(nftId);\r\n\t\t\t_safeMint(msg.sender, nftId);\r\n\t\t\tnftId++;\r\n\t\t}\r\n\t\tplayers.push(msg.sender);\r\n\t\temit HandMinted(msg.sender);\r\n\t}\r\n}",
  "sourcePath": "C:/Users/swapp/Documents/MyProjects/Crypto/crypto_casino/truffle/contracts/CardGame.sol",
  "ast": {
    "absolutePath": "/C/Users/swapp/Documents/MyProjects/Crypto/crypto_casino/truffle/contracts/CardGame.sol",
    "exportedSymbols": {
      "CardGame": [
        184
      ]
    },
    "id": 185,
    "license": null,
    "nodeType": "SourceUnit",
    "nodes": [
      {
        "id": 1,
        "literals": [
          "solidity",
          ">=",
          "0.4",
          ".22",
          "<",
          "0.8",
          ".0"
        ],
        "nodeType": "PragmaDirective",
        "src": "0:32:0"
      },
      {
        "id": 2,
        "literals": [
          "experimental",
          "ABIEncoderV2"
        ],
        "nodeType": "PragmaDirective",
        "src": "34:33:0"
      },
      {
        "absolutePath": "@openzeppelin/contracts/token/ERC721/ERC721.sol",
        "file": "@openzeppelin/contracts/token/ERC721/ERC721.sol",
        "id": 3,
        "nodeType": "ImportDirective",
        "scope": 185,
        "sourceUnit": 1663,
        "src": "71:57:0",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "@openzeppelin/contracts/access/Ownable.sol",
        "file": "@openzeppelin/contracts/access/Ownable.sol",
        "id": 4,
        "nodeType": "ImportDirective",
        "scope": 185,
        "sourceUnit": 295,
        "src": "130:52:0",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "abstract": false,
        "baseContracts": [
          {
            "arguments": null,
            "baseName": {
              "contractScope": null,
              "id": 5,
              "name": "ERC721",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 1662,
              "src": "207:6:0",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_ERC721_$1662",
                "typeString": "contract ERC721"
              }
            },
            "id": 6,
            "nodeType": "InheritanceSpecifier",
            "src": "207:6:0"
          },
          {
            "arguments": null,
            "baseName": {
              "contractScope": null,
              "id": 7,
              "name": "Ownable",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 294,
              "src": "215:7:0",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_Ownable_$294",
                "typeString": "contract Ownable"
              }
            },
            "id": 8,
            "nodeType": "InheritanceSpecifier",
            "src": "215:7:0"
          }
        ],
        "contractDependencies": [
          294,
          351,
          363,
          1662,
          1778,
          1809,
          1836,
          2173
        ],
        "contractKind": "contract",
        "documentation": null,
        "fullyImplemented": true,
        "id": 184,
        "linearizedBaseContracts": [
          184,
          294,
          1662,
          1809,
          1836,
          1778,
          351,
          363,
          2173
        ],
        "name": "CardGame",
        "nodeType": "ContractDefinition",
        "nodes": [
          {
            "body": {
              "id": 15,
              "nodeType": "Block",
              "src": "275:5:0",
              "statements": []
            },
            "documentation": null,
            "id": 16,
            "implemented": true,
            "kind": "constructor",
            "modifiers": [
              {
                "arguments": [
                  {
                    "argumentTypes": null,
                    "hexValue": "436173696e6f4e4654",
                    "id": 11,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "kind": "string",
                    "lValueRequested": false,
                    "nodeType": "Literal",
                    "src": "248:11:0",
                    "subdenomination": null,
                    "typeDescriptions": {
                      "typeIdentifier": "t_stringliteral_874cdc01750587db96279788da401d7a1c70b15fa3a061af2673939225461489",
                      "typeString": "literal_string \"CasinoNFT\""
                    },
                    "value": "CasinoNFT"
                  },
                  {
                    "argumentTypes": null,
                    "hexValue": "4d4f4f",
                    "id": 12,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "kind": "string",
                    "lValueRequested": false,
                    "nodeType": "Literal",
                    "src": "261:5:0",
                    "subdenomination": null,
                    "typeDescriptions": {
                      "typeIdentifier": "t_stringliteral_d4ec9cc5262f3c3be5a42f04bb21b119846a40d494c41534c9a8044716e7463b",
                      "typeString": "literal_string \"MOO\""
                    },
                    "value": "MOO"
                  }
                ],
                "id": 13,
                "modifierName": {
                  "argumentTypes": null,
                  "id": 10,
                  "name": "ERC721",
                  "nodeType": "Identifier",
                  "overloadedDeclarations": [],
                  "referencedDeclaration": 1662,
                  "src": "241:6:0",
                  "typeDescriptions": {
                    "typeIdentifier": "t_type$_t_contract$_ERC721_$1662_$",
                    "typeString": "type(contract ERC721)"
                  }
                },
                "nodeType": "ModifierInvocation",
                "src": "241:26:0"
              }
            ],
            "name": "",
            "nodeType": "FunctionDefinition",
            "overrides": null,
            "parameters": {
              "id": 9,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "238:2:0"
            },
            "returnParameters": {
              "id": 14,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "275:0:0"
            },
            "scope": 184,
            "src": "227:53:0",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "canonicalName": "CardGame.Card",
            "id": 25,
            "members": [
              {
                "constant": false,
                "id": 18,
                "mutability": "mutable",
                "name": "deckIdx",
                "nodeType": "VariableDeclaration",
                "overrides": null,
                "scope": 25,
                "src": "302:12:0",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint256",
                  "typeString": "uint256"
                },
                "typeName": {
                  "id": 17,
                  "name": "uint",
                  "nodeType": "ElementaryTypeName",
                  "src": "302:4:0",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  }
                },
                "value": null,
                "visibility": "internal"
              },
              {
                "constant": false,
                "id": 20,
                "mutability": "mutable",
                "name": "cardIdx",
                "nodeType": "VariableDeclaration",
                "overrides": null,
                "scope": 25,
                "src": "319:12:0",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint256",
                  "typeString": "uint256"
                },
                "typeName": {
                  "id": 19,
                  "name": "uint",
                  "nodeType": "ElementaryTypeName",
                  "src": "319:4:0",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  }
                },
                "value": null,
                "visibility": "internal"
              },
              {
                "constant": false,
                "id": 22,
                "mutability": "mutable",
                "name": "suitTypeIdx",
                "nodeType": "VariableDeclaration",
                "overrides": null,
                "scope": 25,
                "src": "336:16:0",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint256",
                  "typeString": "uint256"
                },
                "typeName": {
                  "id": 21,
                  "name": "uint",
                  "nodeType": "ElementaryTypeName",
                  "src": "336:4:0",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  }
                },
                "value": null,
                "visibility": "internal"
              },
              {
                "constant": false,
                "id": 24,
                "mutability": "mutable",
                "name": "isHandCard",
                "nodeType": "VariableDeclaration",
                "overrides": null,
                "scope": 25,
                "src": "357:15:0",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_bool",
                  "typeString": "bool"
                },
                "typeName": {
                  "id": 23,
                  "name": "bool",
                  "nodeType": "ElementaryTypeName",
                  "src": "357:4:0",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  }
                },
                "value": null,
                "visibility": "internal"
              }
            ],
            "name": "Card",
            "nodeType": "StructDefinition",
            "scope": 184,
            "src": "285:92:0",
            "visibility": "public"
          },
          {
            "constant": false,
            "functionSelector": "c6bc5182",
            "id": 28,
            "mutability": "mutable",
            "name": "nftId",
            "nodeType": "VariableDeclaration",
            "overrides": null,
            "scope": 184,
            "src": "382:21:0",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_uint256",
              "typeString": "uint256"
            },
            "typeName": {
              "id": 26,
              "name": "uint",
              "nodeType": "ElementaryTypeName",
              "src": "382:4:0",
              "typeDescriptions": {
                "typeIdentifier": "t_uint256",
                "typeString": "uint256"
              }
            },
            "value": {
              "argumentTypes": null,
              "hexValue": "30",
              "id": 27,
              "isConstant": false,
              "isLValue": false,
              "isPure": true,
              "kind": "number",
              "lValueRequested": false,
              "nodeType": "Literal",
              "src": "402:1:0",
              "subdenomination": null,
              "typeDescriptions": {
                "typeIdentifier": "t_rational_0_by_1",
                "typeString": "int_const 0"
              },
              "value": "0"
            },
            "visibility": "public"
          },
          {
            "constant": false,
            "functionSelector": "f34f4c96",
            "id": 31,
            "mutability": "mutable",
            "name": "currentDeckIdx",
            "nodeType": "VariableDeclaration",
            "overrides": null,
            "scope": 184,
            "src": "407:30:0",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_uint256",
              "typeString": "uint256"
            },
            "typeName": {
              "id": 29,
              "name": "uint",
              "nodeType": "ElementaryTypeName",
              "src": "407:4:0",
              "typeDescriptions": {
                "typeIdentifier": "t_uint256",
                "typeString": "uint256"
              }
            },
            "value": {
              "argumentTypes": null,
              "hexValue": "30",
              "id": 30,
              "isConstant": false,
              "isLValue": false,
              "isPure": true,
              "kind": "number",
              "lValueRequested": false,
              "nodeType": "Literal",
              "src": "436:1:0",
              "subdenomination": null,
              "typeDescriptions": {
                "typeIdentifier": "t_rational_0_by_1",
                "typeString": "int_const 0"
              },
              "value": "0"
            },
            "visibility": "public"
          },
          {
            "constant": false,
            "functionSelector": "ead2ae25",
            "id": 34,
            "mutability": "mutable",
            "name": "currentDeckTaken",
            "nodeType": "VariableDeclaration",
            "overrides": null,
            "scope": 184,
            "src": "441:30:0",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_array$_t_uint256_$dyn_storage",
              "typeString": "uint256[]"
            },
            "typeName": {
              "baseType": {
                "id": 32,
                "name": "uint",
                "nodeType": "ElementaryTypeName",
                "src": "441:4:0",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint256",
                  "typeString": "uint256"
                }
              },
              "id": 33,
              "length": null,
              "nodeType": "ArrayTypeName",
              "src": "441:6:0",
              "typeDescriptions": {
                "typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
                "typeString": "uint256[]"
              }
            },
            "value": null,
            "visibility": "public"
          },
          {
            "constant": false,
            "functionSelector": "f71d96cb",
            "id": 37,
            "mutability": "mutable",
            "name": "players",
            "nodeType": "VariableDeclaration",
            "overrides": null,
            "scope": 184,
            "src": "475:24:0",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_array$_t_address_$dyn_storage",
              "typeString": "address[]"
            },
            "typeName": {
              "baseType": {
                "id": 35,
                "name": "address",
                "nodeType": "ElementaryTypeName",
                "src": "475:7:0",
                "stateMutability": "nonpayable",
                "typeDescriptions": {
                  "typeIdentifier": "t_address",
                  "typeString": "address"
                }
              },
              "id": 36,
              "length": null,
              "nodeType": "ArrayTypeName",
              "src": "475:9:0",
              "typeDescriptions": {
                "typeIdentifier": "t_array$_t_address_$dyn_storage_ptr",
                "typeString": "address[]"
              }
            },
            "value": null,
            "visibility": "public"
          },
          {
            "constant": false,
            "id": 41,
            "mutability": "mutable",
            "name": "_cardStack",
            "nodeType": "VariableDeclaration",
            "overrides": null,
            "scope": 184,
            "src": "505:43:0",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_Card_$25_storage_$",
              "typeString": "mapping(uint256 => struct CardGame.Card)"
            },
            "typeName": {
              "id": 40,
              "keyType": {
                "id": 38,
                "name": "uint256",
                "nodeType": "ElementaryTypeName",
                "src": "513:7:0",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint256",
                  "typeString": "uint256"
                }
              },
              "nodeType": "Mapping",
              "src": "505:24:0",
              "typeDescriptions": {
                "typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_Card_$25_storage_$",
                "typeString": "mapping(uint256 => struct CardGame.Card)"
              },
              "valueType": {
                "contractScope": null,
                "id": 39,
                "name": "Card",
                "nodeType": "UserDefinedTypeName",
                "referencedDeclaration": 25,
                "src": "524:4:0",
                "typeDescriptions": {
                  "typeIdentifier": "t_struct$_Card_$25_storage_ptr",
                  "typeString": "struct CardGame.Card"
                }
              }
            },
            "value": null,
            "visibility": "private"
          },
          {
            "constant": false,
            "id": 46,
            "mutability": "mutable",
            "name": "_inHandTokens",
            "nodeType": "VariableDeclaration",
            "overrides": null,
            "scope": 184,
            "src": "552:48:0",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_mapping$_t_address_$_t_array$_t_uint256_$dyn_storage_$",
              "typeString": "mapping(address => uint256[])"
            },
            "typeName": {
              "id": 45,
              "keyType": {
                "id": 42,
                "name": "address",
                "nodeType": "ElementaryTypeName",
                "src": "560:7:0",
                "typeDescriptions": {
                  "typeIdentifier": "t_address",
                  "typeString": "address"
                }
              },
              "nodeType": "Mapping",
              "src": "552:26:0",
              "typeDescriptions": {
                "typeIdentifier": "t_mapping$_t_address_$_t_array$_t_uint256_$dyn_storage_$",
                "typeString": "mapping(address => uint256[])"
              },
              "valueType": {
                "baseType": {
                  "id": 43,
                  "name": "uint",
                  "nodeType": "ElementaryTypeName",
                  "src": "571:4:0",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  }
                },
                "id": 44,
                "length": null,
                "nodeType": "ArrayTypeName",
                "src": "571:6:0",
                "typeDescriptions": {
                  "typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
                  "typeString": "uint256[]"
                }
              }
            },
            "value": null,
            "visibility": "private"
          },
          {
            "anonymous": false,
            "documentation": null,
            "id": 50,
            "name": "HandMinted",
            "nodeType": "EventDefinition",
            "parameters": {
              "id": 49,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 48,
                  "indexed": false,
                  "mutability": "mutable",
                  "name": "player",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 50,
                  "src": "623:14:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 47,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "623:7:0",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "622:16:0"
            },
            "src": "606:33:0"
          },
          {
            "body": {
              "id": 61,
              "nodeType": "Block",
              "src": "720:36:0",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "baseExpression": {
                      "argumentTypes": null,
                      "id": 57,
                      "name": "_cardStack",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 41,
                      "src": "732:10:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_Card_$25_storage_$",
                        "typeString": "mapping(uint256 => struct CardGame.Card storage ref)"
                      }
                    },
                    "id": 59,
                    "indexExpression": {
                      "argumentTypes": null,
                      "id": 58,
                      "name": "tokenId",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 52,
                      "src": "743:7:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "isConstant": false,
                    "isLValue": true,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "IndexAccess",
                    "src": "732:19:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_Card_$25_storage",
                      "typeString": "struct CardGame.Card storage ref"
                    }
                  },
                  "functionReturnParameters": 56,
                  "id": 60,
                  "nodeType": "Return",
                  "src": "725:26:0"
                }
              ]
            },
            "documentation": null,
            "functionSelector": "c1e03728",
            "id": 62,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "getTokenDetails",
            "nodeType": "FunctionDefinition",
            "overrides": null,
            "parameters": {
              "id": 53,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 52,
                  "mutability": "mutable",
                  "name": "tokenId",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 62,
                  "src": "669:15:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 51,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "669:7:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "668:17:0"
            },
            "returnParameters": {
              "id": 56,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 55,
                  "mutability": "mutable",
                  "name": "",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 62,
                  "src": "707:11:0",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_struct$_Card_$25_memory_ptr",
                    "typeString": "struct CardGame.Card"
                  },
                  "typeName": {
                    "contractScope": null,
                    "id": 54,
                    "name": "Card",
                    "nodeType": "UserDefinedTypeName",
                    "referencedDeclaration": 25,
                    "src": "707:4:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_Card_$25_storage_ptr",
                      "typeString": "struct CardGame.Card"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "706:13:0"
            },
            "scope": 184,
            "src": "644:112:0",
            "stateMutability": "view",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 70,
              "nodeType": "Block",
              "src": "821:33:0",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 68,
                    "name": "currentDeckTaken",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 34,
                    "src": "833:16:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_uint256_$dyn_storage",
                      "typeString": "uint256[] storage ref"
                    }
                  },
                  "functionReturnParameters": 67,
                  "id": 69,
                  "nodeType": "Return",
                  "src": "826:23:0"
                }
              ]
            },
            "documentation": null,
            "functionSelector": "eaec2858",
            "id": 71,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "getDeckTaken",
            "nodeType": "FunctionDefinition",
            "overrides": null,
            "parameters": {
              "id": 63,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "782:2:0"
            },
            "returnParameters": {
              "id": 67,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 66,
                  "mutability": "mutable",
                  "name": "",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 71,
                  "src": "806:13:0",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
                    "typeString": "uint256[]"
                  },
                  "typeName": {
                    "baseType": {
                      "id": 64,
                      "name": "uint",
                      "nodeType": "ElementaryTypeName",
                      "src": "806:4:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "id": 65,
                    "length": null,
                    "nodeType": "ArrayTypeName",
                    "src": "806:6:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
                      "typeString": "uint256[]"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "805:15:0"
            },
            "scope": 184,
            "src": "761:93:0",
            "stateMutability": "view",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 79,
              "nodeType": "Block",
              "src": "921:24:0",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 77,
                    "name": "players",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 37,
                    "src": "933:7:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_address_$dyn_storage",
                      "typeString": "address[] storage ref"
                    }
                  },
                  "functionReturnParameters": 76,
                  "id": 78,
                  "nodeType": "Return",
                  "src": "926:14:0"
                }
              ]
            },
            "documentation": null,
            "functionSelector": "8b5b9ccc",
            "id": 80,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "getPlayers",
            "nodeType": "FunctionDefinition",
            "overrides": null,
            "parameters": {
              "id": 72,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "879:2:0"
            },
            "returnParameters": {
              "id": 76,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 75,
                  "mutability": "mutable",
                  "name": "",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 80,
                  "src": "902:17:0",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
                    "typeString": "address[]"
                  },
                  "typeName": {
                    "baseType": {
                      "id": 73,
                      "name": "address",
                      "nodeType": "ElementaryTypeName",
                      "src": "902:7:0",
                      "stateMutability": "nonpayable",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "id": 74,
                    "length": null,
                    "nodeType": "ArrayTypeName",
                    "src": "902:10:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_address_$dyn_storage_ptr",
                      "typeString": "address[]"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "901:19:0"
            },
            "scope": 184,
            "src": "860:85:0",
            "stateMutability": "view",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 91,
              "nodeType": "Block",
              "src": "1016:33:0",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "id": 88,
                        "name": "tokenId",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 82,
                        "src": "1036:7:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 87,
                      "name": "ownerOf",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 866,
                      "src": "1028:7:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_view$_t_uint256_$returns$_t_address_$",
                        "typeString": "function (uint256) view returns (address)"
                      }
                    },
                    "id": 89,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1028:16:0",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "functionReturnParameters": 86,
                  "id": 90,
                  "nodeType": "Return",
                  "src": "1021:23:0"
                }
              ]
            },
            "documentation": null,
            "functionSelector": "83638710",
            "id": 92,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "getOwnerOf",
            "nodeType": "FunctionDefinition",
            "overrides": null,
            "parameters": {
              "id": 83,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 82,
                  "mutability": "mutable",
                  "name": "tokenId",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 92,
                  "src": "970:15:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 81,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "970:7:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "969:17:0"
            },
            "returnParameters": {
              "id": 86,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 85,
                  "mutability": "mutable",
                  "name": "",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 92,
                  "src": "1008:7:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 84,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "1008:7:0",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "1007:9:0"
            },
            "scope": 184,
            "src": "950:99:0",
            "stateMutability": "view",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 104,
              "nodeType": "Block",
              "src": "1131:38:0",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "baseExpression": {
                      "argumentTypes": null,
                      "id": 100,
                      "name": "_inHandTokens",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 46,
                      "src": "1143:13:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_mapping$_t_address_$_t_array$_t_uint256_$dyn_storage_$",
                        "typeString": "mapping(address => uint256[] storage ref)"
                      }
                    },
                    "id": 102,
                    "indexExpression": {
                      "argumentTypes": null,
                      "id": 101,
                      "name": "myAddr",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 94,
                      "src": "1157:6:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "isConstant": false,
                    "isLValue": true,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "IndexAccess",
                    "src": "1143:21:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_uint256_$dyn_storage",
                      "typeString": "uint256[] storage ref"
                    }
                  },
                  "functionReturnParameters": 99,
                  "id": 103,
                  "nodeType": "Return",
                  "src": "1136:28:0"
                }
              ]
            },
            "documentation": null,
            "functionSelector": "50f0aa99",
            "id": 105,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "getInHandTokens",
            "nodeType": "FunctionDefinition",
            "overrides": null,
            "parameters": {
              "id": 95,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 94,
                  "mutability": "mutable",
                  "name": "myAddr",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 105,
                  "src": "1079:14:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 93,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "1079:7:0",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "1078:16:0"
            },
            "returnParameters": {
              "id": 99,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 98,
                  "mutability": "mutable",
                  "name": "",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 105,
                  "src": "1115:14:0",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
                    "typeString": "uint256[]"
                  },
                  "typeName": {
                    "baseType": {
                      "id": 96,
                      "name": "uint",
                      "nodeType": "ElementaryTypeName",
                      "src": "1115:4:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "id": 97,
                    "length": null,
                    "nodeType": "ArrayTypeName",
                    "src": "1115:7:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
                      "typeString": "uint256[]"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "1114:16:0"
            },
            "scope": 184,
            "src": "1054:115:0",
            "stateMutability": "view",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 182,
              "nodeType": "Block",
              "src": "1227:409:0",
              "statements": [
                {
                  "body": {
                    "id": 168,
                    "nodeType": "Block",
                    "src": "1276:295:0",
                    "statements": [
                      {
                        "expression": {
                          "argumentTypes": null,
                          "id": 140,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "argumentTypes": null,
                            "baseExpression": {
                              "argumentTypes": null,
                              "id": 122,
                              "name": "_cardStack",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 41,
                              "src": "1326:10:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_Card_$25_storage_$",
                                "typeString": "mapping(uint256 => struct CardGame.Card storage ref)"
                              }
                            },
                            "id": 124,
                            "indexExpression": {
                              "argumentTypes": null,
                              "id": 123,
                              "name": "nftId",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 28,
                              "src": "1337:5:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": true,
                            "nodeType": "IndexAccess",
                            "src": "1326:17:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_Card_$25_storage",
                              "typeString": "struct CardGame.Card storage ref"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "argumentTypes": null,
                            "arguments": [
                              {
                                "argumentTypes": null,
                                "expression": {
                                  "argumentTypes": null,
                                  "baseExpression": {
                                    "argumentTypes": null,
                                    "id": 126,
                                    "name": "card_hand",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 108,
                                    "src": "1351:9:0",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_array$_t_struct$_Card_$25_memory_ptr_$dyn_memory_ptr",
                                      "typeString": "struct CardGame.Card memory[] memory"
                                    }
                                  },
                                  "id": 128,
                                  "indexExpression": {
                                    "argumentTypes": null,
                                    "id": 127,
                                    "name": "i",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 112,
                                    "src": "1361:1:0",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  },
                                  "isConstant": false,
                                  "isLValue": true,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "nodeType": "IndexAccess",
                                  "src": "1351:12:0",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_struct$_Card_$25_memory_ptr",
                                    "typeString": "struct CardGame.Card memory"
                                  }
                                },
                                "id": 129,
                                "isConstant": false,
                                "isLValue": true,
                                "isPure": false,
                                "lValueRequested": false,
                                "memberName": "deckIdx",
                                "nodeType": "MemberAccess",
                                "referencedDeclaration": 18,
                                "src": "1351:20:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              {
                                "argumentTypes": null,
                                "expression": {
                                  "argumentTypes": null,
                                  "baseExpression": {
                                    "argumentTypes": null,
                                    "id": 130,
                                    "name": "card_hand",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 108,
                                    "src": "1373:9:0",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_array$_t_struct$_Card_$25_memory_ptr_$dyn_memory_ptr",
                                      "typeString": "struct CardGame.Card memory[] memory"
                                    }
                                  },
                                  "id": 132,
                                  "indexExpression": {
                                    "argumentTypes": null,
                                    "id": 131,
                                    "name": "i",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 112,
                                    "src": "1383:1:0",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  },
                                  "isConstant": false,
                                  "isLValue": true,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "nodeType": "IndexAccess",
                                  "src": "1373:12:0",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_struct$_Card_$25_memory_ptr",
                                    "typeString": "struct CardGame.Card memory"
                                  }
                                },
                                "id": 133,
                                "isConstant": false,
                                "isLValue": true,
                                "isPure": false,
                                "lValueRequested": false,
                                "memberName": "cardIdx",
                                "nodeType": "MemberAccess",
                                "referencedDeclaration": 20,
                                "src": "1373:20:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              {
                                "argumentTypes": null,
                                "expression": {
                                  "argumentTypes": null,
                                  "baseExpression": {
                                    "argumentTypes": null,
                                    "id": 134,
                                    "name": "card_hand",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 108,
                                    "src": "1395:9:0",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_array$_t_struct$_Card_$25_memory_ptr_$dyn_memory_ptr",
                                      "typeString": "struct CardGame.Card memory[] memory"
                                    }
                                  },
                                  "id": 136,
                                  "indexExpression": {
                                    "argumentTypes": null,
                                    "id": 135,
                                    "name": "i",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 112,
                                    "src": "1405:1:0",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  },
                                  "isConstant": false,
                                  "isLValue": true,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "nodeType": "IndexAccess",
                                  "src": "1395:12:0",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_struct$_Card_$25_memory_ptr",
                                    "typeString": "struct CardGame.Card memory"
                                  }
                                },
                                "id": 137,
                                "isConstant": false,
                                "isLValue": true,
                                "isPure": false,
                                "lValueRequested": false,
                                "memberName": "suitTypeIdx",
                                "nodeType": "MemberAccess",
                                "referencedDeclaration": 22,
                                "src": "1395:24:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              {
                                "argumentTypes": null,
                                "hexValue": "74727565",
                                "id": 138,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "kind": "bool",
                                "lValueRequested": false,
                                "nodeType": "Literal",
                                "src": "1421:4:0",
                                "subdenomination": null,
                                "typeDescriptions": {
                                  "typeIdentifier": "t_bool",
                                  "typeString": "bool"
                                },
                                "value": "true"
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                },
                                {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                },
                                {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                },
                                {
                                  "typeIdentifier": "t_bool",
                                  "typeString": "bool"
                                }
                              ],
                              "id": 125,
                              "name": "Card",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 25,
                              "src": "1346:4:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_struct$_Card_$25_storage_ptr_$",
                                "typeString": "type(struct CardGame.Card storage pointer)"
                              }
                            },
                            "id": 139,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "structConstructorCall",
                            "lValueRequested": false,
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "1346:80:0",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_Card_$25_memory_ptr",
                              "typeString": "struct CardGame.Card memory"
                            }
                          },
                          "src": "1326:100:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_Card_$25_storage",
                            "typeString": "struct CardGame.Card storage ref"
                          }
                        },
                        "id": 141,
                        "nodeType": "ExpressionStatement",
                        "src": "1326:100:0"
                      },
                      {
                        "expression": {
                          "argumentTypes": null,
                          "arguments": [
                            {
                              "argumentTypes": null,
                              "expression": {
                                "argumentTypes": null,
                                "baseExpression": {
                                  "argumentTypes": null,
                                  "id": 145,
                                  "name": "card_hand",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 108,
                                  "src": "1454:9:0",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_array$_t_struct$_Card_$25_memory_ptr_$dyn_memory_ptr",
                                    "typeString": "struct CardGame.Card memory[] memory"
                                  }
                                },
                                "id": 147,
                                "indexExpression": {
                                  "argumentTypes": null,
                                  "id": 146,
                                  "name": "i",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 112,
                                  "src": "1464:1:0",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "isConstant": false,
                                "isLValue": true,
                                "isPure": false,
                                "lValueRequested": false,
                                "nodeType": "IndexAccess",
                                "src": "1454:12:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_struct$_Card_$25_memory_ptr",
                                  "typeString": "struct CardGame.Card memory"
                                }
                              },
                              "id": 148,
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberName": "cardIdx",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": 20,
                              "src": "1454:20:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            ],
                            "expression": {
                              "argumentTypes": null,
                              "id": 142,
                              "name": "currentDeckTaken",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 34,
                              "src": "1432:16:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_array$_t_uint256_$dyn_storage",
                                "typeString": "uint256[] storage ref"
                              }
                            },
                            "id": 144,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "push",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": null,
                            "src": "1432:21:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_arraypush_nonpayable$_t_uint256_$returns$__$",
                              "typeString": "function (uint256)"
                            }
                          },
                          "id": 149,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "1432:43:0",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 150,
                        "nodeType": "ExpressionStatement",
                        "src": "1432:43:0"
                      },
                      {
                        "expression": {
                          "argumentTypes": null,
                          "arguments": [
                            {
                              "argumentTypes": null,
                              "id": 156,
                              "name": "nftId",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 28,
                              "src": "1512:5:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            ],
                            "expression": {
                              "argumentTypes": null,
                              "baseExpression": {
                                "argumentTypes": null,
                                "id": 151,
                                "name": "_inHandTokens",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 46,
                                "src": "1481:13:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_mapping$_t_address_$_t_array$_t_uint256_$dyn_storage_$",
                                  "typeString": "mapping(address => uint256[] storage ref)"
                                }
                              },
                              "id": 154,
                              "indexExpression": {
                                "argumentTypes": null,
                                "expression": {
                                  "argumentTypes": null,
                                  "id": 152,
                                  "name": "msg",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": -15,
                                  "src": "1495:3:0",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_magic_message",
                                    "typeString": "msg"
                                  }
                                },
                                "id": 153,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "memberName": "sender",
                                "nodeType": "MemberAccess",
                                "referencedDeclaration": null,
                                "src": "1495:10:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_address_payable",
                                  "typeString": "address payable"
                                }
                              },
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": false,
                              "nodeType": "IndexAccess",
                              "src": "1481:25:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_array$_t_uint256_$dyn_storage",
                                "typeString": "uint256[] storage ref"
                              }
                            },
                            "id": 155,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "push",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": null,
                            "src": "1481:30:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_arraypush_nonpayable$_t_uint256_$returns$__$",
                              "typeString": "function (uint256)"
                            }
                          },
                          "id": 157,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "1481:37:0",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 158,
                        "nodeType": "ExpressionStatement",
                        "src": "1481:37:0"
                      },
                      {
                        "expression": {
                          "argumentTypes": null,
                          "arguments": [
                            {
                              "argumentTypes": null,
                              "expression": {
                                "argumentTypes": null,
                                "id": 160,
                                "name": "msg",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": -15,
                                "src": "1534:3:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_magic_message",
                                  "typeString": "msg"
                                }
                              },
                              "id": 161,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberName": "sender",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": null,
                              "src": "1534:10:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address_payable",
                                "typeString": "address payable"
                              }
                            },
                            {
                              "argumentTypes": null,
                              "id": 162,
                              "name": "nftId",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 28,
                              "src": "1546:5:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address_payable",
                                "typeString": "address payable"
                              },
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            ],
                            "id": 159,
                            "name": "_safeMint",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [
                              1306,
                              1335
                            ],
                            "referencedDeclaration": 1306,
                            "src": "1524:9:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$returns$__$",
                              "typeString": "function (address,uint256)"
                            }
                          },
                          "id": 163,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "1524:28:0",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 164,
                        "nodeType": "ExpressionStatement",
                        "src": "1524:28:0"
                      },
                      {
                        "expression": {
                          "argumentTypes": null,
                          "id": 166,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "UnaryOperation",
                          "operator": "++",
                          "prefix": false,
                          "src": "1558:7:0",
                          "subExpression": {
                            "argumentTypes": null,
                            "id": 165,
                            "name": "nftId",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 28,
                            "src": "1558:5:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "id": 167,
                        "nodeType": "ExpressionStatement",
                        "src": "1558:7:0"
                      }
                    ]
                  },
                  "condition": {
                    "argumentTypes": null,
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 118,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "argumentTypes": null,
                      "id": 115,
                      "name": "i",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 112,
                      "src": "1249:1:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "<",
                    "rightExpression": {
                      "argumentTypes": null,
                      "expression": {
                        "argumentTypes": null,
                        "id": 116,
                        "name": "card_hand",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 108,
                        "src": "1253:9:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_struct$_Card_$25_memory_ptr_$dyn_memory_ptr",
                          "typeString": "struct CardGame.Card memory[] memory"
                        }
                      },
                      "id": 117,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "length",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": null,
                      "src": "1253:16:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "1249:20:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 169,
                  "initializationExpression": {
                    "assignments": [
                      112
                    ],
                    "declarations": [
                      {
                        "constant": false,
                        "id": 112,
                        "mutability": "mutable",
                        "name": "i",
                        "nodeType": "VariableDeclaration",
                        "overrides": null,
                        "scope": 169,
                        "src": "1237:6:0",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 111,
                          "name": "uint",
                          "nodeType": "ElementaryTypeName",
                          "src": "1237:4:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "value": null,
                        "visibility": "internal"
                      }
                    ],
                    "id": 114,
                    "initialValue": {
                      "argumentTypes": null,
                      "hexValue": "30",
                      "id": 113,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "1246:1:0",
                      "subdenomination": null,
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_0_by_1",
                        "typeString": "int_const 0"
                      },
                      "value": "0"
                    },
                    "nodeType": "VariableDeclarationStatement",
                    "src": "1237:10:0"
                  },
                  "loopExpression": {
                    "expression": {
                      "argumentTypes": null,
                      "id": 120,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "nodeType": "UnaryOperation",
                      "operator": "++",
                      "prefix": false,
                      "src": "1271:3:0",
                      "subExpression": {
                        "argumentTypes": null,
                        "id": 119,
                        "name": "i",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 112,
                        "src": "1271:1:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "id": 121,
                    "nodeType": "ExpressionStatement",
                    "src": "1271:3:0"
                  },
                  "nodeType": "ForStatement",
                  "src": "1232:339:0"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "expression": {
                          "argumentTypes": null,
                          "id": 173,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": -15,
                          "src": "1588:3:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 174,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": null,
                        "src": "1588:10:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      ],
                      "expression": {
                        "argumentTypes": null,
                        "id": 170,
                        "name": "players",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 37,
                        "src": "1575:7:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_address_$dyn_storage",
                          "typeString": "address[] storage ref"
                        }
                      },
                      "id": 172,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "push",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": null,
                      "src": "1575:12:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_arraypush_nonpayable$_t_address_$returns$__$",
                        "typeString": "function (address)"
                      }
                    },
                    "id": 175,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1575:24:0",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 176,
                  "nodeType": "ExpressionStatement",
                  "src": "1575:24:0"
                },
                {
                  "eventCall": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "expression": {
                          "argumentTypes": null,
                          "id": 178,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": -15,
                          "src": "1620:3:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 179,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": null,
                        "src": "1620:10:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      ],
                      "id": 177,
                      "name": "HandMinted",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 50,
                      "src": "1609:10:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_event_nonpayable$_t_address_$returns$__$",
                        "typeString": "function (address)"
                      }
                    },
                    "id": 180,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1609:22:0",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 181,
                  "nodeType": "EmitStatement",
                  "src": "1604:27:0"
                }
              ]
            },
            "documentation": null,
            "functionSelector": "fc106758",
            "id": 183,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "mintNewHand",
            "nodeType": "FunctionDefinition",
            "overrides": null,
            "parameters": {
              "id": 109,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 108,
                  "mutability": "mutable",
                  "name": "card_hand",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 183,
                  "src": "1195:23:0",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_array$_t_struct$_Card_$25_memory_ptr_$dyn_memory_ptr",
                    "typeString": "struct CardGame.Card[]"
                  },
                  "typeName": {
                    "baseType": {
                      "contractScope": null,
                      "id": 106,
                      "name": "Card",
                      "nodeType": "UserDefinedTypeName",
                      "referencedDeclaration": 25,
                      "src": "1195:4:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_Card_$25_storage_ptr",
                        "typeString": "struct CardGame.Card"
                      }
                    },
                    "id": 107,
                    "length": null,
                    "nodeType": "ArrayTypeName",
                    "src": "1195:6:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_struct$_Card_$25_storage_$dyn_storage_ptr",
                      "typeString": "struct CardGame.Card[]"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "1194:25:0"
            },
            "returnParameters": {
              "id": 110,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1227:0:0"
            },
            "scope": 184,
            "src": "1174:462:0",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          }
        ],
        "scope": 185,
        "src": "186:1453:0"
      }
    ],
    "src": "0:1639:0"
  },
  "legacyAST": {
    "attributes": {
      "absolutePath": "/C/Users/swapp/Documents/MyProjects/Crypto/crypto_casino/truffle/contracts/CardGame.sol",
      "exportedSymbols": {
        "CardGame": [
          184
        ]
      },
      "license": null
    },
    "children": [
      {
        "attributes": {
          "literals": [
            "solidity",
            ">=",
            "0.4",
            ".22",
            "<",
            "0.8",
            ".0"
          ]
        },
        "id": 1,
        "name": "PragmaDirective",
        "src": "0:32:0"
      },
      {
        "attributes": {
          "literals": [
            "experimental",
            "ABIEncoderV2"
          ]
        },
        "id": 2,
        "name": "PragmaDirective",
        "src": "34:33:0"
      },
      {
        "attributes": {
          "SourceUnit": 1663,
          "absolutePath": "@openzeppelin/contracts/token/ERC721/ERC721.sol",
          "file": "@openzeppelin/contracts/token/ERC721/ERC721.sol",
          "scope": 185,
          "symbolAliases": [
            null
          ],
          "unitAlias": ""
        },
        "id": 3,
        "name": "ImportDirective",
        "src": "71:57:0"
      },
      {
        "attributes": {
          "SourceUnit": 295,
          "absolutePath": "@openzeppelin/contracts/access/Ownable.sol",
          "file": "@openzeppelin/contracts/access/Ownable.sol",
          "scope": 185,
          "symbolAliases": [
            null
          ],
          "unitAlias": ""
        },
        "id": 4,
        "name": "ImportDirective",
        "src": "130:52:0"
      },
      {
        "attributes": {
          "abstract": false,
          "contractDependencies": [
            294,
            351,
            363,
            1662,
            1778,
            1809,
            1836,
            2173
          ],
          "contractKind": "contract",
          "documentation": null,
          "fullyImplemented": true,
          "linearizedBaseContracts": [
            184,
            294,
            1662,
            1809,
            1836,
            1778,
            351,
            363,
            2173
          ],
          "name": "CardGame",
          "scope": 185
        },
        "children": [
          {
            "attributes": {
              "arguments": null
            },
            "children": [
              {
                "attributes": {
                  "contractScope": null,
                  "name": "ERC721",
                  "referencedDeclaration": 1662,
                  "type": "contract ERC721"
                },
                "id": 5,
                "name": "UserDefinedTypeName",
                "src": "207:6:0"
              }
            ],
            "id": 6,
            "name": "InheritanceSpecifier",
            "src": "207:6:0"
          },
          {
            "attributes": {
              "arguments": null
            },
            "children": [
              {
                "attributes": {
                  "contractScope": null,
                  "name": "Ownable",
                  "referencedDeclaration": 294,
                  "type": "contract Ownable"
                },
                "id": 7,
                "name": "UserDefinedTypeName",
                "src": "215:7:0"
              }
            ],
            "id": 8,
            "name": "InheritanceSpecifier",
            "src": "215:7:0"
          },
          {
            "attributes": {
              "documentation": null,
              "implemented": true,
              "isConstructor": true,
              "kind": "constructor",
              "name": "",
              "overrides": null,
              "scope": 184,
              "stateMutability": "nonpayable",
              "virtual": false,
              "visibility": "public"
            },
            "children": [
              {
                "attributes": {
                  "parameters": [
                    null
                  ]
                },
                "children": [],
                "id": 9,
                "name": "ParameterList",
                "src": "238:2:0"
              },
              {
                "attributes": {
                  "parameters": [
                    null
                  ]
                },
                "children": [],
                "id": 14,
                "name": "ParameterList",
                "src": "275:0:0"
              },
              {
                "children": [
                  {
                    "attributes": {
                      "argumentTypes": null,
                      "overloadedDeclarations": [
                        null
                      ],
                      "referencedDeclaration": 1662,
                      "type": "type(contract ERC721)",
                      "value": "ERC721"
                    },
                    "id": 10,
                    "name": "Identifier",
                    "src": "241:6:0"
                  },
                  {
                    "attributes": {
                      "argumentTypes": null,
                      "hexvalue": "436173696e6f4e4654",
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "lValueRequested": false,
                      "subdenomination": null,
                      "token": "string",
                      "type": "literal_string \"CasinoNFT\"",
                      "value": "CasinoNFT"
                    },
                    "id": 11,
                    "name": "Literal",
                    "src": "248:11:0"
                  },
                  {
                    "attributes": {
                      "argumentTypes": null,
                      "hexvalue": "4d4f4f",
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "lValueRequested": false,
                      "subdenomination": null,
                      "token": "string",
                      "type": "literal_string \"MOO\"",
                      "value": "MOO"
                    },
                    "id": 12,
                    "name": "Literal",
                    "src": "261:5:0"
                  }
                ],
                "id": 13,
                "name": "ModifierInvocation",
                "src": "241:26:0"
              },
              {
                "attributes": {
                  "statements": [
                    null
                  ]
                },
                "children": [],
                "id": 15,
                "name": "Block",
                "src": "275:5:0"
              }
            ],
            "id": 16,
            "name": "FunctionDefinition",
            "src": "227:53:0"
          },
          {
            "attributes": {
              "canonicalName": "CardGame.Card",
              "name": "Card",
              "scope": 184,
              "visibility": "public"
            },
            "children": [
              {
                "attributes": {
                  "constant": false,
                  "mutability": "mutable",
                  "name": "deckIdx",
                  "overrides": null,
                  "scope": 25,
                  "stateVariable": false,
                  "storageLocation": "default",
                  "type": "uint256",
                  "value": null,
                  "visibility": "internal"
                },
                "children": [
                  {
                    "attributes": {
                      "name": "uint",
                      "type": "uint256"
                    },
                    "id": 17,
                    "name": "ElementaryTypeName",
                    "src": "302:4:0"
                  }
                ],
                "id": 18,
                "name": "VariableDeclaration",
                "src": "302:12:0"
              },
              {
                "attributes": {
                  "constant": false,
                  "mutability": "mutable",
                  "name": "cardIdx",
                  "overrides": null,
                  "scope": 25,
                  "stateVariable": false,
                  "storageLocation": "default",
                  "type": "uint256",
                  "value": null,
                  "visibility": "internal"
                },
                "children": [
                  {
                    "attributes": {
                      "name": "uint",
                      "type": "uint256"
                    },
                    "id": 19,
                    "name": "ElementaryTypeName",
                    "src": "319:4:0"
                  }
                ],
                "id": 20,
                "name": "VariableDeclaration",
                "src": "319:12:0"
              },
              {
                "attributes": {
                  "constant": false,
                  "mutability": "mutable",
                  "name": "suitTypeIdx",
                  "overrides": null,
                  "scope": 25,
                  "stateVariable": false,
                  "storageLocation": "default",
                  "type": "uint256",
                  "value": null,
                  "visibility": "internal"
                },
                "children": [
                  {
                    "attributes": {
                      "name": "uint",
                      "type": "uint256"
                    },
                    "id": 21,
                    "name": "ElementaryTypeName",
                    "src": "336:4:0"
                  }
                ],
                "id": 22,
                "name": "VariableDeclaration",
                "src": "336:16:0"
              },
              {
                "attributes": {
                  "constant": false,
                  "mutability": "mutable",
                  "name": "isHandCard",
                  "overrides": null,
                  "scope": 25,
                  "stateVariable": false,
                  "storageLocation": "default",
                  "type": "bool",
                  "value": null,
                  "visibility": "internal"
                },
                "children": [
                  {
                    "attributes": {
                      "name": "bool",
                      "type": "bool"
                    },
                    "id": 23,
                    "name": "ElementaryTypeName",
                    "src": "357:4:0"
                  }
                ],
                "id": 24,
                "name": "VariableDeclaration",
                "src": "357:15:0"
              }
            ],
            "id": 25,
            "name": "StructDefinition",
            "src": "285:92:0"
          },
          {
            "attributes": {
              "constant": false,
              "functionSelector": "c6bc5182",
              "mutability": "mutable",
              "name": "nftId",
              "overrides": null,
              "scope": 184,
              "stateVariable": true,
              "storageLocation": "default",
              "type": "uint256",
              "visibility": "public"
            },
            "children": [
              {
                "attributes": {
                  "name": "uint",
                  "type": "uint256"
                },
                "id": 26,
                "name": "ElementaryTypeName",
                "src": "382:4:0"
              },
              {
                "attributes": {
                  "argumentTypes": null,
                  "hexvalue": "30",
                  "isConstant": false,
                  "isLValue": false,
                  "isPure": true,
                  "lValueRequested": false,
                  "subdenomination": null,
                  "token": "number",
                  "type": "int_const 0",
                  "value": "0"
                },
                "id": 27,
                "name": "Literal",
                "src": "402:1:0"
              }
            ],
            "id": 28,
            "name": "VariableDeclaration",
            "src": "382:21:0"
          },
          {
            "attributes": {
              "constant": false,
              "functionSelector": "f34f4c96",
              "mutability": "mutable",
              "name": "currentDeckIdx",
              "overrides": null,
              "scope": 184,
              "stateVariable": true,
              "storageLocation": "default",
              "type": "uint256",
              "visibility": "public"
            },
            "children": [
              {
                "attributes": {
                  "name": "uint",
                  "type": "uint256"
                },
                "id": 29,
                "name": "ElementaryTypeName",
                "src": "407:4:0"
              },
              {
                "attributes": {
                  "argumentTypes": null,
                  "hexvalue": "30",
                  "isConstant": false,
                  "isLValue": false,
                  "isPure": true,
                  "lValueRequested": false,
                  "subdenomination": null,
                  "token": "number",
                  "type": "int_const 0",
                  "value": "0"
                },
                "id": 30,
                "name": "Literal",
                "src": "436:1:0"
              }
            ],
            "id": 31,
            "name": "VariableDeclaration",
            "src": "407:30:0"
          },
          {
            "attributes": {
              "constant": false,
              "functionSelector": "ead2ae25",
              "mutability": "mutable",
              "name": "currentDeckTaken",
              "overrides": null,
              "scope": 184,
              "stateVariable": true,
              "storageLocation": "default",
              "type": "uint256[]",
              "value": null,
              "visibility": "public"
            },
            "children": [
              {
                "attributes": {
                  "length": null,
                  "type": "uint256[]"
                },
                "children": [
                  {
                    "attributes": {
                      "name": "uint",
                      "type": "uint256"
                    },
                    "id": 32,
                    "name": "ElementaryTypeName",
                    "src": "441:4:0"
                  }
                ],
                "id": 33,
                "name": "ArrayTypeName",
                "src": "441:6:0"
              }
            ],
            "id": 34,
            "name": "VariableDeclaration",
            "src": "441:30:0"
          },
          {
            "attributes": {
              "constant": false,
              "functionSelector": "f71d96cb",
              "mutability": "mutable",
              "name": "players",
              "overrides": null,
              "scope": 184,
              "stateVariable": true,
              "storageLocation": "default",
              "type": "address[]",
              "value": null,
              "visibility": "public"
            },
            "children": [
              {
                "attributes": {
                  "length": null,
                  "type": "address[]"
                },
                "children": [
                  {
                    "attributes": {
                      "name": "address",
                      "stateMutability": "nonpayable",
                      "type": "address"
                    },
                    "id": 35,
                    "name": "ElementaryTypeName",
                    "src": "475:7:0"
                  }
                ],
                "id": 36,
                "name": "ArrayTypeName",
                "src": "475:9:0"
              }
            ],
            "id": 37,
            "name": "VariableDeclaration",
            "src": "475:24:0"
          },
          {
            "attributes": {
              "constant": false,
              "mutability": "mutable",
              "name": "_cardStack",
              "overrides": null,
              "scope": 184,
              "stateVariable": true,
              "storageLocation": "default",
              "type": "mapping(uint256 => struct CardGame.Card)",
              "value": null,
              "visibility": "private"
            },
            "children": [
              {
                "attributes": {
                  "type": "mapping(uint256 => struct CardGame.Card)"
                },
                "children": [
                  {
                    "attributes": {
                      "name": "uint256",
                      "type": "uint256"
                    },
                    "id": 38,
                    "name": "ElementaryTypeName",
                    "src": "513:7:0"
                  },
                  {
                    "attributes": {
                      "contractScope": null,
                      "name": "Card",
                      "referencedDeclaration": 25,
                      "type": "struct CardGame.Card"
                    },
                    "id": 39,
                    "name": "UserDefinedTypeName",
                    "src": "524:4:0"
                  }
                ],
                "id": 40,
                "name": "Mapping",
                "src": "505:24:0"
              }
            ],
            "id": 41,
            "name": "VariableDeclaration",
            "src": "505:43:0"
          },
          {
            "attributes": {
              "constant": false,
              "mutability": "mutable",
              "name": "_inHandTokens",
              "overrides": null,
              "scope": 184,
              "stateVariable": true,
              "storageLocation": "default",
              "type": "mapping(address => uint256[])",
              "value": null,
              "visibility": "private"
            },
            "children": [
              {
                "attributes": {
                  "type": "mapping(address => uint256[])"
                },
                "children": [
                  {
                    "attributes": {
                      "name": "address",
                      "type": "address"
                    },
                    "id": 42,
                    "name": "ElementaryTypeName",
                    "src": "560:7:0"
                  },
                  {
                    "attributes": {
                      "length": null,
                      "type": "uint256[]"
                    },
                    "children": [
                      {
                        "attributes": {
                          "name": "uint",
                          "type": "uint256"
                        },
                        "id": 43,
                        "name": "ElementaryTypeName",
                        "src": "571:4:0"
                      }
                    ],
                    "id": 44,
                    "name": "ArrayTypeName",
                    "src": "571:6:0"
                  }
                ],
                "id": 45,
                "name": "Mapping",
                "src": "552:26:0"
              }
            ],
            "id": 46,
            "name": "VariableDeclaration",
            "src": "552:48:0"
          },
          {
            "attributes": {
              "anonymous": false,
              "documentation": null,
              "name": "HandMinted"
            },
            "children": [
              {
                "children": [
                  {
                    "attributes": {
                      "constant": false,
                      "indexed": false,
                      "mutability": "mutable",
                      "name": "player",
                      "overrides": null,
                      "scope": 50,
                      "stateVariable": false,
                      "storageLocation": "default",
                      "type": "address",
                      "value": null,
                      "visibility": "internal"
                    },
                    "children": [
                      {
                        "attributes": {
                          "name": "address",
                          "stateMutability": "nonpayable",
                          "type": "address"
                        },
                        "id": 47,
                        "name": "ElementaryTypeName",
                        "src": "623:7:0"
                      }
                    ],
                    "id": 48,
                    "name": "VariableDeclaration",
                    "src": "623:14:0"
                  }
                ],
                "id": 49,
                "name": "ParameterList",
                "src": "622:16:0"
              }
            ],
            "id": 50,
            "name": "EventDefinition",
            "src": "606:33:0"
          },
          {
            "attributes": {
              "documentation": null,
              "functionSelector": "c1e03728",
              "implemented": true,
              "isConstructor": false,
              "kind": "function",
              "modifiers": [
                null
              ],
              "name": "getTokenDetails",
              "overrides": null,
              "scope": 184,
              "stateMutability": "view",
              "virtual": false,
              "visibility": "public"
            },
            "children": [
              {
                "children": [
                  {
                    "attributes": {
                      "constant": false,
                      "mutability": "mutable",
                      "name": "tokenId",
                      "overrides": null,
                      "scope": 62,
                      "stateVariable": false,
                      "storageLocation": "default",
                      "type": "uint256",
                      "value": null,
                      "visibility": "internal"
                    },
                    "children": [
                      {
                        "attributes": {
                          "name": "uint256",
                          "type": "uint256"
                        },
                        "id": 51,
                        "name": "ElementaryTypeName",
                        "src": "669:7:0"
                      }
                    ],
                    "id": 52,
                    "name": "VariableDeclaration",
                    "src": "669:15:0"
                  }
                ],
                "id": 53,
                "name": "ParameterList",
                "src": "668:17:0"
              },
              {
                "children": [
                  {
                    "attributes": {
                      "constant": false,
                      "mutability": "mutable",
                      "name": "",
                      "overrides": null,
                      "scope": 62,
                      "stateVariable": false,
                      "storageLocation": "memory",
                      "type": "struct CardGame.Card",
                      "value": null,
                      "visibility": "internal"
                    },
                    "children": [
                      {
                        "attributes": {
                          "contractScope": null,
                          "name": "Card",
                          "referencedDeclaration": 25,
                          "type": "struct CardGame.Card"
                        },
                        "id": 54,
                        "name": "UserDefinedTypeName",
                        "src": "707:4:0"
                      }
                    ],
                    "id": 55,
                    "name": "VariableDeclaration",
                    "src": "707:11:0"
                  }
                ],
                "id": 56,
                "name": "ParameterList",
                "src": "706:13:0"
              },
              {
                "children": [
                  {
                    "attributes": {
                      "functionReturnParameters": 56
                    },
                    "children": [
                      {
                        "attributes": {
                          "argumentTypes": null,
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "type": "struct CardGame.Card storage ref"
                        },
                        "children": [
                          {
                            "attributes": {
                              "argumentTypes": null,
                              "overloadedDeclarations": [
                                null
                              ],
                              "referencedDeclaration": 41,
                              "type": "mapping(uint256 => struct CardGame.Card storage ref)",
                              "value": "_cardStack"
                            },
                            "id": 57,
                            "name": "Identifier",
                            "src": "732:10:0"
                          },
                          {
                            "attributes": {
                              "argumentTypes": null,
                              "overloadedDeclarations": [
                                null
                              ],
                              "referencedDeclaration": 52,
                              "type": "uint256",
                              "value": "tokenId"
                            },
                            "id": 58,
                            "name": "Identifier",
                            "src": "743:7:0"
                          }
                        ],
                        "id": 59,
                        "name": "IndexAccess",
                        "src": "732:19:0"
                      }
                    ],
                    "id": 60,
                    "name": "Return",
                    "src": "725:26:0"
                  }
                ],
                "id": 61,
                "name": "Block",
                "src": "720:36:0"
              }
            ],
            "id": 62,
            "name": "FunctionDefinition",
            "src": "644:112:0"
          },
          {
            "attributes": {
              "documentation": null,
              "functionSelector": "eaec2858",
              "implemented": true,
              "isConstructor": false,
              "kind": "function",
              "modifiers": [
                null
              ],
              "name": "getDeckTaken",
              "overrides": null,
              "scope": 184,
              "stateMutability": "view",
              "virtual": false,
              "visibility": "public"
            },
            "children": [
              {
                "attributes": {
                  "parameters": [
                    null
                  ]
                },
                "children": [],
                "id": 63,
                "name": "ParameterList",
                "src": "782:2:0"
              },
              {
                "children": [
                  {
                    "attributes": {
                      "constant": false,
                      "mutability": "mutable",
                      "name": "",
                      "overrides": null,
                      "scope": 71,
                      "stateVariable": false,
                      "storageLocation": "memory",
                      "type": "uint256[]",
                      "value": null,
                      "visibility": "internal"
                    },
                    "children": [
                      {
                        "attributes": {
                          "length": null,
                          "type": "uint256[]"
                        },
                        "children": [
                          {
                            "attributes": {
                              "name": "uint",
                              "type": "uint256"
                            },
                            "id": 64,
                            "name": "ElementaryTypeName",
                            "src": "806:4:0"
                          }
                        ],
                        "id": 65,
                        "name": "ArrayTypeName",
                        "src": "806:6:0"
                      }
                    ],
                    "id": 66,
                    "name": "VariableDeclaration",
                    "src": "806:13:0"
                  }
                ],
                "id": 67,
                "name": "ParameterList",
                "src": "805:15:0"
              },
              {
                "children": [
                  {
                    "attributes": {
                      "functionReturnParameters": 67
                    },
                    "children": [
                      {
                        "attributes": {
                          "argumentTypes": null,
                          "overloadedDeclarations": [
                            null
                          ],
                          "referencedDeclaration": 34,
                          "type": "uint256[] storage ref",
                          "value": "currentDeckTaken"
                        },
                        "id": 68,
                        "name": "Identifier",
                        "src": "833:16:0"
                      }
                    ],
                    "id": 69,
                    "name": "Return",
                    "src": "826:23:0"
                  }
                ],
                "id": 70,
                "name": "Block",
                "src": "821:33:0"
              }
            ],
            "id": 71,
            "name": "FunctionDefinition",
            "src": "761:93:0"
          },
          {
            "attributes": {
              "documentation": null,
              "functionSelector": "8b5b9ccc",
              "implemented": true,
              "isConstructor": false,
              "kind": "function",
              "modifiers": [
                null
              ],
              "name": "getPlayers",
              "overrides": null,
              "scope": 184,
              "stateMutability": "view",
              "virtual": false,
              "visibility": "public"
            },
            "children": [
              {
                "attributes": {
                  "parameters": [
                    null
                  ]
                },
                "children": [],
                "id": 72,
                "name": "ParameterList",
                "src": "879:2:0"
              },
              {
                "children": [
                  {
                    "attributes": {
                      "constant": false,
                      "mutability": "mutable",
                      "name": "",
                      "overrides": null,
                      "scope": 80,
                      "stateVariable": false,
                      "storageLocation": "memory",
                      "type": "address[]",
                      "value": null,
                      "visibility": "internal"
                    },
                    "children": [
                      {
                        "attributes": {
                          "length": null,
                          "type": "address[]"
                        },
                        "children": [
                          {
                            "attributes": {
                              "name": "address",
                              "stateMutability": "nonpayable",
                              "type": "address"
                            },
                            "id": 73,
                            "name": "ElementaryTypeName",
                            "src": "902:7:0"
                          }
                        ],
                        "id": 74,
                        "name": "ArrayTypeName",
                        "src": "902:10:0"
                      }
                    ],
                    "id": 75,
                    "name": "VariableDeclaration",
                    "src": "902:17:0"
                  }
                ],
                "id": 76,
                "name": "ParameterList",
                "src": "901:19:0"
              },
              {
                "children": [
                  {
                    "attributes": {
                      "functionReturnParameters": 76
                    },
                    "children": [
                      {
                        "attributes": {
                          "argumentTypes": null,
                          "overloadedDeclarations": [
                            null
                          ],
                          "referencedDeclaration": 37,
                          "type": "address[] storage ref",
                          "value": "players"
                        },
                        "id": 77,
                        "name": "Identifier",
                        "src": "933:7:0"
                      }
                    ],
                    "id": 78,
                    "name": "Return",
                    "src": "926:14:0"
                  }
                ],
                "id": 79,
                "name": "Block",
                "src": "921:24:0"
              }
            ],
            "id": 80,
            "name": "FunctionDefinition",
            "src": "860:85:0"
          },
          {
            "attributes": {
              "documentation": null,
              "functionSelector": "83638710",
              "implemented": true,
              "isConstructor": false,
              "kind": "function",
              "modifiers": [
                null
              ],
              "name": "getOwnerOf",
              "overrides": null,
              "scope": 184,
              "stateMutability": "view",
              "virtual": false,
              "visibility": "public"
            },
            "children": [
              {
                "children": [
                  {
                    "attributes": {
                      "constant": false,
                      "mutability": "mutable",
                      "name": "tokenId",
                      "overrides": null,
                      "scope": 92,
                      "stateVariable": false,
                      "storageLocation": "default",
                      "type": "uint256",
                      "value": null,
                      "visibility": "internal"
                    },
                    "children": [
                      {
                        "attributes": {
                          "name": "uint256",
                          "type": "uint256"
                        },
                        "id": 81,
                        "name": "ElementaryTypeName",
                        "src": "970:7:0"
                      }
                    ],
                    "id": 82,
                    "name": "VariableDeclaration",
                    "src": "970:15:0"
                  }
                ],
                "id": 83,
                "name": "ParameterList",
                "src": "969:17:0"
              },
              {
                "children": [
                  {
                    "attributes": {
                      "constant": false,
                      "mutability": "mutable",
                      "name": "",
                      "overrides": null,
                      "scope": 92,
                      "stateVariable": false,
                      "storageLocation": "default",
                      "type": "address",
                      "value": null,
                      "visibility": "internal"
                    },
                    "children": [
                      {
                        "attributes": {
                          "name": "address",
                          "stateMutability": "nonpayable",
                          "type": "address"
                        },
                        "id": 84,
                        "name": "ElementaryTypeName",
                        "src": "1008:7:0"
                      }
                    ],
                    "id": 85,
                    "name": "VariableDeclaration",
                    "src": "1008:7:0"
                  }
                ],
                "id": 86,
                "name": "ParameterList",
                "src": "1007:9:0"
              },
              {
                "children": [
                  {
                    "attributes": {
                      "functionReturnParameters": 86
                    },
                    "children": [
                      {
                        "attributes": {
                          "argumentTypes": null,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "isStructConstructorCall": false,
                          "lValueRequested": false,
                          "names": [
                            null
                          ],
                          "tryCall": false,
                          "type": "address",
                          "type_conversion": false
                        },
                        "children": [
                          {
                            "attributes": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              ],
                              "overloadedDeclarations": [
                                null
                              ],
                              "referencedDeclaration": 866,
                              "type": "function (uint256) view returns (address)",
                              "value": "ownerOf"
                            },
                            "id": 87,
                            "name": "Identifier",
                            "src": "1028:7:0"
                          },
                          {
                            "attributes": {
                              "argumentTypes": null,
                              "overloadedDeclarations": [
                                null
                              ],
                              "referencedDeclaration": 82,
                              "type": "uint256",
                              "value": "tokenId"
                            },
                            "id": 88,
                            "name": "Identifier",
                            "src": "1036:7:0"
                          }
                        ],
                        "id": 89,
                        "name": "FunctionCall",
                        "src": "1028:16:0"
                      }
                    ],
                    "id": 90,
                    "name": "Return",
                    "src": "1021:23:0"
                  }
                ],
                "id": 91,
                "name": "Block",
                "src": "1016:33:0"
              }
            ],
            "id": 92,
            "name": "FunctionDefinition",
            "src": "950:99:0"
          },
          {
            "attributes": {
              "documentation": null,
              "functionSelector": "50f0aa99",
              "implemented": true,
              "isConstructor": false,
              "kind": "function",
              "modifiers": [
                null
              ],
              "name": "getInHandTokens",
              "overrides": null,
              "scope": 184,
              "stateMutability": "view",
              "virtual": false,
              "visibility": "public"
            },
            "children": [
              {
                "children": [
                  {
                    "attributes": {
                      "constant": false,
                      "mutability": "mutable",
                      "name": "myAddr",
                      "overrides": null,
                      "scope": 105,
                      "stateVariable": false,
                      "storageLocation": "default",
                      "type": "address",
                      "value": null,
                      "visibility": "internal"
                    },
                    "children": [
                      {
                        "attributes": {
                          "name": "address",
                          "stateMutability": "nonpayable",
                          "type": "address"
                        },
                        "id": 93,
                        "name": "ElementaryTypeName",
                        "src": "1079:7:0"
                      }
                    ],
                    "id": 94,
                    "name": "VariableDeclaration",
                    "src": "1079:14:0"
                  }
                ],
                "id": 95,
                "name": "ParameterList",
                "src": "1078:16:0"
              },
              {
                "children": [
                  {
                    "attributes": {
                      "constant": false,
                      "mutability": "mutable",
                      "name": "",
                      "overrides": null,
                      "scope": 105,
                      "stateVariable": false,
                      "storageLocation": "memory",
                      "type": "uint256[]",
                      "value": null,
                      "visibility": "internal"
                    },
                    "children": [
                      {
                        "attributes": {
                          "length": null,
                          "type": "uint256[]"
                        },
                        "children": [
                          {
                            "attributes": {
                              "name": "uint",
                              "type": "uint256"
                            },
                            "id": 96,
                            "name": "ElementaryTypeName",
                            "src": "1115:4:0"
                          }
                        ],
                        "id": 97,
                        "name": "ArrayTypeName",
                        "src": "1115:7:0"
                      }
                    ],
                    "id": 98,
                    "name": "VariableDeclaration",
                    "src": "1115:14:0"
                  }
                ],
                "id": 99,
                "name": "ParameterList",
                "src": "1114:16:0"
              },
              {
                "children": [
                  {
                    "attributes": {
                      "functionReturnParameters": 99
                    },
                    "children": [
                      {
                        "attributes": {
                          "argumentTypes": null,
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "type": "uint256[] storage ref"
                        },
                        "children": [
                          {
                            "attributes": {
                              "argumentTypes": null,
                              "overloadedDeclarations": [
                                null
                              ],
                              "referencedDeclaration": 46,
                              "type": "mapping(address => uint256[] storage ref)",
                              "value": "_inHandTokens"
                            },
                            "id": 100,
                            "name": "Identifier",
                            "src": "1143:13:0"
                          },
                          {
                            "attributes": {
                              "argumentTypes": null,
                              "overloadedDeclarations": [
                                null
                              ],
                              "referencedDeclaration": 94,
                              "type": "address",
                              "value": "myAddr"
                            },
                            "id": 101,
                            "name": "Identifier",
                            "src": "1157:6:0"
                          }
                        ],
                        "id": 102,
                        "name": "IndexAccess",
                        "src": "1143:21:0"
                      }
                    ],
                    "id": 103,
                    "name": "Return",
                    "src": "1136:28:0"
                  }
                ],
                "id": 104,
                "name": "Block",
                "src": "1131:38:0"
              }
            ],
            "id": 105,
            "name": "FunctionDefinition",
            "src": "1054:115:0"
          },
          {
            "attributes": {
              "documentation": null,
              "functionSelector": "fc106758",
              "implemented": true,
              "isConstructor": false,
              "kind": "function",
              "modifiers": [
                null
              ],
              "name": "mintNewHand",
              "overrides": null,
              "scope": 184,
              "stateMutability": "nonpayable",
              "virtual": false,
              "visibility": "public"
            },
            "children": [
              {
                "children": [
                  {
                    "attributes": {
                      "constant": false,
                      "mutability": "mutable",
                      "name": "card_hand",
                      "overrides": null,
                      "scope": 183,
                      "stateVariable": false,
                      "storageLocation": "memory",
                      "type": "struct CardGame.Card[]",
                      "value": null,
                      "visibility": "internal"
                    },
                    "children": [
                      {
                        "attributes": {
                          "length": null,
                          "type": "struct CardGame.Card[]"
                        },
                        "children": [
                          {
                            "attributes": {
                              "contractScope": null,
                              "name": "Card",
                              "referencedDeclaration": 25,
                              "type": "struct CardGame.Card"
                            },
                            "id": 106,
                            "name": "UserDefinedTypeName",
                            "src": "1195:4:0"
                          }
                        ],
                        "id": 107,
                        "name": "ArrayTypeName",
                        "src": "1195:6:0"
                      }
                    ],
                    "id": 108,
                    "name": "VariableDeclaration",
                    "src": "1195:23:0"
                  }
                ],
                "id": 109,
                "name": "ParameterList",
                "src": "1194:25:0"
              },
              {
                "attributes": {
                  "parameters": [
                    null
                  ]
                },
                "children": [],
                "id": 110,
                "name": "ParameterList",
                "src": "1227:0:0"
              },
              {
                "children": [
                  {
                    "children": [
                      {
                        "attributes": {
                          "assignments": [
                            112
                          ]
                        },
                        "children": [
                          {
                            "attributes": {
                              "constant": false,
                              "mutability": "mutable",
                              "name": "i",
                              "overrides": null,
                              "scope": 169,
                              "stateVariable": false,
                              "storageLocation": "default",
                              "type": "uint256",
                              "value": null,
                              "visibility": "internal"
                            },
                            "children": [
                              {
                                "attributes": {
                                  "name": "uint",
                                  "type": "uint256"
                                },
                                "id": 111,
                                "name": "ElementaryTypeName",
                                "src": "1237:4:0"
                              }
                            ],
                            "id": 112,
                            "name": "VariableDeclaration",
                            "src": "1237:6:0"
                          },
                          {
                            "attributes": {
                              "argumentTypes": null,
                              "hexvalue": "30",
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "lValueRequested": false,
                              "subdenomination": null,
                              "token": "number",
                              "type": "int_const 0",
                              "value": "0"
                            },
                            "id": 113,
                            "name": "Literal",
                            "src": "1246:1:0"
                          }
                        ],
                        "id": 114,
                        "name": "VariableDeclarationStatement",
                        "src": "1237:10:0"
                      },
                      {
                        "attributes": {
                          "argumentTypes": null,
                          "commonType": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          },
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "operator": "<",
                          "type": "bool"
                        },
                        "children": [
                          {
                            "attributes": {
                              "argumentTypes": null,
                              "overloadedDeclarations": [
                                null
                              ],
                              "referencedDeclaration": 112,
                              "type": "uint256",
                              "value": "i"
                            },
                            "id": 115,
                            "name": "Identifier",
                            "src": "1249:1:0"
                          },
                          {
                            "attributes": {
                              "argumentTypes": null,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "member_name": "length",
                              "referencedDeclaration": null,
                              "type": "uint256"
                            },
                            "children": [
                              {
                                "attributes": {
                                  "argumentTypes": null,
                                  "overloadedDeclarations": [
                                    null
                                  ],
                                  "referencedDeclaration": 108,
                                  "type": "struct CardGame.Card memory[] memory",
                                  "value": "card_hand"
                                },
                                "id": 116,
                                "name": "Identifier",
                                "src": "1253:9:0"
                              }
                            ],
                            "id": 117,
                            "name": "MemberAccess",
                            "src": "1253:16:0"
                          }
                        ],
                        "id": 118,
                        "name": "BinaryOperation",
                        "src": "1249:20:0"
                      },
                      {
                        "children": [
                          {
                            "attributes": {
                              "argumentTypes": null,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "operator": "++",
                              "prefix": false,
                              "type": "uint256"
                            },
                            "children": [
                              {
                                "attributes": {
                                  "argumentTypes": null,
                                  "overloadedDeclarations": [
                                    null
                                  ],
                                  "referencedDeclaration": 112,
                                  "type": "uint256",
                                  "value": "i"
                                },
                                "id": 119,
                                "name": "Identifier",
                                "src": "1271:1:0"
                              }
                            ],
                            "id": 120,
                            "name": "UnaryOperation",
                            "src": "1271:3:0"
                          }
                        ],
                        "id": 121,
                        "name": "ExpressionStatement",
                        "src": "1271:3:0"
                      },
                      {
                        "children": [
                          {
                            "children": [
                              {
                                "attributes": {
                                  "argumentTypes": null,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "operator": "=",
                                  "type": "struct CardGame.Card storage ref"
                                },
                                "children": [
                                  {
                                    "attributes": {
                                      "argumentTypes": null,
                                      "isConstant": false,
                                      "isLValue": true,
                                      "isPure": false,
                                      "lValueRequested": true,
                                      "type": "struct CardGame.Card storage ref"
                                    },
                                    "children": [
                                      {
                                        "attributes": {
                                          "argumentTypes": null,
                                          "overloadedDeclarations": [
                                            null
                                          ],
                                          "referencedDeclaration": 41,
                                          "type": "mapping(uint256 => struct CardGame.Card storage ref)",
                                          "value": "_cardStack"
                                        },
                                        "id": 122,
                                        "name": "Identifier",
                                        "src": "1326:10:0"
                                      },
                                      {
                                        "attributes": {
                                          "argumentTypes": null,
                                          "overloadedDeclarations": [
                                            null
                                          ],
                                          "referencedDeclaration": 28,
                                          "type": "uint256",
                                          "value": "nftId"
                                        },
                                        "id": 123,
                                        "name": "Identifier",
                                        "src": "1337:5:0"
                                      }
                                    ],
                                    "id": 124,
                                    "name": "IndexAccess",
                                    "src": "1326:17:0"
                                  },
                                  {
                                    "attributes": {
                                      "argumentTypes": null,
                                      "isConstant": false,
                                      "isLValue": false,
                                      "isPure": false,
                                      "isStructConstructorCall": true,
                                      "lValueRequested": false,
                                      "names": [
                                        null
                                      ],
                                      "tryCall": false,
                                      "type": "struct CardGame.Card memory",
                                      "type_conversion": false
                                    },
                                    "children": [
                                      {
                                        "attributes": {
                                          "argumentTypes": [
                                            {
                                              "typeIdentifier": "t_uint256",
                                              "typeString": "uint256"
                                            },
                                            {
                                              "typeIdentifier": "t_uint256",
                                              "typeString": "uint256"
                                            },
                                            {
                                              "typeIdentifier": "t_uint256",
                                              "typeString": "uint256"
                                            },
                                            {
                                              "typeIdentifier": "t_bool",
                                              "typeString": "bool"
                                            }
                                          ],
                                          "overloadedDeclarations": [
                                            null
                                          ],
                                          "referencedDeclaration": 25,
                                          "type": "type(struct CardGame.Card storage pointer)",
                                          "value": "Card"
                                        },
                                        "id": 125,
                                        "name": "Identifier",
                                        "src": "1346:4:0"
                                      },
                                      {
                                        "attributes": {
                                          "argumentTypes": null,
                                          "isConstant": false,
                                          "isLValue": true,
                                          "isPure": false,
                                          "lValueRequested": false,
                                          "member_name": "deckIdx",
                                          "referencedDeclaration": 18,
                                          "type": "uint256"
                                        },
                                        "children": [
                                          {
                                            "attributes": {
                                              "argumentTypes": null,
                                              "isConstant": false,
                                              "isLValue": true,
                                              "isPure": false,
                                              "lValueRequested": false,
                                              "type": "struct CardGame.Card memory"
                                            },
                                            "children": [
                                              {
                                                "attributes": {
                                                  "argumentTypes": null,
                                                  "overloadedDeclarations": [
                                                    null
                                                  ],
                                                  "referencedDeclaration": 108,
                                                  "type": "struct CardGame.Card memory[] memory",
                                                  "value": "card_hand"
                                                },
                                                "id": 126,
                                                "name": "Identifier",
                                                "src": "1351:9:0"
                                              },
                                              {
                                                "attributes": {
                                                  "argumentTypes": null,
                                                  "overloadedDeclarations": [
                                                    null
                                                  ],
                                                  "referencedDeclaration": 112,
                                                  "type": "uint256",
                                                  "value": "i"
                                                },
                                                "id": 127,
                                                "name": "Identifier",
                                                "src": "1361:1:0"
                                              }
                                            ],
                                            "id": 128,
                                            "name": "IndexAccess",
                                            "src": "1351:12:0"
                                          }
                                        ],
                                        "id": 129,
                                        "name": "MemberAccess",
                                        "src": "1351:20:0"
                                      },
                                      {
                                        "attributes": {
                                          "argumentTypes": null,
                                          "isConstant": false,
                                          "isLValue": true,
                                          "isPure": false,
                                          "lValueRequested": false,
                                          "member_name": "cardIdx",
                                          "referencedDeclaration": 20,
                                          "type": "uint256"
                                        },
                                        "children": [
                                          {
                                            "attributes": {
                                              "argumentTypes": null,
                                              "isConstant": false,
                                              "isLValue": true,
                                              "isPure": false,
                                              "lValueRequested": false,
                                              "type": "struct CardGame.Card memory"
                                            },
                                            "children": [
                                              {
                                                "attributes": {
                                                  "argumentTypes": null,
                                                  "overloadedDeclarations": [
                                                    null
                                                  ],
                                                  "referencedDeclaration": 108,
                                                  "type": "struct CardGame.Card memory[] memory",
                                                  "value": "card_hand"
                                                },
                                                "id": 130,
                                                "name": "Identifier",
                                                "src": "1373:9:0"
                                              },
                                              {
                                                "attributes": {
                                                  "argumentTypes": null,
                                                  "overloadedDeclarations": [
                                                    null
                                                  ],
                                                  "referencedDeclaration": 112,
                                                  "type": "uint256",
                                                  "value": "i"
                                                },
                                                "id": 131,
                                                "name": "Identifier",
                                                "src": "1383:1:0"
                                              }
                                            ],
                                            "id": 132,
                                            "name": "IndexAccess",
                                            "src": "1373:12:0"
                                          }
                                        ],
                                        "id": 133,
                                        "name": "MemberAccess",
                                        "src": "1373:20:0"
                                      },
                                      {
                                        "attributes": {
                                          "argumentTypes": null,
                                          "isConstant": false,
                                          "isLValue": true,
                                          "isPure": false,
                                          "lValueRequested": false,
                                          "member_name": "suitTypeIdx",
                                          "referencedDeclaration": 22,
                                          "type": "uint256"
                                        },
                                        "children": [
                                          {
                                            "attributes": {
                                              "argumentTypes": null,
                                              "isConstant": false,
                                              "isLValue": true,
                                              "isPure": false,
                                              "lValueRequested": false,
                                              "type": "struct CardGame.Card memory"
                                            },
                                            "children": [
                                              {
                                                "attributes": {
                                                  "argumentTypes": null,
                                                  "overloadedDeclarations": [
                                                    null
                                                  ],
                                                  "referencedDeclaration": 108,
                                                  "type": "struct CardGame.Card memory[] memory",
                                                  "value": "card_hand"
                                                },
                                                "id": 134,
                                                "name": "Identifier",
                                                "src": "1395:9:0"
                                              },
                                              {
                                                "attributes": {
                                                  "argumentTypes": null,
                                                  "overloadedDeclarations": [
                                                    null
                                                  ],
                                                  "referencedDeclaration": 112,
                                                  "type": "uint256",
                                                  "value": "i"
                                                },
                                                "id": 135,
                                                "name": "Identifier",
                                                "src": "1405:1:0"
                                              }
                                            ],
                                            "id": 136,
                                            "name": "IndexAccess",
                                            "src": "1395:12:0"
                                          }
                                        ],
                                        "id": 137,
                                        "name": "MemberAccess",
                                        "src": "1395:24:0"
                                      },
                                      {
                                        "attributes": {
                                          "argumentTypes": null,
                                          "hexvalue": "74727565",
                                          "isConstant": false,
                                          "isLValue": false,
                                          "isPure": true,
                                          "lValueRequested": false,
                                          "subdenomination": null,
                                          "token": "bool",
                                          "type": "bool",
                                          "value": "true"
                                        },
                                        "id": 138,
                                        "name": "Literal",
                                        "src": "1421:4:0"
                                      }
                                    ],
                                    "id": 139,
                                    "name": "FunctionCall",
                                    "src": "1346:80:0"
                                  }
                                ],
                                "id": 140,
                                "name": "Assignment",
                                "src": "1326:100:0"
                              }
                            ],
                            "id": 141,
                            "name": "ExpressionStatement",
                            "src": "1326:100:0"
                          },
                          {
                            "children": [
                              {
                                "attributes": {
                                  "argumentTypes": null,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "isStructConstructorCall": false,
                                  "lValueRequested": false,
                                  "names": [
                                    null
                                  ],
                                  "tryCall": false,
                                  "type": "tuple()",
                                  "type_conversion": false
                                },
                                "children": [
                                  {
                                    "attributes": {
                                      "argumentTypes": [
                                        {
                                          "typeIdentifier": "t_uint256",
                                          "typeString": "uint256"
                                        }
                                      ],
                                      "isConstant": false,
                                      "isLValue": false,
                                      "isPure": false,
                                      "lValueRequested": false,
                                      "member_name": "push",
                                      "referencedDeclaration": null,
                                      "type": "function (uint256)"
                                    },
                                    "children": [
                                      {
                                        "attributes": {
                                          "argumentTypes": null,
                                          "overloadedDeclarations": [
                                            null
                                          ],
                                          "referencedDeclaration": 34,
                                          "type": "uint256[] storage ref",
                                          "value": "currentDeckTaken"
                                        },
                                        "id": 142,
                                        "name": "Identifier",
                                        "src": "1432:16:0"
                                      }
                                    ],
                                    "id": 144,
                                    "name": "MemberAccess",
                                    "src": "1432:21:0"
                                  },
                                  {
                                    "attributes": {
                                      "argumentTypes": null,
                                      "isConstant": false,
                                      "isLValue": true,
                                      "isPure": false,
                                      "lValueRequested": false,
                                      "member_name": "cardIdx",
                                      "referencedDeclaration": 20,
                                      "type": "uint256"
                                    },
                                    "children": [
                                      {
                                        "attributes": {
                                          "argumentTypes": null,
                                          "isConstant": false,
                                          "isLValue": true,
                                          "isPure": false,
                                          "lValueRequested": false,
                                          "type": "struct CardGame.Card memory"
                                        },
                                        "children": [
                                          {
                                            "attributes": {
                                              "argumentTypes": null,
                                              "overloadedDeclarations": [
                                                null
                                              ],
                                              "referencedDeclaration": 108,
                                              "type": "struct CardGame.Card memory[] memory",
                                              "value": "card_hand"
                                            },
                                            "id": 145,
                                            "name": "Identifier",
                                            "src": "1454:9:0"
                                          },
                                          {
                                            "attributes": {
                                              "argumentTypes": null,
                                              "overloadedDeclarations": [
                                                null
                                              ],
                                              "referencedDeclaration": 112,
                                              "type": "uint256",
                                              "value": "i"
                                            },
                                            "id": 146,
                                            "name": "Identifier",
                                            "src": "1464:1:0"
                                          }
                                        ],
                                        "id": 147,
                                        "name": "IndexAccess",
                                        "src": "1454:12:0"
                                      }
                                    ],
                                    "id": 148,
                                    "name": "MemberAccess",
                                    "src": "1454:20:0"
                                  }
                                ],
                                "id": 149,
                                "name": "FunctionCall",
                                "src": "1432:43:0"
                              }
                            ],
                            "id": 150,
                            "name": "ExpressionStatement",
                            "src": "1432:43:0"
                          },
                          {
                            "children": [
                              {
                                "attributes": {
                                  "argumentTypes": null,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "isStructConstructorCall": false,
                                  "lValueRequested": false,
                                  "names": [
                                    null
                                  ],
                                  "tryCall": false,
                                  "type": "tuple()",
                                  "type_conversion": false
                                },
                                "children": [
                                  {
                                    "attributes": {
                                      "argumentTypes": [
                                        {
                                          "typeIdentifier": "t_uint256",
                                          "typeString": "uint256"
                                        }
                                      ],
                                      "isConstant": false,
                                      "isLValue": false,
                                      "isPure": false,
                                      "lValueRequested": false,
                                      "member_name": "push",
                                      "referencedDeclaration": null,
                                      "type": "function (uint256)"
                                    },
                                    "children": [
                                      {
                                        "attributes": {
                                          "argumentTypes": null,
                                          "isConstant": false,
                                          "isLValue": true,
                                          "isPure": false,
                                          "lValueRequested": false,
                                          "type": "uint256[] storage ref"
                                        },
                                        "children": [
                                          {
                                            "attributes": {
                                              "argumentTypes": null,
                                              "overloadedDeclarations": [
                                                null
                                              ],
                                              "referencedDeclaration": 46,
                                              "type": "mapping(address => uint256[] storage ref)",
                                              "value": "_inHandTokens"
                                            },
                                            "id": 151,
                                            "name": "Identifier",
                                            "src": "1481:13:0"
                                          },
                                          {
                                            "attributes": {
                                              "argumentTypes": null,
                                              "isConstant": false,
                                              "isLValue": false,
                                              "isPure": false,
                                              "lValueRequested": false,
                                              "member_name": "sender",
                                              "referencedDeclaration": null,
                                              "type": "address payable"
                                            },
                                            "children": [
                                              {
                                                "attributes": {
                                                  "argumentTypes": null,
                                                  "overloadedDeclarations": [
                                                    null
                                                  ],
                                                  "referencedDeclaration": -15,
                                                  "type": "msg",
                                                  "value": "msg"
                                                },
                                                "id": 152,
                                                "name": "Identifier",
                                                "src": "1495:3:0"
                                              }
                                            ],
                                            "id": 153,
                                            "name": "MemberAccess",
                                            "src": "1495:10:0"
                                          }
                                        ],
                                        "id": 154,
                                        "name": "IndexAccess",
                                        "src": "1481:25:0"
                                      }
                                    ],
                                    "id": 155,
                                    "name": "MemberAccess",
                                    "src": "1481:30:0"
                                  },
                                  {
                                    "attributes": {
                                      "argumentTypes": null,
                                      "overloadedDeclarations": [
                                        null
                                      ],
                                      "referencedDeclaration": 28,
                                      "type": "uint256",
                                      "value": "nftId"
                                    },
                                    "id": 156,
                                    "name": "Identifier",
                                    "src": "1512:5:0"
                                  }
                                ],
                                "id": 157,
                                "name": "FunctionCall",
                                "src": "1481:37:0"
                              }
                            ],
                            "id": 158,
                            "name": "ExpressionStatement",
                            "src": "1481:37:0"
                          },
                          {
                            "children": [
                              {
                                "attributes": {
                                  "argumentTypes": null,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "isStructConstructorCall": false,
                                  "lValueRequested": false,
                                  "names": [
                                    null
                                  ],
                                  "tryCall": false,
                                  "type": "tuple()",
                                  "type_conversion": false
                                },
                                "children": [
                                  {
                                    "attributes": {
                                      "argumentTypes": [
                                        {
                                          "typeIdentifier": "t_address_payable",
                                          "typeString": "address payable"
                                        },
                                        {
                                          "typeIdentifier": "t_uint256",
                                          "typeString": "uint256"
                                        }
                                      ],
                                      "overloadedDeclarations": [
                                        1306,
                                        1335
                                      ],
                                      "referencedDeclaration": 1306,
                                      "type": "function (address,uint256)",
                                      "value": "_safeMint"
                                    },
                                    "id": 159,
                                    "name": "Identifier",
                                    "src": "1524:9:0"
                                  },
                                  {
                                    "attributes": {
                                      "argumentTypes": null,
                                      "isConstant": false,
                                      "isLValue": false,
                                      "isPure": false,
                                      "lValueRequested": false,
                                      "member_name": "sender",
                                      "referencedDeclaration": null,
                                      "type": "address payable"
                                    },
                                    "children": [
                                      {
                                        "attributes": {
                                          "argumentTypes": null,
                                          "overloadedDeclarations": [
                                            null
                                          ],
                                          "referencedDeclaration": -15,
                                          "type": "msg",
                                          "value": "msg"
                                        },
                                        "id": 160,
                                        "name": "Identifier",
                                        "src": "1534:3:0"
                                      }
                                    ],
                                    "id": 161,
                                    "name": "MemberAccess",
                                    "src": "1534:10:0"
                                  },
                                  {
                                    "attributes": {
                                      "argumentTypes": null,
                                      "overloadedDeclarations": [
                                        null
                                      ],
                                      "referencedDeclaration": 28,
                                      "type": "uint256",
                                      "value": "nftId"
                                    },
                                    "id": 162,
                                    "name": "Identifier",
                                    "src": "1546:5:0"
                                  }
                                ],
                                "id": 163,
                                "name": "FunctionCall",
                                "src": "1524:28:0"
                              }
                            ],
                            "id": 164,
                            "name": "ExpressionStatement",
                            "src": "1524:28:0"
                          },
                          {
                            "children": [
                              {
                                "attributes": {
                                  "argumentTypes": null,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "operator": "++",
                                  "prefix": false,
                                  "type": "uint256"
                                },
                                "children": [
                                  {
                                    "attributes": {
                                      "argumentTypes": null,
                                      "overloadedDeclarations": [
                                        null
                                      ],
                                      "referencedDeclaration": 28,
                                      "type": "uint256",
                                      "value": "nftId"
                                    },
                                    "id": 165,
                                    "name": "Identifier",
                                    "src": "1558:5:0"
                                  }
                                ],
                                "id": 166,
                                "name": "UnaryOperation",
                                "src": "1558:7:0"
                              }
                            ],
                            "id": 167,
                            "name": "ExpressionStatement",
                            "src": "1558:7:0"
                          }
                        ],
                        "id": 168,
                        "name": "Block",
                        "src": "1276:295:0"
                      }
                    ],
                    "id": 169,
                    "name": "ForStatement",
                    "src": "1232:339:0"
                  },
                  {
                    "children": [
                      {
                        "attributes": {
                          "argumentTypes": null,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "isStructConstructorCall": false,
                          "lValueRequested": false,
                          "names": [
                            null
                          ],
                          "tryCall": false,
                          "type": "tuple()",
                          "type_conversion": false
                        },
                        "children": [
                          {
                            "attributes": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_address_payable",
                                  "typeString": "address payable"
                                }
                              ],
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "member_name": "push",
                              "referencedDeclaration": null,
                              "type": "function (address)"
                            },
                            "children": [
                              {
                                "attributes": {
                                  "argumentTypes": null,
                                  "overloadedDeclarations": [
                                    null
                                  ],
                                  "referencedDeclaration": 37,
                                  "type": "address[] storage ref",
                                  "value": "players"
                                },
                                "id": 170,
                                "name": "Identifier",
                                "src": "1575:7:0"
                              }
                            ],
                            "id": 172,
                            "name": "MemberAccess",
                            "src": "1575:12:0"
                          },
                          {
                            "attributes": {
                              "argumentTypes": null,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "member_name": "sender",
                              "referencedDeclaration": null,
                              "type": "address payable"
                            },
                            "children": [
                              {
                                "attributes": {
                                  "argumentTypes": null,
                                  "overloadedDeclarations": [
                                    null
                                  ],
                                  "referencedDeclaration": -15,
                                  "type": "msg",
                                  "value": "msg"
                                },
                                "id": 173,
                                "name": "Identifier",
                                "src": "1588:3:0"
                              }
                            ],
                            "id": 174,
                            "name": "MemberAccess",
                            "src": "1588:10:0"
                          }
                        ],
                        "id": 175,
                        "name": "FunctionCall",
                        "src": "1575:24:0"
                      }
                    ],
                    "id": 176,
                    "name": "ExpressionStatement",
                    "src": "1575:24:0"
                  },
                  {
                    "children": [
                      {
                        "attributes": {
                          "argumentTypes": null,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "isStructConstructorCall": false,
                          "lValueRequested": false,
                          "names": [
                            null
                          ],
                          "tryCall": false,
                          "type": "tuple()",
                          "type_conversion": false
                        },
                        "children": [
                          {
                            "attributes": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_address_payable",
                                  "typeString": "address payable"
                                }
                              ],
                              "overloadedDeclarations": [
                                null
                              ],
                              "referencedDeclaration": 50,
                              "type": "function (address)",
                              "value": "HandMinted"
                            },
                            "id": 177,
                            "name": "Identifier",
                            "src": "1609:10:0"
                          },
                          {
                            "attributes": {
                              "argumentTypes": null,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "member_name": "sender",
                              "referencedDeclaration": null,
                              "type": "address payable"
                            },
                            "children": [
                              {
                                "attributes": {
                                  "argumentTypes": null,
                                  "overloadedDeclarations": [
                                    null
                                  ],
                                  "referencedDeclaration": -15,
                                  "type": "msg",
                                  "value": "msg"
                                },
                                "id": 178,
                                "name": "Identifier",
                                "src": "1620:3:0"
                              }
                            ],
                            "id": 179,
                            "name": "MemberAccess",
                            "src": "1620:10:0"
                          }
                        ],
                        "id": 180,
                        "name": "FunctionCall",
                        "src": "1609:22:0"
                      }
                    ],
                    "id": 181,
                    "name": "EmitStatement",
                    "src": "1604:27:0"
                  }
                ],
                "id": 182,
                "name": "Block",
                "src": "1227:409:0"
              }
            ],
            "id": 183,
            "name": "FunctionDefinition",
            "src": "1174:462:0"
          }
        ],
        "id": 184,
        "name": "ContractDefinition",
        "src": "186:1453:0"
      }
    ],
    "id": 185,
    "name": "SourceUnit",
    "src": "0:1639:0"
  },
  "compiler": {
    "name": "solc",
    "version": "0.6.12+commit.27d51765.Emscripten.clang"
  },
  "networks": {
    "2": {
      "events": {
        "0x8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925": {
          "anonymous": false,
          "inputs": [
            {
              "indexed": true,
              "internalType": "address",
              "name": "owner",
              "type": "address"
            },
            {
              "indexed": true,
              "internalType": "address",
              "name": "approved",
              "type": "address"
            },
            {
              "indexed": true,
              "internalType": "uint256",
              "name": "tokenId",
              "type": "uint256"
            }
          ],
          "name": "Approval",
          "type": "event"
        },
        "0x17307eab39ab6107e8899845ad3d59bd9653f200f220920489ca2b5937696c31": {
          "anonymous": false,
          "inputs": [
            {
              "indexed": true,
              "internalType": "address",
              "name": "owner",
              "type": "address"
            },
            {
              "indexed": true,
              "internalType": "address",
              "name": "operator",
              "type": "address"
            },
            {
              "indexed": false,
              "internalType": "bool",
              "name": "approved",
              "type": "bool"
            }
          ],
          "name": "ApprovalForAll",
          "type": "event"
        },
        "0x8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0": {
          "anonymous": false,
          "inputs": [
            {
              "indexed": true,
              "internalType": "address",
              "name": "previousOwner",
              "type": "address"
            },
            {
              "indexed": true,
              "internalType": "address",
              "name": "newOwner",
              "type": "address"
            }
          ],
          "name": "OwnershipTransferred",
          "type": "event"
        },
        "0xddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef": {
          "anonymous": false,
          "inputs": [
            {
              "indexed": true,
              "internalType": "address",
              "name": "from",
              "type": "address"
            },
            {
              "indexed": true,
              "internalType": "address",
              "name": "to",
              "type": "address"
            },
            {
              "indexed": true,
              "internalType": "uint256",
              "name": "tokenId",
              "type": "uint256"
            }
          ],
          "name": "Transfer",
          "type": "event"
        },
        "0xe25990158cef48394eca25688e50df28632515e25370a164815fa8151dc447e2": {
          "anonymous": false,
          "inputs": [
            {
              "indexed": false,
              "internalType": "address",
              "name": "player",
              "type": "address"
            }
          ],
          "name": "HandMinted",
          "type": "event"
        }
      },
      "links": {},
      "address": "0x63ae470EA48B1e5A3E47bBc9c58AeFcefDbB7654",
      "transactionHash": "0xe28970c091d635953f54ff51c35c2d84157677ea7a1aa8a3602a4a4a32e0d851"
    }
  },
  "schemaVersion": "3.4.1",
  "updatedAt": "2021-07-29T06:19:13.286Z",
  "networkType": "ethereum",
  "devdoc": {
    "kind": "dev",
    "methods": {
      "approve(address,uint256)": {
        "details": "See {IERC721-approve}."
      },
      "balanceOf(address)": {
        "details": "See {IERC721-balanceOf}."
      },
      "baseURI()": {
        "details": "Returns the base URI set via {_setBaseURI}. This will be automatically added as a prefix in {tokenURI} to each token's URI, or to the token ID if no specific URI is set for that token ID."
      },
      "getApproved(uint256)": {
        "details": "See {IERC721-getApproved}."
      },
      "isApprovedForAll(address,address)": {
        "details": "See {IERC721-isApprovedForAll}."
      },
      "name()": {
        "details": "See {IERC721Metadata-name}."
      },
      "owner()": {
        "details": "Returns the address of the current owner."
      },
      "ownerOf(uint256)": {
        "details": "See {IERC721-ownerOf}."
      },
      "renounceOwnership()": {
        "details": "Leaves the contract without owner. It will not be possible to call `onlyOwner` functions anymore. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby removing any functionality that is only available to the owner."
      },
      "safeTransferFrom(address,address,uint256)": {
        "details": "See {IERC721-safeTransferFrom}."
      },
      "safeTransferFrom(address,address,uint256,bytes)": {
        "details": "See {IERC721-safeTransferFrom}."
      },
      "setApprovalForAll(address,bool)": {
        "details": "See {IERC721-setApprovalForAll}."
      },
      "supportsInterface(bytes4)": {
        "details": "See {IERC165-supportsInterface}. Time complexity O(1), guaranteed to always use less than 30 000 gas."
      },
      "symbol()": {
        "details": "See {IERC721Metadata-symbol}."
      },
      "tokenByIndex(uint256)": {
        "details": "See {IERC721Enumerable-tokenByIndex}."
      },
      "tokenOfOwnerByIndex(address,uint256)": {
        "details": "See {IERC721Enumerable-tokenOfOwnerByIndex}."
      },
      "tokenURI(uint256)": {
        "details": "See {IERC721Metadata-tokenURI}."
      },
      "totalSupply()": {
        "details": "See {IERC721Enumerable-totalSupply}."
      },
      "transferFrom(address,address,uint256)": {
        "details": "See {IERC721-transferFrom}."
      },
      "transferOwnership(address)": {
        "details": "Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner."
      }
    },
    "version": 1
  },
  "userdoc": {
    "kind": "user",
    "methods": {},
    "version": 1
  }
}