{
  "contractName": "CardGame",
  "abi": [
    {
      "inputs": [],
      "stateMutability": "nonpayable",
      "type": "constructor"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "owner",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "approved",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "uint256",
          "name": "tokenId",
          "type": "uint256"
        }
      ],
      "name": "Approval",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "owner",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "operator",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "bool",
          "name": "approved",
          "type": "bool"
        }
      ],
      "name": "ApprovalForAll",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "address",
          "name": "player",
          "type": "address"
        }
      ],
      "name": "HandMinted",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "previousOwner",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "newOwner",
          "type": "address"
        }
      ],
      "name": "OwnershipTransferred",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "from",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "to",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "uint256",
          "name": "tokenId",
          "type": "uint256"
        }
      ],
      "name": "Transfer",
      "type": "event"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "to",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "tokenId",
          "type": "uint256"
        }
      ],
      "name": "approve",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "owner",
          "type": "address"
        }
      ],
      "name": "balanceOf",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function",
      "constant": true
    },
    {
      "inputs": [],
      "name": "baseURI",
      "outputs": [
        {
          "internalType": "string",
          "name": "",
          "type": "string"
        }
      ],
      "stateMutability": "view",
      "type": "function",
      "constant": true
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "tokenId",
          "type": "uint256"
        }
      ],
      "name": "getApproved",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function",
      "constant": true
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "owner",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "operator",
          "type": "address"
        }
      ],
      "name": "isApprovedForAll",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "view",
      "type": "function",
      "constant": true
    },
    {
      "inputs": [],
      "name": "name",
      "outputs": [
        {
          "internalType": "string",
          "name": "",
          "type": "string"
        }
      ],
      "stateMutability": "view",
      "type": "function",
      "constant": true
    },
    {
      "inputs": [],
      "name": "nftId",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function",
      "constant": true
    },
    {
      "inputs": [],
      "name": "owner",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function",
      "constant": true
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "tokenId",
          "type": "uint256"
        }
      ],
      "name": "ownerOf",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function",
      "constant": true
    },
    {
      "inputs": [],
      "name": "renounceOwnership",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "from",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "to",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "tokenId",
          "type": "uint256"
        }
      ],
      "name": "safeTransferFrom",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "from",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "to",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "tokenId",
          "type": "uint256"
        },
        {
          "internalType": "bytes",
          "name": "_data",
          "type": "bytes"
        }
      ],
      "name": "safeTransferFrom",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "operator",
          "type": "address"
        },
        {
          "internalType": "bool",
          "name": "approved",
          "type": "bool"
        }
      ],
      "name": "setApprovalForAll",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "bytes4",
          "name": "interfaceId",
          "type": "bytes4"
        }
      ],
      "name": "supportsInterface",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "view",
      "type": "function",
      "constant": true
    },
    {
      "inputs": [],
      "name": "symbol",
      "outputs": [
        {
          "internalType": "string",
          "name": "",
          "type": "string"
        }
      ],
      "stateMutability": "view",
      "type": "function",
      "constant": true
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "index",
          "type": "uint256"
        }
      ],
      "name": "tokenByIndex",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function",
      "constant": true
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "owner",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "index",
          "type": "uint256"
        }
      ],
      "name": "tokenOfOwnerByIndex",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function",
      "constant": true
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "tokenId",
          "type": "uint256"
        }
      ],
      "name": "tokenURI",
      "outputs": [
        {
          "internalType": "string",
          "name": "",
          "type": "string"
        }
      ],
      "stateMutability": "view",
      "type": "function",
      "constant": true
    },
    {
      "inputs": [],
      "name": "totalSupply",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function",
      "constant": true
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "from",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "to",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "tokenId",
          "type": "uint256"
        }
      ],
      "name": "transferFrom",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "newOwner",
          "type": "address"
        }
      ],
      "name": "transferOwnership",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "tokenId",
          "type": "uint256"
        }
      ],
      "name": "getTokenDetails",
      "outputs": [
        {
          "components": [
            {
              "internalType": "uint256",
              "name": "deckIdx",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "cardIdx",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "suitTypeIdx",
              "type": "uint256"
            },
            {
              "internalType": "bool",
              "name": "isHandCard",
              "type": "bool"
            }
          ],
          "internalType": "struct CardGame.Card",
          "name": "",
          "type": "tuple"
        }
      ],
      "stateMutability": "view",
      "type": "function",
      "constant": true
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "tokenId",
          "type": "uint256"
        }
      ],
      "name": "getOwnerOf",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function",
      "constant": true
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "myAddr",
          "type": "address"
        }
      ],
      "name": "getInHandTokens",
      "outputs": [
        {
          "internalType": "uint256[]",
          "name": "",
          "type": "uint256[]"
        }
      ],
      "stateMutability": "view",
      "type": "function",
      "constant": true
    },
    {
      "inputs": [
        {
          "components": [
            {
              "internalType": "uint256",
              "name": "deckIdx",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "cardIdx",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "suitTypeIdx",
              "type": "uint256"
            },
            {
              "internalType": "bool",
              "name": "isHandCard",
              "type": "bool"
            }
          ],
          "internalType": "struct CardGame.Card[]",
          "name": "card_hand",
          "type": "tuple[]"
        }
      ],
      "name": "mintNewHand",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    }
  ],
  "metadata": "{\"compiler\":{\"version\":\"0.6.12+commit.27d51765\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"approved\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"bool\",\"name\":\"approved\",\"type\":\"bool\"}],\"name\":\"ApprovalForAll\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"player\",\"type\":\"address\"}],\"name\":\"HandMinted\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"previousOwner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"baseURI\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"getApproved\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"myAddr\",\"type\":\"address\"}],\"name\":\"getInHandTokens\",\"outputs\":[{\"internalType\":\"uint256[]\",\"name\":\"\",\"type\":\"uint256[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"getOwnerOf\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"getTokenDetails\",\"outputs\":[{\"components\":[{\"internalType\":\"uint256\",\"name\":\"deckIdx\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"cardIdx\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"suitTypeIdx\",\"type\":\"uint256\"},{\"internalType\":\"bool\",\"name\":\"isHandCard\",\"type\":\"bool\"}],\"internalType\":\"struct CardGame.Card\",\"name\":\"\",\"type\":\"tuple\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"}],\"name\":\"isApprovedForAll\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"components\":[{\"internalType\":\"uint256\",\"name\":\"deckIdx\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"cardIdx\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"suitTypeIdx\",\"type\":\"uint256\"},{\"internalType\":\"bool\",\"name\":\"isHandCard\",\"type\":\"bool\"}],\"internalType\":\"struct CardGame.Card[]\",\"name\":\"card_hand\",\"type\":\"tuple[]\"}],\"name\":\"mintNewHand\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"nftId\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"ownerOf\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"renounceOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"safeTransferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"_data\",\"type\":\"bytes\"}],\"name\":\"safeTransferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"internalType\":\"bool\",\"name\":\"approved\",\"type\":\"bool\"}],\"name\":\"setApprovalForAll\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes4\",\"name\":\"interfaceId\",\"type\":\"bytes4\"}],\"name\":\"supportsInterface\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"index\",\"type\":\"uint256\"}],\"name\":\"tokenByIndex\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"index\",\"type\":\"uint256\"}],\"name\":\"tokenOfOwnerByIndex\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"tokenURI\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{\"approve(address,uint256)\":{\"details\":\"See {IERC721-approve}.\"},\"balanceOf(address)\":{\"details\":\"See {IERC721-balanceOf}.\"},\"baseURI()\":{\"details\":\"Returns the base URI set via {_setBaseURI}. This will be automatically added as a prefix in {tokenURI} to each token's URI, or to the token ID if no specific URI is set for that token ID.\"},\"getApproved(uint256)\":{\"details\":\"See {IERC721-getApproved}.\"},\"isApprovedForAll(address,address)\":{\"details\":\"See {IERC721-isApprovedForAll}.\"},\"name()\":{\"details\":\"See {IERC721Metadata-name}.\"},\"owner()\":{\"details\":\"Returns the address of the current owner.\"},\"ownerOf(uint256)\":{\"details\":\"See {IERC721-ownerOf}.\"},\"renounceOwnership()\":{\"details\":\"Leaves the contract without owner. It will not be possible to call `onlyOwner` functions anymore. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby removing any functionality that is only available to the owner.\"},\"safeTransferFrom(address,address,uint256)\":{\"details\":\"See {IERC721-safeTransferFrom}.\"},\"safeTransferFrom(address,address,uint256,bytes)\":{\"details\":\"See {IERC721-safeTransferFrom}.\"},\"setApprovalForAll(address,bool)\":{\"details\":\"See {IERC721-setApprovalForAll}.\"},\"supportsInterface(bytes4)\":{\"details\":\"See {IERC165-supportsInterface}. Time complexity O(1), guaranteed to always use less than 30 000 gas.\"},\"symbol()\":{\"details\":\"See {IERC721Metadata-symbol}.\"},\"tokenByIndex(uint256)\":{\"details\":\"See {IERC721Enumerable-tokenByIndex}.\"},\"tokenOfOwnerByIndex(address,uint256)\":{\"details\":\"See {IERC721Enumerable-tokenOfOwnerByIndex}.\"},\"tokenURI(uint256)\":{\"details\":\"See {IERC721Metadata-tokenURI}.\"},\"totalSupply()\":{\"details\":\"See {IERC721Enumerable-totalSupply}.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"See {IERC721-transferFrom}.\"},\"transferOwnership(address)\":{\"details\":\"Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"/C/Users/swapp/Documents/MyProjects/Crypto/crypto_casino/truffle/contracts/CardGame.sol\":\"CardGame\"},\"evmVersion\":\"istanbul\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"/C/Users/swapp/Documents/MyProjects/Crypto/crypto_casino/truffle/contracts/CardGame.sol\":{\"keccak256\":\"0x39538d1d46d0fc7535b29bec729feff409b77d2b9da734e6d2bbfc8176dcb602\",\"urls\":[\"bzz-raw://4fdb04e5d9322ca9c922cee204a5807a47f90a2b3f7937fb4de5c3d418e5e19e\",\"dweb:/ipfs/QmetcnhWBHTFcwJBXPops6buSqmuJv7w6r9PsppcWHZ8xR\"]},\"@openzeppelin/contracts/access/Ownable.sol\":{\"keccak256\":\"0x15e2d5bd4c28a88548074c54d220e8086f638a71ed07e6b3ba5a70066fcf458d\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://90faf5851c02f9bd42c5bfb54d4f0421a2612f50ab80b2c4fa24fa3792071cc2\",\"dweb:/ipfs/QmRGM4F2PcGVF85aTfaA9YBhCHHDqrMhRjyp6fGeBTtirb\"]},\"@openzeppelin/contracts/introspection/ERC165.sol\":{\"keccak256\":\"0x24141d2f6b98d4cb77a8936eae8cbaad2e261d9062bdc08036096f4550092501\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://b710eb003944777135f027500a5a57b479fe857849f5f467c1ef9687401e3c95\",\"dweb:/ipfs/QmcELzi6KRzAs3DXwxdsoKWRJ13KSeipKQsJgD3unctdZM\"]},\"@openzeppelin/contracts/introspection/IERC165.sol\":{\"keccak256\":\"0xf70bc25d981e4ec9673a995ad2995d5d493ea188d3d8f388bba9c227ce09fb82\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://bd970f51e3a77790c2f02b5b1759827c3b897c3d98c407b3631e8af32e3dc93c\",\"dweb:/ipfs/QmPF85Amgbqjk3SNZKsPCsqCw8JfwYEPMnnhvMJUyX58je\"]},\"@openzeppelin/contracts/math/SafeMath.sol\":{\"keccak256\":\"0xcc78a17dd88fa5a2edc60c8489e2f405c0913b377216a5b26b35656b2d0dab52\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://526dc85e1f9b9b45830e202568d267d93dde7a4fcccf4ad7798dadcd92304d3c\",\"dweb:/ipfs/QmaoXMB972J3cSDLtBq3xBo4jLwqD2uzXTwujtSPqkYVhR\"]},\"@openzeppelin/contracts/token/ERC721/ERC721.sol\":{\"keccak256\":\"0x118ed7540f56b21ff92e21ebaa73584048e98d2ac04ca67571329bb8dbd9032f\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://da2918b7aff73dd51d41bfcfa548f81eb50531b8353500fdbdacf297076db070\",\"dweb:/ipfs/Qmb8ixAs1vBjZRowQNuNg6bRf2NZmgZ1JTBxmQS14PHpcL\"]},\"@openzeppelin/contracts/token/ERC721/IERC721.sol\":{\"keccak256\":\"0x2d99a0deb6648c34fbc66d6ac4a2d64798d7a5321b45624f6736fadc63da1962\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://2dcdce5ede1e5e650d174ec0b35be7d47b6a50f30bc895ef0d9e59fb75052e45\",\"dweb:/ipfs/QmQ2XFsDLTYqfEdw7pYzHiGtFRY11yQm4b6ynYgKqDxeB8\"]},\"@openzeppelin/contracts/token/ERC721/IERC721Enumerable.sol\":{\"keccak256\":\"0xe6bd1b1218338b6f9fe17776f48623b4ac3d8a40405f74a44bc23c00abe2ca13\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://0c354c3f6e9c487759aa7869be4fba68e0b2efc777b514d289c4cbd3ff8f7e1a\",\"dweb:/ipfs/QmdF9LcSYVmiUCL7JxLEYmSLrjga6zJsujfi6sgEJD4M1z\"]},\"@openzeppelin/contracts/token/ERC721/IERC721Metadata.sol\":{\"keccak256\":\"0xccb917776f826ac6b68bd5a15a5f711e3967848a52ba11e6104d9a4f593314a7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://430255ad2229ced6d880e61a67bdc6e48dbbaed8354a7c1fe918cd8b8714a886\",\"dweb:/ipfs/QmTHY56odzqEpEC6v6tafaWMYY7vmULw25q5XHJLCCAeox\"]},\"@openzeppelin/contracts/token/ERC721/IERC721Receiver.sol\":{\"keccak256\":\"0x52146049d6709c870e8ddcd988b5155cb6c5d640cfcd8978aee52bc1ba2ec4eb\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://ada84513617b7c1b2f890b44503735abaec73a1acd030112a17aac7e6c66a4a1\",\"dweb:/ipfs/QmaiFwdio67iJrfjAdkMac24eJ5sS1qD7CZW6PhUU6KjiK\"]},\"@openzeppelin/contracts/utils/Address.sol\":{\"keccak256\":\"0x28911e614500ae7c607a432a709d35da25f3bc5ddc8bd12b278b66358070c0ea\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://256c8c8af5eb072bc473226ab2b2187149b8fc04f5f4a4820db22527f5ce8e3c\",\"dweb:/ipfs/QmRvi5BhnL7Rxf85KrJhwM6RRhukm4tzoctRdgQEheNyiN\"]},\"@openzeppelin/contracts/utils/Context.sol\":{\"keccak256\":\"0x8d3cb350f04ff49cfb10aef08d87f19dcbaecc8027b0bed12f3275cd12f38cf0\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://ded47ec7c96750f9bd04bbbc84f659992d4ba901cb7b532a52cd468272cf378f\",\"dweb:/ipfs/QmfBrGtQP7rZEqEg6Wz6jh2N2Kukpj1z5v3CGWmAqrzm96\"]},\"@openzeppelin/contracts/utils/EnumerableMap.sol\":{\"keccak256\":\"0x4b087f06b6670a131a5a14e53b1d2a5ef19c034cc5ec42eeebcf9554325744ad\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://f6a6af5d848334e40db419773f6360601e311ffc21c2e274f730b8c542da99fd\",\"dweb:/ipfs/QmfA24cxQ2g41ZWUuDF295dxDJ4xF1bSDYtC3EaLd7CzW8\"]},\"@openzeppelin/contracts/utils/EnumerableSet.sol\":{\"keccak256\":\"0x1562cd9922fbf739edfb979f506809e2743789cbde3177515542161c3d04b164\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://4580d57781513d98870d9738c7d39094336e0a70cdb90d68dad549c6ced466ec\",\"dweb:/ipfs/Qmf9YZzzRFuvMnav9dgmeRUpdYMMECiZX8w25sHWVbA18V\"]},\"@openzeppelin/contracts/utils/Strings.sol\":{\"keccak256\":\"0xa1e12f97981f1d0964b1c048978606a57127c56c438bab61cdfe269cad859a74\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://5eefac1760f524971e14aa3f3d79515a3d54fd28c1d3bdca0b36127da349b830\",\"dweb:/ipfs/QmUMzkyH3ytJX5gVPizQruNLhkKmuJb3nFqBDad4LPdg5U\"]}},\"version\":1}",
  "bytecode": "0x60806040526000600b553480156200001657600080fd5b506040518060400160405280600981526020017f436173696e6f4e465400000000000000000000000000000000000000000000008152506040518060400160405280600381526020017f4d4f4f00000000000000000000000000000000000000000000000000000000008152506200009b6301ffc9a760e01b620001ce60201b60201c565b8160069080519060200190620000b3929190620002ae565b508060079080519060200190620000cc929190620002ae565b50620000e56380ac58cd60e01b620001ce60201b60201c565b620000fd635b5e139f60e01b620001ce60201b60201c565b6200011563780e9d6360e01b620001ce60201b60201c565b5050600062000129620002a660201b60201c565b905080600a60006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055508073ffffffffffffffffffffffffffffffffffffffff16600073ffffffffffffffffffffffffffffffffffffffff167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e060405160405180910390a350620003c9565b63ffffffff60e01b817bffffffffffffffffffffffffffffffffffffffffffffffffffffffff191614156200023a576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401620002319062000396565b60405180910390fd5b6001600080837bffffffffffffffffffffffffffffffffffffffffffffffffffffffff19167bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916815260200190815260200160002060006101000a81548160ff02191690831515021790555050565b600033905090565b828054600181600116156101000203166002900490600052602060002090601f016020900481019282601f10620002f157805160ff191683800117855562000322565b8280016001018555821562000322579182015b828111156200032157825182559160200191906001019062000304565b5b50905062000331919062000335565b5090565b5b808211156200035057600081600090555060010162000336565b5090565b600062000363601c83620003b8565b91507f4552433136353a20696e76616c696420696e74657266616365206964000000006000830152602082019050919050565b60006020820190508181036000830152620003b18162000354565b9050919050565b600082825260208201905092915050565b61386080620003d96000396000f3fe608060405234801561001057600080fd5b50600436106101735760003560e01c806370a08231116100de578063b88d4fde11610097578063c87b56dd11610071578063c87b56dd14610472578063e985e9c5146104a2578063f2fde38b146104d2578063fc106758146104ee57610173565b8063b88d4fde14610408578063c1e0372814610424578063c6bc51821461045457610173565b806370a0823114610346578063715018a61461037657806383638710146103805780638da5cb5b146103b057806395d89b41146103ce578063a22cb465146103ec57610173565b80632f745c59116101305780632f745c591461024c57806342842e0e1461027c5780634f6ccce71461029857806350f0aa99146102c85780636352211e146102f85780636c0360eb1461032857610173565b806301ffc9a71461017857806306fdde03146101a8578063081812fc146101c6578063095ea7b3146101f657806318160ddd1461021257806323b872dd14610230575b600080fd5b610192600480360381019061018d9190612853565b61050a565b60405161019f9190613289565b60405180910390f35b6101b0610571565b6040516101bd91906132a4565b60405180910390f35b6101e060048036038101906101db91906128a5565b610613565b6040516101ed91906131e5565b60405180910390f35b610210600480360381019061020b91906127d6565b610698565b005b61021a6107b0565b6040516102279190613541565b60405180910390f35b61024a600480360381019061024591906126d0565b6107c1565b005b610266600480360381019061026191906127d6565b610821565b6040516102739190613541565b60405180910390f35b610296600480360381019061029191906126d0565b61087c565b005b6102b260048036038101906102ad91906128a5565b61089c565b6040516102bf9190613541565b60405180910390f35b6102e260048036038101906102dd919061266b565b6108bf565b6040516102ef9190613267565b60405180910390f35b610312600480360381019061030d91906128a5565b610956565b60405161031f91906131e5565b60405180910390f35b61033061098d565b60405161033d91906132a4565b60405180910390f35b610360600480360381019061035b919061266b565b610a2f565b60405161036d9190613541565b60405180910390f35b61037e610aee565b005b61039a600480360381019061039591906128a5565b610c2b565b6040516103a791906131e5565b60405180910390f35b6103b8610c3d565b6040516103c591906131e5565b60405180910390f35b6103d6610c67565b6040516103e391906132a4565b60405180910390f35b6104066004803603810190610401919061279a565b610d09565b005b610422600480360381019061041d919061271f565b610e8a565b005b61043e600480360381019061043991906128a5565b610eec565b60405161044b9190613526565b60405180910390f35b61045c610f52565b6040516104699190613541565b60405180910390f35b61048c600480360381019061048791906128a5565b610f58565b60405161049991906132a4565b60405180910390f35b6104bc60048036038101906104b79190612694565b6110db565b6040516104c99190613289565b60405180910390f35b6104ec60048036038101906104e7919061266b565b61116f565b005b61050860048036038101906105039190612812565b61131b565b005b6000806000837bffffffffffffffffffffffffffffffffffffffffffffffffffffffff19167bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916815260200190815260200160002060009054906101000a900460ff169050919050565b606060068054600181600116156101000203166002900480601f0160208091040260200160405190810160405280929190818152602001828054600181600116156101000203166002900480156106095780601f106105de57610100808354040283529160200191610609565b820191906000526020600020905b8154815290600101906020018083116105ec57829003601f168201915b5050505050905090565b600061061e826114d1565b61065d576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161065490613446565b60405180910390fd5b6004600083815260200190815260200160002060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff169050919050565b60006106a382610956565b90508073ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff161415610714576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161070b906134c6565b60405180910390fd5b8073ffffffffffffffffffffffffffffffffffffffff166107336114ee565b73ffffffffffffffffffffffffffffffffffffffff16148061076257506107618161075c6114ee565b6110db565b5b6107a1576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610798906133c6565b60405180910390fd5b6107ab83836114f6565b505050565b60006107bc60026115af565b905090565b6107d26107cc6114ee565b826115c4565b610811576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610808906134e6565b60405180910390fd5b61081c8383836116a2565b505050565b600061087482600160008673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000206118b990919063ffffffff16565b905092915050565b61089783838360405180602001604052806000815250610e8a565b505050565b6000806108b38360026118d390919063ffffffff16565b50905080915050919050565b6060600d60008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002080548060200260200160405190810160405280929190818152602001828054801561094a57602002820191906000526020600020905b815481526020019060010190808311610936575b50505050509050919050565b6000610986826040518060600160405280602981526020016138026029913960026118ff9092919063ffffffff16565b9050919050565b606060098054600181600116156101000203166002900480601f016020809104026020016040519081016040528092919081815260200182805460018160011615610100020316600290048015610a255780601f106109fa57610100808354040283529160200191610a25565b820191906000526020600020905b815481529060010190602001808311610a0857829003601f168201915b5050505050905090565b60008073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff161415610aa0576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610a97906133e6565b60405180910390fd5b610ae7600160008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002061191e565b9050919050565b610af66114ee565b73ffffffffffffffffffffffffffffffffffffffff16610b14610c3d565b73ffffffffffffffffffffffffffffffffffffffff1614610b6a576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610b6190613466565b60405180910390fd5b600073ffffffffffffffffffffffffffffffffffffffff16600a60009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e060405160405180910390a36000600a60006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550565b6000610c3682610956565b9050919050565b6000600a60009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905090565b606060078054600181600116156101000203166002900480601f016020809104026020016040519081016040528092919081815260200182805460018160011615610100020316600290048015610cff5780601f10610cd457610100808354040283529160200191610cff565b820191906000526020600020905b815481529060010190602001808311610ce257829003601f168201915b5050505050905090565b610d116114ee565b73ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff161415610d7f576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610d7690613366565b60405180910390fd5b8060056000610d8c6114ee565b73ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060006101000a81548160ff0219169083151502179055508173ffffffffffffffffffffffffffffffffffffffff16610e396114ee565b73ffffffffffffffffffffffffffffffffffffffff167f17307eab39ab6107e8899845ad3d59bd9653f200f220920489ca2b5937696c3183604051610e7e9190613289565b60405180910390a35050565b610e9b610e956114ee565b836115c4565b610eda576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610ed1906134e6565b60405180910390fd5b610ee684848484611933565b50505050565b610ef461248d565b600c60008381526020019081526020016000206040518060800160405290816000820154815260200160018201548152602001600282015481526020016003820160009054906101000a900460ff1615151515815250509050919050565b600b5481565b6060610f63826114d1565b610fa2576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610f99906134a6565b60405180910390fd5b6060600860008481526020019081526020016000208054600181600116156101000203166002900480601f01602080910402602001604051908101604052809291908181526020018280546001816001161561010002031660029004801561104b5780601f106110205761010080835404028352916020019161104b565b820191906000526020600020905b81548152906001019060200180831161102e57829003601f168201915b50505050509050606061105c61098d565b90506000815114156110725781925050506110d6565b6000825111156110a757808260405160200161108f9291906131c1565b604051602081830303815290604052925050506110d6565b806110b18561198f565b6040516020016110c29291906131c1565b604051602081830303815290604052925050505b919050565b6000600560008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060009054906101000a900460ff16905092915050565b6111776114ee565b73ffffffffffffffffffffffffffffffffffffffff16611195610c3d565b73ffffffffffffffffffffffffffffffffffffffff16146111eb576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016111e290613466565b60405180910390fd5b600073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff16141561125b576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161125290613306565b60405180910390fd5b8073ffffffffffffffffffffffffffffffffffffffff16600a60009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e060405160405180910390a380600a60006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555050565b60005b815181101561149657600082828151811061133557fe5b6020026020010151600001519050604051806080016040528084848151811061135a57fe5b602002602001015160000151815260200184848151811061137757fe5b602002602001015160200151815260200184848151811061139457fe5b602002602001015160400151815260200160011515815250600c6000600b54815260200190815260200160002060008201518160000155602082015181600101556040820151816002015560608201518160030160006101000a81548160ff021916908315150217905550905050600d60003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020600b54908060018154018082558091505060019003906000526020600020016000909190919091505561147633600b54611ad6565b600b6000815480929190600101919050555050808060010191505061131e565b507fe25990158cef48394eca25688e50df28632515e25370a164815fa8151dc447e2336040516114c69190613200565b60405180910390a150565b60006114e7826002611af490919063ffffffff16565b9050919050565b600033905090565b816004600083815260200190815260200160002060006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550808273ffffffffffffffffffffffffffffffffffffffff1661156983610956565b73ffffffffffffffffffffffffffffffffffffffff167f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b92560405160405180910390a45050565b60006115bd82600001611b0e565b9050919050565b60006115cf826114d1565b61160e576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401611605906133a6565b60405180910390fd5b600061161983610956565b90508073ffffffffffffffffffffffffffffffffffffffff168473ffffffffffffffffffffffffffffffffffffffff16148061168857508373ffffffffffffffffffffffffffffffffffffffff1661167084610613565b73ffffffffffffffffffffffffffffffffffffffff16145b80611699575061169881856110db565b5b91505092915050565b8273ffffffffffffffffffffffffffffffffffffffff166116c282610956565b73ffffffffffffffffffffffffffffffffffffffff1614611718576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161170f90613486565b60405180910390fd5b600073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff161415611788576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161177f90613346565b60405180910390fd5b611793838383611b1f565b61179e6000826114f6565b6117ef81600160008673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020611b2490919063ffffffff16565b5061184181600160008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020611b3e90919063ffffffff16565b5061185881836002611b589092919063ffffffff16565b50808273ffffffffffffffffffffffffffffffffffffffff168473ffffffffffffffffffffffffffffffffffffffff167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef60405160405180910390a4505050565b60006118c88360000183611b8d565b60001c905092915050565b6000806000806118e68660000186611bfa565b915091508160001c8160001c9350935050509250929050565b6000611912846000018460001b84611c7d565b60001c90509392505050565b600061192c82600001611d0e565b9050919050565b61193e8484846116a2565b61194a84848484611d1f565b611989576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401611980906132e6565b60405180910390fd5b50505050565b606060008214156119d7576040518060400160405280600181526020017f30000000000000000000000000000000000000000000000000000000000000008152509050611ad1565b600082905060005b60008214611a01578080600101915050600a82816119f957fe5b0491506119df565b60608167ffffffffffffffff81118015611a1a57600080fd5b506040519080825280601f01601f191660200182016040528015611a4d5781602001600182028036833780820191505090505b50905060006001830390508593505b60008414611ac957600a8481611a6e57fe5b0660300160f81b82828060019003935081518110611a8857fe5b60200101907effffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916908160001a905350600a8481611ac157fe5b049350611a5c565b819450505050505b919050565b611af0828260405180602001604052806000815250611e83565b5050565b6000611b06836000018360001b611ede565b905092915050565b600081600001805490509050919050565b505050565b6000611b36836000018360001b611f01565b905092915050565b6000611b50836000018360001b611fe9565b905092915050565b6000611b84846000018460001b8473ffffffffffffffffffffffffffffffffffffffff1660001b612059565b90509392505050565b600081836000018054905011611bd8576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401611bcf906132c6565b60405180910390fd5b826000018281548110611be757fe5b9060005260206000200154905092915050565b60008082846000018054905011611c46576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401611c3d90613406565b60405180910390fd5b6000846000018481548110611c5757fe5b906000526020600020906002020190508060000154816001015492509250509250929050565b60008084600101600085815260200190815260200160002054905060008114158390611cdf576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401611cd691906132a4565b60405180910390fd5b50846000016001820381548110611cf257fe5b9060005260206000209060020201600101549150509392505050565b600081600001805490509050919050565b6000611d408473ffffffffffffffffffffffffffffffffffffffff16612135565b611d4d5760019050611e7b565b6060611e1463150b7a0260e01b611d626114ee565b888787604051602401611d78949392919061321b565b604051602081830303815290604052907bffffffffffffffffffffffffffffffffffffffffffffffffffffffff19166020820180517bffffffffffffffffffffffffffffffffffffffffffffffffffffffff83818316178352505050506040518060600160405280603281526020016137d0603291398773ffffffffffffffffffffffffffffffffffffffff166121489092919063ffffffff16565b9050600081806020019051810190611e2c919061287c565b905063150b7a0260e01b7bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916817bffffffffffffffffffffffffffffffffffffffffffffffffffffffff191614925050505b949350505050565b611e8d8383612160565b611e9a6000848484611d1f565b611ed9576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401611ed0906132e6565b60405180910390fd5b505050565b600080836001016000848152602001908152602001600020541415905092915050565b60008083600101600084815260200190815260200160002054905060008114611fdd5760006001820390506000600186600001805490500390506000866000018281548110611f4c57fe5b9060005260206000200154905080876000018481548110611f6957fe5b9060005260206000200181905550600183018760010160008381526020019081526020016000208190555086600001805480611fa157fe5b60019003818190600052602060002001600090559055866001016000878152602001908152602001600020600090556001945050505050611fe3565b60009150505b92915050565b6000611ff583836122ee565b61204e578260000182908060018154018082558091505060019003906000526020600020016000909190919091505582600001805490508360010160008481526020019081526020016000208190555060019050612053565b600090505b92915050565b60008084600101600085815260200190815260200160002054905060008114156121005784600001604051806040016040528086815260200185815250908060018154018082558091505060019003906000526020600020906002020160009091909190915060008201518160000155602082015181600101555050846000018054905085600101600086815260200190815260200160002081905550600191505061212e565b8285600001600183038154811061211357fe5b90600052602060002090600202016001018190555060009150505b9392505050565b600080823b905060008111915050919050565b60606121578484600085612311565b90509392505050565b600073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff1614156121d0576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016121c790613426565b60405180910390fd5b6121d9816114d1565b15612219576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161221090613326565b60405180910390fd5b61222560008383611b1f565b61227681600160008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020611b3e90919063ffffffff16565b5061228d81836002611b589092919063ffffffff16565b50808273ffffffffffffffffffffffffffffffffffffffff16600073ffffffffffffffffffffffffffffffffffffffff167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef60405160405180910390a45050565b600080836001016000848152602001908152602001600020541415905092915050565b606082471015612356576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161234d90613386565b60405180910390fd5b61235f85612135565b61239e576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161239590613506565b60405180910390fd5b600060608673ffffffffffffffffffffffffffffffffffffffff1685876040516123c891906131aa565b60006040518083038185875af1925050503d8060008114612405576040519150601f19603f3d011682016040523d82523d6000602084013e61240a565b606091505b509150915061241a828286612426565b92505050949350505050565b6060831561243657829050612486565b6000835111156124495782518084602001fd5b816040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161247d91906132a4565b60405180910390fd5b9392505050565b60405180608001604052806000815260200160008152602001600081526020016000151581525090565b6000813590506124c681613773565b92915050565b600082601f8301126124dd57600080fd5b81356124f06124eb82613589565b61355c565b9150818183526020840193506020810190508385608084028201111561251557600080fd5b60005b83811015612545578161252b88826125e2565b845260208401935060808301925050600181019050612518565b5050505092915050565b60008135905061255e8161378a565b92915050565b600081359050612573816137a1565b92915050565b600081519050612588816137a1565b92915050565b600082601f83011261259f57600080fd5b81356125b26125ad826135b1565b61355c565b915080825260208301602083018583830111156125ce57600080fd5b6125d9838284613720565b50505092915050565b6000608082840312156125f457600080fd5b6125fe608061355c565b9050600061260e84828501612656565b600083015250602061262284828501612656565b602083015250604061263684828501612656565b604083015250606061264a8482850161254f565b60608301525092915050565b600081359050612665816137b8565b92915050565b60006020828403121561267d57600080fd5b600061268b848285016124b7565b91505092915050565b600080604083850312156126a757600080fd5b60006126b5858286016124b7565b92505060206126c6858286016124b7565b9150509250929050565b6000806000606084860312156126e557600080fd5b60006126f3868287016124b7565b9350506020612704868287016124b7565b925050604061271586828701612656565b9150509250925092565b6000806000806080858703121561273557600080fd5b6000612743878288016124b7565b9450506020612754878288016124b7565b935050604061276587828801612656565b925050606085013567ffffffffffffffff81111561278257600080fd5b61278e8782880161258e565b91505092959194509250565b600080604083850312156127ad57600080fd5b60006127bb858286016124b7565b92505060206127cc8582860161254f565b9150509250929050565b600080604083850312156127e957600080fd5b60006127f7858286016124b7565b925050602061280885828601612656565b9150509250929050565b60006020828403121561282457600080fd5b600082013567ffffffffffffffff81111561283e57600080fd5b61284a848285016124cc565b91505092915050565b60006020828403121561286557600080fd5b600061287384828501612564565b91505092915050565b60006020828403121561288e57600080fd5b600061289c84828501612579565b91505092915050565b6000602082840312156128b757600080fd5b60006128c584828501612656565b91505092915050565b60006128da838361318c565b60208301905092915050565b6128ef816136ea565b82525050565b6128fe81613676565b82525050565b61290d81613664565b82525050565b600061291e826135ed565b612928818561361b565b9350612933836135dd565b8060005b8381101561296457815161294b88826128ce565b97506129568361360e565b925050600181019050612937565b5085935050505092915050565b61297a81613688565b82525050565b61298981613688565b82525050565b600061299a826135f8565b6129a4818561362c565b93506129b481856020860161372f565b6129bd81613762565b840191505092915050565b60006129d3826135f8565b6129dd818561363d565b93506129ed81856020860161372f565b80840191505092915050565b6000612a0482613603565b612a0e8185613648565b9350612a1e81856020860161372f565b612a2781613762565b840191505092915050565b6000612a3d82613603565b612a478185613659565b9350612a5781856020860161372f565b80840191505092915050565b6000612a70602283613648565b91507f456e756d657261626c655365743a20696e646578206f7574206f6620626f756e60008301527f64730000000000000000000000000000000000000000000000000000000000006020830152604082019050919050565b6000612ad6603283613648565b91507f4552433732313a207472616e7366657220746f206e6f6e20455243373231526560008301527f63656976657220696d706c656d656e74657200000000000000000000000000006020830152604082019050919050565b6000612b3c602683613648565b91507f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160008301527f64647265737300000000000000000000000000000000000000000000000000006020830152604082019050919050565b6000612ba2601c83613648565b91507f4552433732313a20746f6b656e20616c7265616479206d696e746564000000006000830152602082019050919050565b6000612be2602483613648565b91507f4552433732313a207472616e7366657220746f20746865207a65726f2061646460008301527f72657373000000000000000000000000000000000000000000000000000000006020830152604082019050919050565b6000612c48601983613648565b91507f4552433732313a20617070726f766520746f2063616c6c6572000000000000006000830152602082019050919050565b6000612c88602683613648565b91507f416464726573733a20696e73756666696369656e742062616c616e636520666f60008301527f722063616c6c00000000000000000000000000000000000000000000000000006020830152604082019050919050565b6000612cee602c83613648565b91507f4552433732313a206f70657261746f7220717565727920666f72206e6f6e657860008301527f697374656e7420746f6b656e00000000000000000000000000000000000000006020830152604082019050919050565b6000612d54603883613648565b91507f4552433732313a20617070726f76652063616c6c6572206973206e6f74206f7760008301527f6e6572206e6f7220617070726f76656420666f7220616c6c00000000000000006020830152604082019050919050565b6000612dba602a83613648565b91507f4552433732313a2062616c616e636520717565727920666f7220746865207a6560008301527f726f2061646472657373000000000000000000000000000000000000000000006020830152604082019050919050565b6000612e20602283613648565b91507f456e756d657261626c654d61703a20696e646578206f7574206f6620626f756e60008301527f64730000000000000000000000000000000000000000000000000000000000006020830152604082019050919050565b6000612e86602083613648565b91507f4552433732313a206d696e7420746f20746865207a65726f20616464726573736000830152602082019050919050565b6000612ec6602c83613648565b91507f4552433732313a20617070726f76656420717565727920666f72206e6f6e657860008301527f697374656e7420746f6b656e00000000000000000000000000000000000000006020830152604082019050919050565b6000612f2c602083613648565b91507f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e65726000830152602082019050919050565b6000612f6c602983613648565b91507f4552433732313a207472616e73666572206f6620746f6b656e2074686174206960008301527f73206e6f74206f776e00000000000000000000000000000000000000000000006020830152604082019050919050565b6000612fd2602f83613648565b91507f4552433732314d657461646174613a2055524920717565727920666f72206e6f60008301527f6e6578697374656e7420746f6b656e00000000000000000000000000000000006020830152604082019050919050565b6000613038602183613648565b91507f4552433732313a20617070726f76616c20746f2063757272656e74206f776e6560008301527f72000000000000000000000000000000000000000000000000000000000000006020830152604082019050919050565b600061309e603183613648565b91507f4552433732313a207472616e736665722063616c6c6572206973206e6f74206f60008301527f776e6572206e6f7220617070726f7665640000000000000000000000000000006020830152604082019050919050565b6000613104601d83613648565b91507f416464726573733a2063616c6c20746f206e6f6e2d636f6e74726163740000006000830152602082019050919050565b60808201600082015161314d600085018261318c565b506020820151613160602085018261318c565b506040820151613173604085018261318c565b5060608201516131866060850182612971565b50505050565b613195816136e0565b82525050565b6131a4816136e0565b82525050565b60006131b682846129c8565b915081905092915050565b60006131cd8285612a32565b91506131d98284612a32565b91508190509392505050565b60006020820190506131fa6000830184612904565b92915050565b600060208201905061321560008301846128e6565b92915050565b600060808201905061323060008301876128f5565b61323d6020830186612904565b61324a604083018561319b565b818103606083015261325c818461298f565b905095945050505050565b600060208201905081810360008301526132818184612913565b905092915050565b600060208201905061329e6000830184612980565b92915050565b600060208201905081810360008301526132be81846129f9565b905092915050565b600060208201905081810360008301526132df81612a63565b9050919050565b600060208201905081810360008301526132ff81612ac9565b9050919050565b6000602082019050818103600083015261331f81612b2f565b9050919050565b6000602082019050818103600083015261333f81612b95565b9050919050565b6000602082019050818103600083015261335f81612bd5565b9050919050565b6000602082019050818103600083015261337f81612c3b565b9050919050565b6000602082019050818103600083015261339f81612c7b565b9050919050565b600060208201905081810360008301526133bf81612ce1565b9050919050565b600060208201905081810360008301526133df81612d47565b9050919050565b600060208201905081810360008301526133ff81612dad565b9050919050565b6000602082019050818103600083015261341f81612e13565b9050919050565b6000602082019050818103600083015261343f81612e79565b9050919050565b6000602082019050818103600083015261345f81612eb9565b9050919050565b6000602082019050818103600083015261347f81612f1f565b9050919050565b6000602082019050818103600083015261349f81612f5f565b9050919050565b600060208201905081810360008301526134bf81612fc5565b9050919050565b600060208201905081810360008301526134df8161302b565b9050919050565b600060208201905081810360008301526134ff81613091565b9050919050565b6000602082019050818103600083015261351f816130f7565b9050919050565b600060808201905061353b6000830184613137565b92915050565b6000602082019050613556600083018461319b565b92915050565b6000604051905081810181811067ffffffffffffffff8211171561357f57600080fd5b8060405250919050565b600067ffffffffffffffff8211156135a057600080fd5b602082029050602081019050919050565b600067ffffffffffffffff8211156135c857600080fd5b601f19601f8301169050602081019050919050565b6000819050602082019050919050565b600081519050919050565b600081519050919050565b600081519050919050565b6000602082019050919050565b600082825260208201905092915050565b600082825260208201905092915050565b600081905092915050565b600082825260208201905092915050565b600081905092915050565b600061366f826136c0565b9050919050565b6000613681826136c0565b9050919050565b60008115159050919050565b60007fffffffff0000000000000000000000000000000000000000000000000000000082169050919050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6000819050919050565b60006136f5826136fc565b9050919050565b60006137078261370e565b9050919050565b6000613719826136c0565b9050919050565b82818337600083830152505050565b60005b8381101561374d578082015181840152602081019050613732565b8381111561375c576000848401525b50505050565b6000601f19601f8301169050919050565b61377c81613664565b811461378757600080fd5b50565b61379381613688565b811461379e57600080fd5b50565b6137aa81613694565b81146137b557600080fd5b50565b6137c1816136e0565b81146137cc57600080fd5b5056fe4552433732313a207472616e7366657220746f206e6f6e20455243373231526563656976657220696d706c656d656e7465724552433732313a206f776e657220717565727920666f72206e6f6e6578697374656e7420746f6b656ea26469706673582212208b04e26beb6adf5c6fb24769ad6fec2bd2555e51c00322a4467ea40358ee1ef064736f6c634300060c0033",
  "deployedBytecode": "0x608060405234801561001057600080fd5b50600436106101735760003560e01c806370a08231116100de578063b88d4fde11610097578063c87b56dd11610071578063c87b56dd14610472578063e985e9c5146104a2578063f2fde38b146104d2578063fc106758146104ee57610173565b8063b88d4fde14610408578063c1e0372814610424578063c6bc51821461045457610173565b806370a0823114610346578063715018a61461037657806383638710146103805780638da5cb5b146103b057806395d89b41146103ce578063a22cb465146103ec57610173565b80632f745c59116101305780632f745c591461024c57806342842e0e1461027c5780634f6ccce71461029857806350f0aa99146102c85780636352211e146102f85780636c0360eb1461032857610173565b806301ffc9a71461017857806306fdde03146101a8578063081812fc146101c6578063095ea7b3146101f657806318160ddd1461021257806323b872dd14610230575b600080fd5b610192600480360381019061018d9190612853565b61050a565b60405161019f9190613289565b60405180910390f35b6101b0610571565b6040516101bd91906132a4565b60405180910390f35b6101e060048036038101906101db91906128a5565b610613565b6040516101ed91906131e5565b60405180910390f35b610210600480360381019061020b91906127d6565b610698565b005b61021a6107b0565b6040516102279190613541565b60405180910390f35b61024a600480360381019061024591906126d0565b6107c1565b005b610266600480360381019061026191906127d6565b610821565b6040516102739190613541565b60405180910390f35b610296600480360381019061029191906126d0565b61087c565b005b6102b260048036038101906102ad91906128a5565b61089c565b6040516102bf9190613541565b60405180910390f35b6102e260048036038101906102dd919061266b565b6108bf565b6040516102ef9190613267565b60405180910390f35b610312600480360381019061030d91906128a5565b610956565b60405161031f91906131e5565b60405180910390f35b61033061098d565b60405161033d91906132a4565b60405180910390f35b610360600480360381019061035b919061266b565b610a2f565b60405161036d9190613541565b60405180910390f35b61037e610aee565b005b61039a600480360381019061039591906128a5565b610c2b565b6040516103a791906131e5565b60405180910390f35b6103b8610c3d565b6040516103c591906131e5565b60405180910390f35b6103d6610c67565b6040516103e391906132a4565b60405180910390f35b6104066004803603810190610401919061279a565b610d09565b005b610422600480360381019061041d919061271f565b610e8a565b005b61043e600480360381019061043991906128a5565b610eec565b60405161044b9190613526565b60405180910390f35b61045c610f52565b6040516104699190613541565b60405180910390f35b61048c600480360381019061048791906128a5565b610f58565b60405161049991906132a4565b60405180910390f35b6104bc60048036038101906104b79190612694565b6110db565b6040516104c99190613289565b60405180910390f35b6104ec60048036038101906104e7919061266b565b61116f565b005b61050860048036038101906105039190612812565b61131b565b005b6000806000837bffffffffffffffffffffffffffffffffffffffffffffffffffffffff19167bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916815260200190815260200160002060009054906101000a900460ff169050919050565b606060068054600181600116156101000203166002900480601f0160208091040260200160405190810160405280929190818152602001828054600181600116156101000203166002900480156106095780601f106105de57610100808354040283529160200191610609565b820191906000526020600020905b8154815290600101906020018083116105ec57829003601f168201915b5050505050905090565b600061061e826114d1565b61065d576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161065490613446565b60405180910390fd5b6004600083815260200190815260200160002060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff169050919050565b60006106a382610956565b90508073ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff161415610714576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161070b906134c6565b60405180910390fd5b8073ffffffffffffffffffffffffffffffffffffffff166107336114ee565b73ffffffffffffffffffffffffffffffffffffffff16148061076257506107618161075c6114ee565b6110db565b5b6107a1576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610798906133c6565b60405180910390fd5b6107ab83836114f6565b505050565b60006107bc60026115af565b905090565b6107d26107cc6114ee565b826115c4565b610811576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610808906134e6565b60405180910390fd5b61081c8383836116a2565b505050565b600061087482600160008673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000206118b990919063ffffffff16565b905092915050565b61089783838360405180602001604052806000815250610e8a565b505050565b6000806108b38360026118d390919063ffffffff16565b50905080915050919050565b6060600d60008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002080548060200260200160405190810160405280929190818152602001828054801561094a57602002820191906000526020600020905b815481526020019060010190808311610936575b50505050509050919050565b6000610986826040518060600160405280602981526020016138026029913960026118ff9092919063ffffffff16565b9050919050565b606060098054600181600116156101000203166002900480601f016020809104026020016040519081016040528092919081815260200182805460018160011615610100020316600290048015610a255780601f106109fa57610100808354040283529160200191610a25565b820191906000526020600020905b815481529060010190602001808311610a0857829003601f168201915b5050505050905090565b60008073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff161415610aa0576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610a97906133e6565b60405180910390fd5b610ae7600160008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002061191e565b9050919050565b610af66114ee565b73ffffffffffffffffffffffffffffffffffffffff16610b14610c3d565b73ffffffffffffffffffffffffffffffffffffffff1614610b6a576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610b6190613466565b60405180910390fd5b600073ffffffffffffffffffffffffffffffffffffffff16600a60009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e060405160405180910390a36000600a60006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550565b6000610c3682610956565b9050919050565b6000600a60009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905090565b606060078054600181600116156101000203166002900480601f016020809104026020016040519081016040528092919081815260200182805460018160011615610100020316600290048015610cff5780601f10610cd457610100808354040283529160200191610cff565b820191906000526020600020905b815481529060010190602001808311610ce257829003601f168201915b5050505050905090565b610d116114ee565b73ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff161415610d7f576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610d7690613366565b60405180910390fd5b8060056000610d8c6114ee565b73ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060006101000a81548160ff0219169083151502179055508173ffffffffffffffffffffffffffffffffffffffff16610e396114ee565b73ffffffffffffffffffffffffffffffffffffffff167f17307eab39ab6107e8899845ad3d59bd9653f200f220920489ca2b5937696c3183604051610e7e9190613289565b60405180910390a35050565b610e9b610e956114ee565b836115c4565b610eda576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610ed1906134e6565b60405180910390fd5b610ee684848484611933565b50505050565b610ef461248d565b600c60008381526020019081526020016000206040518060800160405290816000820154815260200160018201548152602001600282015481526020016003820160009054906101000a900460ff1615151515815250509050919050565b600b5481565b6060610f63826114d1565b610fa2576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610f99906134a6565b60405180910390fd5b6060600860008481526020019081526020016000208054600181600116156101000203166002900480601f01602080910402602001604051908101604052809291908181526020018280546001816001161561010002031660029004801561104b5780601f106110205761010080835404028352916020019161104b565b820191906000526020600020905b81548152906001019060200180831161102e57829003601f168201915b50505050509050606061105c61098d565b90506000815114156110725781925050506110d6565b6000825111156110a757808260405160200161108f9291906131c1565b604051602081830303815290604052925050506110d6565b806110b18561198f565b6040516020016110c29291906131c1565b604051602081830303815290604052925050505b919050565b6000600560008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060009054906101000a900460ff16905092915050565b6111776114ee565b73ffffffffffffffffffffffffffffffffffffffff16611195610c3d565b73ffffffffffffffffffffffffffffffffffffffff16146111eb576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016111e290613466565b60405180910390fd5b600073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff16141561125b576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161125290613306565b60405180910390fd5b8073ffffffffffffffffffffffffffffffffffffffff16600a60009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e060405160405180910390a380600a60006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555050565b60005b815181101561149657600082828151811061133557fe5b6020026020010151600001519050604051806080016040528084848151811061135a57fe5b602002602001015160000151815260200184848151811061137757fe5b602002602001015160200151815260200184848151811061139457fe5b602002602001015160400151815260200160011515815250600c6000600b54815260200190815260200160002060008201518160000155602082015181600101556040820151816002015560608201518160030160006101000a81548160ff021916908315150217905550905050600d60003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020600b54908060018154018082558091505060019003906000526020600020016000909190919091505561147633600b54611ad6565b600b6000815480929190600101919050555050808060010191505061131e565b507fe25990158cef48394eca25688e50df28632515e25370a164815fa8151dc447e2336040516114c69190613200565b60405180910390a150565b60006114e7826002611af490919063ffffffff16565b9050919050565b600033905090565b816004600083815260200190815260200160002060006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550808273ffffffffffffffffffffffffffffffffffffffff1661156983610956565b73ffffffffffffffffffffffffffffffffffffffff167f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b92560405160405180910390a45050565b60006115bd82600001611b0e565b9050919050565b60006115cf826114d1565b61160e576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401611605906133a6565b60405180910390fd5b600061161983610956565b90508073ffffffffffffffffffffffffffffffffffffffff168473ffffffffffffffffffffffffffffffffffffffff16148061168857508373ffffffffffffffffffffffffffffffffffffffff1661167084610613565b73ffffffffffffffffffffffffffffffffffffffff16145b80611699575061169881856110db565b5b91505092915050565b8273ffffffffffffffffffffffffffffffffffffffff166116c282610956565b73ffffffffffffffffffffffffffffffffffffffff1614611718576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161170f90613486565b60405180910390fd5b600073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff161415611788576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161177f90613346565b60405180910390fd5b611793838383611b1f565b61179e6000826114f6565b6117ef81600160008673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020611b2490919063ffffffff16565b5061184181600160008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020611b3e90919063ffffffff16565b5061185881836002611b589092919063ffffffff16565b50808273ffffffffffffffffffffffffffffffffffffffff168473ffffffffffffffffffffffffffffffffffffffff167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef60405160405180910390a4505050565b60006118c88360000183611b8d565b60001c905092915050565b6000806000806118e68660000186611bfa565b915091508160001c8160001c9350935050509250929050565b6000611912846000018460001b84611c7d565b60001c90509392505050565b600061192c82600001611d0e565b9050919050565b61193e8484846116a2565b61194a84848484611d1f565b611989576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401611980906132e6565b60405180910390fd5b50505050565b606060008214156119d7576040518060400160405280600181526020017f30000000000000000000000000000000000000000000000000000000000000008152509050611ad1565b600082905060005b60008214611a01578080600101915050600a82816119f957fe5b0491506119df565b60608167ffffffffffffffff81118015611a1a57600080fd5b506040519080825280601f01601f191660200182016040528015611a4d5781602001600182028036833780820191505090505b50905060006001830390508593505b60008414611ac957600a8481611a6e57fe5b0660300160f81b82828060019003935081518110611a8857fe5b60200101907effffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916908160001a905350600a8481611ac157fe5b049350611a5c565b819450505050505b919050565b611af0828260405180602001604052806000815250611e83565b5050565b6000611b06836000018360001b611ede565b905092915050565b600081600001805490509050919050565b505050565b6000611b36836000018360001b611f01565b905092915050565b6000611b50836000018360001b611fe9565b905092915050565b6000611b84846000018460001b8473ffffffffffffffffffffffffffffffffffffffff1660001b612059565b90509392505050565b600081836000018054905011611bd8576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401611bcf906132c6565b60405180910390fd5b826000018281548110611be757fe5b9060005260206000200154905092915050565b60008082846000018054905011611c46576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401611c3d90613406565b60405180910390fd5b6000846000018481548110611c5757fe5b906000526020600020906002020190508060000154816001015492509250509250929050565b60008084600101600085815260200190815260200160002054905060008114158390611cdf576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401611cd691906132a4565b60405180910390fd5b50846000016001820381548110611cf257fe5b9060005260206000209060020201600101549150509392505050565b600081600001805490509050919050565b6000611d408473ffffffffffffffffffffffffffffffffffffffff16612135565b611d4d5760019050611e7b565b6060611e1463150b7a0260e01b611d626114ee565b888787604051602401611d78949392919061321b565b604051602081830303815290604052907bffffffffffffffffffffffffffffffffffffffffffffffffffffffff19166020820180517bffffffffffffffffffffffffffffffffffffffffffffffffffffffff83818316178352505050506040518060600160405280603281526020016137d0603291398773ffffffffffffffffffffffffffffffffffffffff166121489092919063ffffffff16565b9050600081806020019051810190611e2c919061287c565b905063150b7a0260e01b7bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916817bffffffffffffffffffffffffffffffffffffffffffffffffffffffff191614925050505b949350505050565b611e8d8383612160565b611e9a6000848484611d1f565b611ed9576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401611ed0906132e6565b60405180910390fd5b505050565b600080836001016000848152602001908152602001600020541415905092915050565b60008083600101600084815260200190815260200160002054905060008114611fdd5760006001820390506000600186600001805490500390506000866000018281548110611f4c57fe5b9060005260206000200154905080876000018481548110611f6957fe5b9060005260206000200181905550600183018760010160008381526020019081526020016000208190555086600001805480611fa157fe5b60019003818190600052602060002001600090559055866001016000878152602001908152602001600020600090556001945050505050611fe3565b60009150505b92915050565b6000611ff583836122ee565b61204e578260000182908060018154018082558091505060019003906000526020600020016000909190919091505582600001805490508360010160008481526020019081526020016000208190555060019050612053565b600090505b92915050565b60008084600101600085815260200190815260200160002054905060008114156121005784600001604051806040016040528086815260200185815250908060018154018082558091505060019003906000526020600020906002020160009091909190915060008201518160000155602082015181600101555050846000018054905085600101600086815260200190815260200160002081905550600191505061212e565b8285600001600183038154811061211357fe5b90600052602060002090600202016001018190555060009150505b9392505050565b600080823b905060008111915050919050565b60606121578484600085612311565b90509392505050565b600073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff1614156121d0576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016121c790613426565b60405180910390fd5b6121d9816114d1565b15612219576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161221090613326565b60405180910390fd5b61222560008383611b1f565b61227681600160008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020611b3e90919063ffffffff16565b5061228d81836002611b589092919063ffffffff16565b50808273ffffffffffffffffffffffffffffffffffffffff16600073ffffffffffffffffffffffffffffffffffffffff167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef60405160405180910390a45050565b600080836001016000848152602001908152602001600020541415905092915050565b606082471015612356576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161234d90613386565b60405180910390fd5b61235f85612135565b61239e576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161239590613506565b60405180910390fd5b600060608673ffffffffffffffffffffffffffffffffffffffff1685876040516123c891906131aa565b60006040518083038185875af1925050503d8060008114612405576040519150601f19603f3d011682016040523d82523d6000602084013e61240a565b606091505b509150915061241a828286612426565b92505050949350505050565b6060831561243657829050612486565b6000835111156124495782518084602001fd5b816040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161247d91906132a4565b60405180910390fd5b9392505050565b60405180608001604052806000815260200160008152602001600081526020016000151581525090565b6000813590506124c681613773565b92915050565b600082601f8301126124dd57600080fd5b81356124f06124eb82613589565b61355c565b9150818183526020840193506020810190508385608084028201111561251557600080fd5b60005b83811015612545578161252b88826125e2565b845260208401935060808301925050600181019050612518565b5050505092915050565b60008135905061255e8161378a565b92915050565b600081359050612573816137a1565b92915050565b600081519050612588816137a1565b92915050565b600082601f83011261259f57600080fd5b81356125b26125ad826135b1565b61355c565b915080825260208301602083018583830111156125ce57600080fd5b6125d9838284613720565b50505092915050565b6000608082840312156125f457600080fd5b6125fe608061355c565b9050600061260e84828501612656565b600083015250602061262284828501612656565b602083015250604061263684828501612656565b604083015250606061264a8482850161254f565b60608301525092915050565b600081359050612665816137b8565b92915050565b60006020828403121561267d57600080fd5b600061268b848285016124b7565b91505092915050565b600080604083850312156126a757600080fd5b60006126b5858286016124b7565b92505060206126c6858286016124b7565b9150509250929050565b6000806000606084860312156126e557600080fd5b60006126f3868287016124b7565b9350506020612704868287016124b7565b925050604061271586828701612656565b9150509250925092565b6000806000806080858703121561273557600080fd5b6000612743878288016124b7565b9450506020612754878288016124b7565b935050604061276587828801612656565b925050606085013567ffffffffffffffff81111561278257600080fd5b61278e8782880161258e565b91505092959194509250565b600080604083850312156127ad57600080fd5b60006127bb858286016124b7565b92505060206127cc8582860161254f565b9150509250929050565b600080604083850312156127e957600080fd5b60006127f7858286016124b7565b925050602061280885828601612656565b9150509250929050565b60006020828403121561282457600080fd5b600082013567ffffffffffffffff81111561283e57600080fd5b61284a848285016124cc565b91505092915050565b60006020828403121561286557600080fd5b600061287384828501612564565b91505092915050565b60006020828403121561288e57600080fd5b600061289c84828501612579565b91505092915050565b6000602082840312156128b757600080fd5b60006128c584828501612656565b91505092915050565b60006128da838361318c565b60208301905092915050565b6128ef816136ea565b82525050565b6128fe81613676565b82525050565b61290d81613664565b82525050565b600061291e826135ed565b612928818561361b565b9350612933836135dd565b8060005b8381101561296457815161294b88826128ce565b97506129568361360e565b925050600181019050612937565b5085935050505092915050565b61297a81613688565b82525050565b61298981613688565b82525050565b600061299a826135f8565b6129a4818561362c565b93506129b481856020860161372f565b6129bd81613762565b840191505092915050565b60006129d3826135f8565b6129dd818561363d565b93506129ed81856020860161372f565b80840191505092915050565b6000612a0482613603565b612a0e8185613648565b9350612a1e81856020860161372f565b612a2781613762565b840191505092915050565b6000612a3d82613603565b612a478185613659565b9350612a5781856020860161372f565b80840191505092915050565b6000612a70602283613648565b91507f456e756d657261626c655365743a20696e646578206f7574206f6620626f756e60008301527f64730000000000000000000000000000000000000000000000000000000000006020830152604082019050919050565b6000612ad6603283613648565b91507f4552433732313a207472616e7366657220746f206e6f6e20455243373231526560008301527f63656976657220696d706c656d656e74657200000000000000000000000000006020830152604082019050919050565b6000612b3c602683613648565b91507f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160008301527f64647265737300000000000000000000000000000000000000000000000000006020830152604082019050919050565b6000612ba2601c83613648565b91507f4552433732313a20746f6b656e20616c7265616479206d696e746564000000006000830152602082019050919050565b6000612be2602483613648565b91507f4552433732313a207472616e7366657220746f20746865207a65726f2061646460008301527f72657373000000000000000000000000000000000000000000000000000000006020830152604082019050919050565b6000612c48601983613648565b91507f4552433732313a20617070726f766520746f2063616c6c6572000000000000006000830152602082019050919050565b6000612c88602683613648565b91507f416464726573733a20696e73756666696369656e742062616c616e636520666f60008301527f722063616c6c00000000000000000000000000000000000000000000000000006020830152604082019050919050565b6000612cee602c83613648565b91507f4552433732313a206f70657261746f7220717565727920666f72206e6f6e657860008301527f697374656e7420746f6b656e00000000000000000000000000000000000000006020830152604082019050919050565b6000612d54603883613648565b91507f4552433732313a20617070726f76652063616c6c6572206973206e6f74206f7760008301527f6e6572206e6f7220617070726f76656420666f7220616c6c00000000000000006020830152604082019050919050565b6000612dba602a83613648565b91507f4552433732313a2062616c616e636520717565727920666f7220746865207a6560008301527f726f2061646472657373000000000000000000000000000000000000000000006020830152604082019050919050565b6000612e20602283613648565b91507f456e756d657261626c654d61703a20696e646578206f7574206f6620626f756e60008301527f64730000000000000000000000000000000000000000000000000000000000006020830152604082019050919050565b6000612e86602083613648565b91507f4552433732313a206d696e7420746f20746865207a65726f20616464726573736000830152602082019050919050565b6000612ec6602c83613648565b91507f4552433732313a20617070726f76656420717565727920666f72206e6f6e657860008301527f697374656e7420746f6b656e00000000000000000000000000000000000000006020830152604082019050919050565b6000612f2c602083613648565b91507f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e65726000830152602082019050919050565b6000612f6c602983613648565b91507f4552433732313a207472616e73666572206f6620746f6b656e2074686174206960008301527f73206e6f74206f776e00000000000000000000000000000000000000000000006020830152604082019050919050565b6000612fd2602f83613648565b91507f4552433732314d657461646174613a2055524920717565727920666f72206e6f60008301527f6e6578697374656e7420746f6b656e00000000000000000000000000000000006020830152604082019050919050565b6000613038602183613648565b91507f4552433732313a20617070726f76616c20746f2063757272656e74206f776e6560008301527f72000000000000000000000000000000000000000000000000000000000000006020830152604082019050919050565b600061309e603183613648565b91507f4552433732313a207472616e736665722063616c6c6572206973206e6f74206f60008301527f776e6572206e6f7220617070726f7665640000000000000000000000000000006020830152604082019050919050565b6000613104601d83613648565b91507f416464726573733a2063616c6c20746f206e6f6e2d636f6e74726163740000006000830152602082019050919050565b60808201600082015161314d600085018261318c565b506020820151613160602085018261318c565b506040820151613173604085018261318c565b5060608201516131866060850182612971565b50505050565b613195816136e0565b82525050565b6131a4816136e0565b82525050565b60006131b682846129c8565b915081905092915050565b60006131cd8285612a32565b91506131d98284612a32565b91508190509392505050565b60006020820190506131fa6000830184612904565b92915050565b600060208201905061321560008301846128e6565b92915050565b600060808201905061323060008301876128f5565b61323d6020830186612904565b61324a604083018561319b565b818103606083015261325c818461298f565b905095945050505050565b600060208201905081810360008301526132818184612913565b905092915050565b600060208201905061329e6000830184612980565b92915050565b600060208201905081810360008301526132be81846129f9565b905092915050565b600060208201905081810360008301526132df81612a63565b9050919050565b600060208201905081810360008301526132ff81612ac9565b9050919050565b6000602082019050818103600083015261331f81612b2f565b9050919050565b6000602082019050818103600083015261333f81612b95565b9050919050565b6000602082019050818103600083015261335f81612bd5565b9050919050565b6000602082019050818103600083015261337f81612c3b565b9050919050565b6000602082019050818103600083015261339f81612c7b565b9050919050565b600060208201905081810360008301526133bf81612ce1565b9050919050565b600060208201905081810360008301526133df81612d47565b9050919050565b600060208201905081810360008301526133ff81612dad565b9050919050565b6000602082019050818103600083015261341f81612e13565b9050919050565b6000602082019050818103600083015261343f81612e79565b9050919050565b6000602082019050818103600083015261345f81612eb9565b9050919050565b6000602082019050818103600083015261347f81612f1f565b9050919050565b6000602082019050818103600083015261349f81612f5f565b9050919050565b600060208201905081810360008301526134bf81612fc5565b9050919050565b600060208201905081810360008301526134df8161302b565b9050919050565b600060208201905081810360008301526134ff81613091565b9050919050565b6000602082019050818103600083015261351f816130f7565b9050919050565b600060808201905061353b6000830184613137565b92915050565b6000602082019050613556600083018461319b565b92915050565b6000604051905081810181811067ffffffffffffffff8211171561357f57600080fd5b8060405250919050565b600067ffffffffffffffff8211156135a057600080fd5b602082029050602081019050919050565b600067ffffffffffffffff8211156135c857600080fd5b601f19601f8301169050602081019050919050565b6000819050602082019050919050565b600081519050919050565b600081519050919050565b600081519050919050565b6000602082019050919050565b600082825260208201905092915050565b600082825260208201905092915050565b600081905092915050565b600082825260208201905092915050565b600081905092915050565b600061366f826136c0565b9050919050565b6000613681826136c0565b9050919050565b60008115159050919050565b60007fffffffff0000000000000000000000000000000000000000000000000000000082169050919050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6000819050919050565b60006136f5826136fc565b9050919050565b60006137078261370e565b9050919050565b6000613719826136c0565b9050919050565b82818337600083830152505050565b60005b8381101561374d578082015181840152602081019050613732565b8381111561375c576000848401525b50505050565b6000601f19601f8301169050919050565b61377c81613664565b811461378757600080fd5b50565b61379381613688565b811461379e57600080fd5b50565b6137aa81613694565b81146137b557600080fd5b50565b6137c1816136e0565b81146137cc57600080fd5b5056fe4552433732313a207472616e7366657220746f206e6f6e20455243373231526563656976657220696d706c656d656e7465724552433732313a206f776e657220717565727920666f72206e6f6e6578697374656e7420746f6b656ea26469706673582212208b04e26beb6adf5c6fb24769ad6fec2bd2555e51c00322a4467ea40358ee1ef064736f6c634300060c0033",
  "immutableReferences": {},
  "sourceMap": "186:1083:0:-:0;;;402:1;382:21;;227:53;;;;;;;;;;3577:369:5;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;768:40:2;435:10;787:20;;768:18;;;:40;;:::i;:::-;3659:5:5;3651;:13;;;;;;;;;;;;:::i;:::-;;3684:7;3674;:17;;;;;;;;;;;;:::i;:::-;;3779:40;2742:10;3798:20;;3779:18;;;:40;;:::i;:::-;3829:49;3074:10;3848:29;;3829:18;;;:49;;:::i;:::-;3888:51;3447:10;3907:31;;3888:18;;;:51;;:::i;:::-;3577:369;;884:17:1;904:12;:10;;;:12;;:::i;:::-;884:32;;935:9;926:6;;:18;;;;;;;;;;;;;;;;;;992:9;959:43;;988:1;959:43;;;;;;;;;;;;850:159;186:1083:0;;1507:198:2;1605:10;1590:25;;:11;:25;;;;;1582:66;;;;;;;;;;;;:::i;:::-;;;;;;;;;1694:4;1658:20;:33;1679:11;1658:33;;;;;;;;;;;;;;;;;;:40;;;;;;;;;;;;;;;;;;1507:198;:::o;598:104:11:-;651:15;685:10;678:17;;598:104;:::o;186:1083:0:-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;:::o;:::-;;;;;;;;;;;;;;;;;;;;;:::o;6:328:-1:-;;166:67;230:2;225:3;166:67;:::i;:::-;159:74;;266:30;262:1;257:3;253:11;246:51;325:2;320:3;316:12;309:19;;152:182;;;:::o;342:416::-;;542:2;531:9;527:18;519:26;;592:9;586:4;582:20;578:1;567:9;563:17;556:47;617:131;743:4;617:131;:::i;:::-;609:139;;513:245;;;:::o;766:163::-;;881:6;876:3;869:19;918:4;913:3;909:14;894:29;;862:67;;;;:::o;186:1083:0:-;;;;;;;",
  "deployedSourceMap": "186:1083:0:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;965:148:2;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;4517:98:5;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;7222:217;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;6766:395;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;6260:208;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;8086:300;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;6029:160;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;8452:149;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;6540:169;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;765:115:0;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;4280:175:5;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;5855:95;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;4005:218;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;1717:145:1;;;:::i;:::-;;661:99:0;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;1085:85:1;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;4679:102:5;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;7506:290;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;8667:282;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;544:112:0;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;382:21;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;4847:776:5;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;7862:162;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;2011:240:1;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;885:381:0;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;965:148:2;1050:4;1073:20;:33;1094:11;1073:33;;;;;;;;;;;;;;;;;;;;;;;;;;;1066:40;;965:148;;;:::o;4517:98:5:-;4571:13;4603:5;4596:12;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;4517:98;:::o;7222:217::-;7298:7;7325:16;7333:7;7325;:16::i;:::-;7317:73;;;;;;;;;;;;:::i;:::-;;;;;;;;;7408:15;:24;7424:7;7408:24;;;;;;;;;;;;;;;;;;;;;7401:31;;7222:217;;;:::o;6766:395::-;6846:13;6862:23;6877:7;6862:14;:23::i;:::-;6846:39;;6909:5;6903:11;;:2;:11;;;;6895:57;;;;;;;;;;;;:::i;:::-;;;;;;;;;6987:5;6971:21;;:12;:10;:12::i;:::-;:21;;;:69;;;;6996:44;7020:5;7027:12;:10;:12::i;:::-;6996:23;:44::i;:::-;6971:69;6963:159;;;;;;;;;;;;:::i;:::-;;;;;;;;;7133:21;7142:2;7146:7;7133:8;:21::i;:::-;6766:395;;;:::o;6260:208::-;6321:7;6440:21;:12;:19;:21::i;:::-;6433:28;;6260:208;:::o;8086:300::-;8245:41;8264:12;:10;:12::i;:::-;8278:7;8245:18;:41::i;:::-;8237:103;;;;;;;;;;;;:::i;:::-;;;;;;;;;8351:28;8361:4;8367:2;8371:7;8351:9;:28::i;:::-;8086:300;;;:::o;6029:160::-;6126:7;6152:30;6176:5;6152:13;:20;6166:5;6152:20;;;;;;;;;;;;;;;:23;;:30;;;;:::i;:::-;6145:37;;6029:160;;;;:::o;8452:149::-;8555:39;8572:4;8578:2;8582:7;8555:39;;;;;;;;;;;;:16;:39::i;:::-;8452:149;;;:::o;6540:169::-;6615:7;6635:15;6656:22;6672:5;6656:12;:15;;:22;;;;:::i;:::-;6634:44;;;6695:7;6688:14;;;6540:169;;;:::o;765:115:0:-;826:14;854:13;:21;868:6;854:21;;;;;;;;;;;;;;;847:28;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;765:115;;;:::o;4280:175:5:-;4352:7;4378:70;4395:7;4378:70;;;;;;;;;;;;;;;;;:12;:16;;:70;;;;;:::i;:::-;4371:77;;4280:175;;;:::o;5855:95::-;5903:13;5935:8;5928:15;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;5855:95;:::o;4005:218::-;4077:7;4121:1;4104:19;;:5;:19;;;;4096:74;;;;;;;;;;;;:::i;:::-;;;;;;;;;4187:29;:13;:20;4201:5;4187:20;;;;;;;;;;;;;;;:27;:29::i;:::-;4180:36;;4005:218;;;:::o;1717:145:1:-;1308:12;:10;:12::i;:::-;1297:23;;:7;:5;:7::i;:::-;:23;;;1289:68;;;;;;;;;;;;:::i;:::-;;;;;;;;;1823:1:::1;1786:40;;1807:6;;;;;;;;;;;1786:40;;;;;;;;;;;;1853:1;1836:6;;:19;;;;;;;;;;;;;;;;;;1717:145::o:0;661:99:0:-;719:7;739:16;747:7;739;:16::i;:::-;732:23;;661:99;;;:::o;1085:85:1:-;1131:7;1157:6;;;;;;;;;;;1150:13;;1085:85;:::o;4679:102:5:-;4735:13;4767:7;4760:14;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;4679:102;:::o;7506:290::-;7620:12;:10;:12::i;:::-;7608:24;;:8;:24;;;;7600:62;;;;;;;;;;;;:::i;:::-;;;;;;;;;7718:8;7673:18;:32;7692:12;:10;:12::i;:::-;7673:32;;;;;;;;;;;;;;;:42;7706:8;7673:42;;;;;;;;;;;;;;;;:53;;;;;;;;;;;;;;;;;;7770:8;7741:48;;7756:12;:10;:12::i;:::-;7741:48;;;7780:8;7741:48;;;;;;:::i;:::-;;;;;;;;7506:290;;:::o;8667:282::-;8798:41;8817:12;:10;:12::i;:::-;8831:7;8798:18;:41::i;:::-;8790:103;;;;;;;;;;;;:::i;:::-;;;;;;;;;8903:39;8917:4;8923:2;8927:7;8936:5;8903:13;:39::i;:::-;8667:282;;;;:::o;544:112:0:-;607:11;;:::i;:::-;632:10;:19;643:7;632:19;;;;;;;;;;;625:26;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;544:112;;;:::o;382:21::-;;;;:::o;4847:776:5:-;4920:13;4953:16;4961:7;4953;:16::i;:::-;4945:76;;;;;;;;;;;;:::i;:::-;;;;;;;;;5032:23;5058:10;:19;5069:7;5058:19;;;;;;;;;;;5032:45;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;5087:18;5108:9;:7;:9::i;:::-;5087:30;;5212:1;5196:4;5190:18;:23;5186:70;;;5236:9;5229:16;;;;;;5186:70;5384:1;5364:9;5358:23;:27;5354:106;;;5432:4;5438:9;5415:33;;;;;;;;;:::i;:::-;;;;;;;;;;;;;5401:48;;;;;;5354:106;5590:4;5596:18;:7;:16;:18::i;:::-;5573:42;;;;;;;;;:::i;:::-;;;;;;;;;;;;;5559:57;;;;4847:776;;;;:::o;7862:162::-;7959:4;7982:18;:25;8001:5;7982:25;;;;;;;;;;;;;;;:35;8008:8;7982:35;;;;;;;;;;;;;;;;;;;;;;;;;7975:42;;7862:162;;;;:::o;2011:240:1:-;1308:12;:10;:12::i;:::-;1297:23;;:7;:5;:7::i;:::-;:23;;;1289:68;;;;;;;;;;;;:::i;:::-;;;;;;;;;2119:1:::1;2099:22;;:8;:22;;;;2091:73;;;;;;;;;;;;:::i;:::-;;;;;;;;;2208:8;2179:38;;2200:6;;;;;;;;;;;2179:38;;;;;;;;;;;;2236:8;2227:6;;:17;;;;;;;;;;;;;;;;;;2011:240:::0;:::o;885:381:0:-;948:6;943:287;964:9;:16;960:1;:20;943:287;;;993:12;1008:9;1018:1;1008:12;;;;;;;;;;;;;;:20;;;993:35;;1054:80;;;;;;;;1059:9;1069:1;1059:12;;;;;;;;;;;;;;:20;;;1054:80;;;;1081:9;1091:1;1081:12;;;;;;;;;;;;;;:20;;;1054:80;;;;1103:9;1113:1;1103:12;;;;;;;;;;;;;;:24;;;1054:80;;;;1129:4;1054:80;;;;;1034:10;:17;1045:5;;1034:17;;;;;;;;;;;:100;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1140:13;:25;1154:10;1140:25;;;;;;;;;;;;;;;1171:5;;1140:37;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1183:28;1193:10;1205:5;;1183:9;:28::i;:::-;1217:5;;:7;;;;;;;;;;;;;943:287;982:3;;;;;;;943:287;;;;1239:22;1250:10;1239:22;;;;;;:::i;:::-;;;;;;;;885:381;:::o;10383:125:5:-;10448:4;10471:30;10493:7;10471:12;:21;;:30;;;;:::i;:::-;10464:37;;10383:125;;;:::o;598:104:11:-;651:15;685:10;678:17;;598:104;:::o;16225:189:5:-;16326:2;16299:15;:24;16315:7;16299:24;;;;;;;;;;;;:29;;;;;;;;;;;;;;;;;;16381:7;16377:2;16343:46;;16352:23;16367:7;16352:14;:23::i;:::-;16343:46;;;;;;;;;;;;16225:189;;:::o;7820:121:12:-;7889:7;7915:19;7923:3;:10;;7915:7;:19::i;:::-;7908:26;;7820:121;;;:::o;10666:351:5:-;10759:4;10783:16;10791:7;10783;:16::i;:::-;10775:73;;;;;;;;;;;;:::i;:::-;;;;;;;;;10858:13;10874:23;10889:7;10874:14;:23::i;:::-;10858:39;;10926:5;10915:16;;:7;:16;;;:51;;;;10959:7;10935:31;;:20;10947:7;10935:11;:20::i;:::-;:31;;;10915:51;:94;;;;10970:39;10994:5;11001:7;10970:23;:39::i;:::-;10915:94;10907:103;;;10666:351;;;;:::o;13707:584::-;13831:4;13804:31;;:23;13819:7;13804:14;:23::i;:::-;:31;;;13796:85;;;;;;;;;;;;:::i;:::-;;;;;;;;;13931:1;13917:16;;:2;:16;;;;13909:65;;;;;;;;;;;;:::i;:::-;;;;;;;;;13985:39;14006:4;14012:2;14016:7;13985:20;:39::i;:::-;14086:29;14103:1;14107:7;14086:8;:29::i;:::-;14126:35;14153:7;14126:13;:19;14140:4;14126:19;;;;;;;;;;;;;;;:26;;:35;;;;:::i;:::-;;14171:30;14193:7;14171:13;:17;14185:2;14171:17;;;;;;;;;;;;;;;:21;;:30;;;;:::i;:::-;;14212:29;14229:7;14238:2;14212:12;:16;;:29;;;;;:::i;:::-;;14276:7;14272:2;14257:27;;14266:4;14257:27;;;;;;;;;;;;13707:584;;;:::o;9250:135:13:-;9321:7;9355:22;9359:3;:10;;9371:5;9355:3;:22::i;:::-;9347:31;;9340:38;;9250:135;;;;:::o;8269:233:12:-;8349:7;8358;8378:11;8391:13;8408:22;8412:3;:10;;8424:5;8408:3;:22::i;:::-;8377:53;;;;8456:3;8448:12;;8486:5;8478:14;;8440:55;;;;;;8269:233;;;;;:::o;9522:211::-;9629:7;9679:44;9684:3;:10;;9704:3;9696:12;;9710;9679:4;:44::i;:::-;9671:53;;9648:78;;9522:211;;;;;:::o;8806:112:13:-;8866:7;8892:19;8900:3;:10;;8892:7;:19::i;:::-;8885:26;;8806:112;;;:::o;9811:269:5:-;9924:28;9934:4;9940:2;9944:7;9924:9;:28::i;:::-;9970:48;9993:4;9999:2;10003:7;10012:5;9970:22;:48::i;:::-;9962:111;;;;;;;;;;;;:::i;:::-;;;;;;;;;9811:269;;;;:::o;210:725:14:-;266:13;492:1;483:5;:10;479:51;;;509:10;;;;;;;;;;;;;;;;;;;;;479:51;539:12;554:5;539:20;;569:14;593:75;608:1;600:4;:9;593:75;;625:8;;;;;;;655:2;647:10;;;;;;;;;593:75;;;677:19;709:6;699:17;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;677:39;;726:13;751:1;742:6;:10;726:26;;769:5;762:12;;784:114;799:1;791:4;:9;784:114;;859:2;852:4;:9;;;;;;847:2;:14;834:29;;816:6;823:7;;;;;;;816:15;;;;;;;;;;;:47;;;;;;;;;;;885:2;877:10;;;;;;;;;784:114;;;921:6;907:21;;;;;;210:725;;;;:::o;11348:108:5:-;11423:26;11433:2;11437:7;11423:26;;;;;;;;;;;;:9;:26::i;:::-;11348:108;;:::o;7588:149:12:-;7672:4;7695:35;7705:3;:10;;7725:3;7717:12;;7695:9;:35::i;:::-;7688:42;;7588:149;;;;:::o;4491:108::-;4547:7;4573:3;:12;;:19;;;;4566:26;;4491:108;;;:::o;17010:93:5:-;;;;:::o;8365:135:13:-;8435:4;8458:35;8466:3;:10;;8486:5;8478:14;;8458:7;:35::i;:::-;8451:42;;8365:135;;;;:::o;8068:129::-;8135:4;8158:32;8163:3;:10;;8183:5;8175:14;;8158:4;:32::i;:::-;8151:39;;8068:129;;;;:::o;7027:183:12:-;7116:4;7139:64;7144:3;:10;;7164:3;7156:12;;7194:5;7178:23;;7170:32;;7139:4;:64::i;:::-;7132:71;;7027:183;;;;;:::o;4452:201:13:-;4519:7;4567:5;4546:3;:11;;:18;;;;:26;4538:73;;;;;;;;;;;;:::i;:::-;;;;;;;;;4628:3;:11;;4640:5;4628:18;;;;;;;;;;;;;;;;4621:25;;4452:201;;;;:::o;4942:274:12:-;5009:7;5018;5067:5;5045:3;:12;;:19;;;;:27;5037:74;;;;;;;;;;;;:::i;:::-;;;;;;;;;5122:22;5147:3;:12;;5160:5;5147:19;;;;;;;;;;;;;;;;;;5122:44;;5184:5;:10;;;5196:5;:12;;;5176:33;;;;;4942:274;;;;;:::o;6403:315::-;6497:7;6516:16;6535:3;:12;;:17;6548:3;6535:17;;;;;;;;;;;;6516:36;;6582:1;6570:8;:13;;6585:12;6562:36;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;6651:3;:12;;6675:1;6664:8;:12;6651:26;;;;;;;;;;;;;;;;;;:33;;;6644:40;;;6403:315;;;;;:::o;4013:107:13:-;4069:7;4095:3;:11;;:18;;;;4088:25;;4013:107;;;:::o;15524:589:5:-;15644:4;15669:15;:2;:13;;;:15::i;:::-;15664:58;;15707:4;15700:11;;;;15664:58;15731:23;15757:246;15809:45;;;15868:12;:10;:12::i;:::-;15894:4;15912:7;15933:5;15773:175;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;15757:246;;;;;;;;;;;;;;;;;:2;:15;;;;:246;;;;;:::i;:::-;15731:272;;16013:13;16040:10;16029:32;;;;;;;;;;;;:::i;:::-;16013:48;;1078:10;16089:16;;16079:26;;;:6;:26;;;;16071:35;;;;15524:589;;;;;;;:::o;11677:247::-;11772:18;11778:2;11782:7;11772:5;:18::i;:::-;11808:54;11839:1;11843:2;11847:7;11856:5;11808:22;:54::i;:::-;11800:117;;;;;;;;;;;;:::i;:::-;;;;;;;;;11677:247;;;:::o;4278:123:12:-;4349:4;4393:1;4372:3;:12;;:17;4385:3;4372:17;;;;;;;;;;;;:22;;4365:29;;4278:123;;;;:::o;2212:1512:13:-;2278:4;2394:18;2415:3;:12;;:19;2428:5;2415:19;;;;;;;;;;;;2394:40;;2463:1;2449:10;:15;2445:1273;;2806:21;2843:1;2830:10;:14;2806:38;;2858:17;2899:1;2878:3;:11;;:18;;;;:22;2858:42;;3140:17;3160:3;:11;;3172:9;3160:22;;;;;;;;;;;;;;;;3140:42;;3303:9;3274:3;:11;;3286:13;3274:26;;;;;;;;;;;;;;;:38;;;;3420:1;3404:13;:17;3378:3;:12;;:23;3391:9;3378:23;;;;;;;;;;;:43;;;;3527:3;:11;;:17;;;;;;;;;;;;;;;;;;;;;;;;3619:3;:12;;:19;3632:5;3619:19;;;;;;;;;;;3612:26;;;3660:4;3653:11;;;;;;;;2445:1273;3702:5;3695:12;;;2212:1512;;;;;:::o;1640:404::-;1703:4;1724:21;1734:3;1739:5;1724:9;:21::i;:::-;1719:319;;1761:3;:11;;1778:5;1761:23;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1941:3;:11;;:18;;;;1919:3;:12;;:19;1932:5;1919:19;;;;;;;;;;;:40;;;;1980:4;1973:11;;;;1719:319;2022:5;2015:12;;1640:404;;;;;:::o;1836:678:12:-;1912:4;2026:16;2045:3;:12;;:17;2058:3;2045:17;;;;;;;;;;;;2026:36;;2089:1;2077:8;:13;2073:435;;;2143:3;:12;;2161:38;;;;;;;;2178:3;2161:38;;;;2191:5;2161:38;;;2143:57;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2355:3;:12;;:19;;;;2335:3;:12;;:17;2348:3;2335:17;;;;;;;;;;;:39;;;;2395:4;2388:11;;;;;2073:435;2466:5;2430:3;:12;;2454:1;2443:8;:12;2430:26;;;;;;;;;;;;;;;;;;:33;;:41;;;;2492:5;2485:12;;;1836:678;;;;;;:::o;726:413:10:-;786:4;989:12;1098:7;1086:20;1078:28;;1131:1;1124:4;:8;1117:15;;;726:413;;;:::o;3581:193::-;3684:12;3715:52;3737:6;3745:4;3751:1;3754:12;3715:21;:52::i;:::-;3708:59;;3581:193;;;;;:::o;12246:393:5:-;12339:1;12325:16;;:2;:16;;;;12317:61;;;;;;;;;;;;:::i;:::-;;;;;;;;;12397:16;12405:7;12397;:16::i;:::-;12396:17;12388:58;;;;;;;;;;;;:::i;:::-;;;;;;;;;12457:45;12486:1;12490:2;12494:7;12457:20;:45::i;:::-;12513:30;12535:7;12513:13;:17;12527:2;12513:17;;;;;;;;;;;;;;;:21;;:30;;;;:::i;:::-;;12554:29;12571:7;12580:2;12554:12;:16;;:29;;;;;:::i;:::-;;12624:7;12620:2;12599:33;;12616:1;12599:33;;;;;;;;;;;;12246:393;;:::o;3805:127:13:-;3878:4;3924:1;3901:3;:12;;:19;3914:5;3901:19;;;;;;;;;;;;:24;;3894:31;;3805:127;;;;:::o;4608:523:10:-;4735:12;4792:5;4767:21;:30;;4759:81;;;;;;;;;;;;:::i;:::-;;;;;;;;;4858:18;4869:6;4858:10;:18::i;:::-;4850:60;;;;;;;;;;;;:::i;:::-;;;;;;;;;4981:12;4995:23;5022:6;:11;;5042:5;5050:4;5022:33;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;4980:75;;;;5072:52;5090:7;5099:10;5111:12;5072:17;:52::i;:::-;5065:59;;;;4608:523;;;;;;:::o;7091:725::-;7206:12;7234:7;7230:580;;;7264:10;7257:17;;;;7230:580;7395:1;7375:10;:17;:21;7371:429;;;7633:10;7627:17;7693:15;7680:10;7676:2;7672:19;7665:44;7582:145;7772:12;7765:20;;;;;;;;;;;:::i;:::-;;;;;;;;7091:725;;;;;;:::o;-1:-1:-1:-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;5:130::-;;85:6;72:20;63:29;;97:33;124:5;97:33;:::i;:::-;57:78;;;;:::o;173:767::-;;310:3;303:4;295:6;291:17;287:27;277:2;;328:1;325;318:12;277:2;365:6;352:20;387:100;402:84;479:6;402:84;:::i;:::-;387:100;:::i;:::-;378:109;;504:5;529:6;522:5;515:21;559:4;551:6;547:17;537:27;;581:4;576:3;572:14;565:21;;634:6;681:3;673:4;665:6;661:17;656:3;652:27;649:36;646:2;;;698:1;695;688:12;646:2;723:1;708:226;733:6;730:1;727:13;708:226;;;791:3;813:57;866:3;854:10;813:57;:::i;:::-;808:3;801:70;894:4;889:3;885:14;878:21;;922:4;917:3;913:14;906:21;;765:169;755:1;752;748:9;743:14;;708:226;;;712:14;270:670;;;;;;;:::o;948:124::-;;1025:6;1012:20;1003:29;;1037:30;1061:5;1037:30;:::i;:::-;997:75;;;;:::o;1079:128::-;;1158:6;1145:20;1136:29;;1170:32;1196:5;1170:32;:::i;:::-;1130:77;;;;:::o;1214:132::-;;1297:6;1291:13;1282:22;;1309:32;1335:5;1309:32;:::i;:::-;1276:70;;;;:::o;1354:440::-;;1455:3;1448:4;1440:6;1436:17;1432:27;1422:2;;1473:1;1470;1463:12;1422:2;1510:6;1497:20;1532:64;1547:48;1588:6;1547:48;:::i;:::-;1532:64;:::i;:::-;1523:73;;1616:6;1609:5;1602:21;1652:4;1644:6;1640:17;1685:4;1678:5;1674:16;1720:3;1711:6;1706:3;1702:16;1699:25;1696:2;;;1737:1;1734;1727:12;1696:2;1747:41;1781:6;1776:3;1771;1747:41;:::i;:::-;1415:379;;;;;;;:::o;1829:766::-;;1938:4;1926:9;1921:3;1917:19;1913:30;1910:2;;;1956:1;1953;1946:12;1910:2;1974:20;1989:4;1974:20;:::i;:::-;1965:29;;2047:1;2079:49;2124:3;2115:6;2104:9;2100:22;2079:49;:::i;:::-;2072:4;2065:5;2061:16;2054:75;2004:136;2193:2;2226:49;2271:3;2262:6;2251:9;2247:22;2226:49;:::i;:::-;2219:4;2212:5;2208:16;2201:75;2150:137;2344:2;2377:49;2422:3;2413:6;2402:9;2398:22;2377:49;:::i;:::-;2370:4;2363:5;2359:16;2352:75;2297:141;2494:2;2527:46;2569:3;2560:6;2549:9;2545:22;2527:46;:::i;:::-;2520:4;2513:5;2509:16;2502:72;2448:137;1904:691;;;;:::o;2602:130::-;;2682:6;2669:20;2660:29;;2694:33;2721:5;2694:33;:::i;:::-;2654:78;;;;:::o;2739:241::-;;2843:2;2831:9;2822:7;2818:23;2814:32;2811:2;;;2859:1;2856;2849:12;2811:2;2894:1;2911:53;2956:7;2947:6;2936:9;2932:22;2911:53;:::i;:::-;2901:63;;2873:97;2805:175;;;;:::o;2987:366::-;;;3108:2;3096:9;3087:7;3083:23;3079:32;3076:2;;;3124:1;3121;3114:12;3076:2;3159:1;3176:53;3221:7;3212:6;3201:9;3197:22;3176:53;:::i;:::-;3166:63;;3138:97;3266:2;3284:53;3329:7;3320:6;3309:9;3305:22;3284:53;:::i;:::-;3274:63;;3245:98;3070:283;;;;;:::o;3360:491::-;;;;3498:2;3486:9;3477:7;3473:23;3469:32;3466:2;;;3514:1;3511;3504:12;3466:2;3549:1;3566:53;3611:7;3602:6;3591:9;3587:22;3566:53;:::i;:::-;3556:63;;3528:97;3656:2;3674:53;3719:7;3710:6;3699:9;3695:22;3674:53;:::i;:::-;3664:63;;3635:98;3764:2;3782:53;3827:7;3818:6;3807:9;3803:22;3782:53;:::i;:::-;3772:63;;3743:98;3460:391;;;;;:::o;3858:721::-;;;;;4022:3;4010:9;4001:7;3997:23;3993:33;3990:2;;;4039:1;4036;4029:12;3990:2;4074:1;4091:53;4136:7;4127:6;4116:9;4112:22;4091:53;:::i;:::-;4081:63;;4053:97;4181:2;4199:53;4244:7;4235:6;4224:9;4220:22;4199:53;:::i;:::-;4189:63;;4160:98;4289:2;4307:53;4352:7;4343:6;4332:9;4328:22;4307:53;:::i;:::-;4297:63;;4268:98;4425:2;4414:9;4410:18;4397:32;4449:18;4441:6;4438:30;4435:2;;;4481:1;4478;4471:12;4435:2;4501:62;4555:7;4546:6;4535:9;4531:22;4501:62;:::i;:::-;4491:72;;4376:193;3984:595;;;;;;;:::o;4586:360::-;;;4704:2;4692:9;4683:7;4679:23;4675:32;4672:2;;;4720:1;4717;4710:12;4672:2;4755:1;4772:53;4817:7;4808:6;4797:9;4793:22;4772:53;:::i;:::-;4762:63;;4734:97;4862:2;4880:50;4922:7;4913:6;4902:9;4898:22;4880:50;:::i;:::-;4870:60;;4841:95;4666:280;;;;;:::o;4953:366::-;;;5074:2;5062:9;5053:7;5049:23;5045:32;5042:2;;;5090:1;5087;5080:12;5042:2;5125:1;5142:53;5187:7;5178:6;5167:9;5163:22;5142:53;:::i;:::-;5132:63;;5104:97;5232:2;5250:53;5295:7;5286:6;5275:9;5271:22;5250:53;:::i;:::-;5240:63;;5211:98;5036:283;;;;;:::o;5326:417::-;;5475:2;5463:9;5454:7;5450:23;5446:32;5443:2;;;5491:1;5488;5481:12;5443:2;5554:1;5543:9;5539:17;5526:31;5577:18;5569:6;5566:30;5563:2;;;5609:1;5606;5599:12;5563:2;5629:98;5719:7;5710:6;5699:9;5695:22;5629:98;:::i;:::-;5619:108;;5505:228;5437:306;;;;:::o;5750:239::-;;5853:2;5841:9;5832:7;5828:23;5824:32;5821:2;;;5869:1;5866;5859:12;5821:2;5904:1;5921:52;5965:7;5956:6;5945:9;5941:22;5921:52;:::i;:::-;5911:62;;5883:96;5815:174;;;;:::o;5996:261::-;;6110:2;6098:9;6089:7;6085:23;6081:32;6078:2;;;6126:1;6123;6116:12;6078:2;6161:1;6178:63;6233:7;6224:6;6213:9;6209:22;6178:63;:::i;:::-;6168:73;;6140:107;6072:185;;;;:::o;6264:241::-;;6368:2;6356:9;6347:7;6343:23;6339:32;6336:2;;;6384:1;6381;6374:12;6336:2;6419:1;6436:53;6481:7;6472:6;6461:9;6457:22;6436:53;:::i;:::-;6426:63;;6398:97;6330:175;;;;:::o;6513:173::-;;6600:46;6642:3;6634:6;6600:46;:::i;:::-;6675:4;6670:3;6666:14;6652:28;;6593:93;;;;:::o;6694:142::-;6785:45;6824:5;6785:45;:::i;:::-;6780:3;6773:58;6767:69;;:::o;6843:137::-;6942:32;6968:5;6942:32;:::i;:::-;6937:3;6930:45;6924:56;;:::o;6987:113::-;7070:24;7088:5;7070:24;:::i;:::-;7065:3;7058:37;7052:48;;:::o;7138:690::-;;7283:54;7331:5;7283:54;:::i;:::-;7350:86;7429:6;7424:3;7350:86;:::i;:::-;7343:93;;7457:56;7507:5;7457:56;:::i;:::-;7533:7;7561:1;7546:260;7571:6;7568:1;7565:13;7546:260;;;7638:6;7632:13;7659:63;7718:3;7703:13;7659:63;:::i;:::-;7652:70;;7739:60;7792:6;7739:60;:::i;:::-;7729:70;;7603:203;7593:1;7590;7586:9;7581:14;;7546:260;;;7550:14;7819:3;7812:10;;7262:566;;;;;;;:::o;7836:94::-;7903:21;7918:5;7903:21;:::i;:::-;7898:3;7891:34;7885:45;;:::o;7937:104::-;8014:21;8029:5;8014:21;:::i;:::-;8009:3;8002:34;7996:45;;:::o;8048:343::-;;8158:38;8190:5;8158:38;:::i;:::-;8208:70;8271:6;8266:3;8208:70;:::i;:::-;8201:77;;8283:52;8328:6;8323:3;8316:4;8309:5;8305:16;8283:52;:::i;:::-;8356:29;8378:6;8356:29;:::i;:::-;8351:3;8347:39;8340:46;;8138:253;;;;;:::o;8398:356::-;;8526:38;8558:5;8526:38;:::i;:::-;8576:88;8657:6;8652:3;8576:88;:::i;:::-;8569:95;;8669:52;8714:6;8709:3;8702:4;8695:5;8691:16;8669:52;:::i;:::-;8742:6;8737:3;8733:16;8726:23;;8506:248;;;;;:::o;8761:347::-;;8873:39;8906:5;8873:39;:::i;:::-;8924:71;8988:6;8983:3;8924:71;:::i;:::-;8917:78;;9000:52;9045:6;9040:3;9033:4;9026:5;9022:16;9000:52;:::i;:::-;9073:29;9095:6;9073:29;:::i;:::-;9068:3;9064:39;9057:46;;8853:255;;;;;:::o;9115:360::-;;9245:39;9278:5;9245:39;:::i;:::-;9296:89;9378:6;9373:3;9296:89;:::i;:::-;9289:96;;9390:52;9435:6;9430:3;9423:4;9416:5;9412:16;9390:52;:::i;:::-;9463:6;9458:3;9454:16;9447:23;;9225:250;;;;;:::o;9483:371::-;;9643:67;9707:2;9702:3;9643:67;:::i;:::-;9636:74;;9743:34;9739:1;9734:3;9730:11;9723:55;9812:4;9807:2;9802:3;9798:12;9791:26;9845:2;9840:3;9836:12;9829:19;;9629:225;;;:::o;9863:387::-;;10023:67;10087:2;10082:3;10023:67;:::i;:::-;10016:74;;10123:34;10119:1;10114:3;10110:11;10103:55;10192:20;10187:2;10182:3;10178:12;10171:42;10241:2;10236:3;10232:12;10225:19;;10009:241;;;:::o;10259:375::-;;10419:67;10483:2;10478:3;10419:67;:::i;:::-;10412:74;;10519:34;10515:1;10510:3;10506:11;10499:55;10588:8;10583:2;10578:3;10574:12;10567:30;10625:2;10620:3;10616:12;10609:19;;10405:229;;;:::o;10643:328::-;;10803:67;10867:2;10862:3;10803:67;:::i;:::-;10796:74;;10903:30;10899:1;10894:3;10890:11;10883:51;10962:2;10957:3;10953:12;10946:19;;10789:182;;;:::o;10980:373::-;;11140:67;11204:2;11199:3;11140:67;:::i;:::-;11133:74;;11240:34;11236:1;11231:3;11227:11;11220:55;11309:6;11304:2;11299:3;11295:12;11288:28;11344:2;11339:3;11335:12;11328:19;;11126:227;;;:::o;11362:325::-;;11522:67;11586:2;11581:3;11522:67;:::i;:::-;11515:74;;11622:27;11618:1;11613:3;11609:11;11602:48;11678:2;11673:3;11669:12;11662:19;;11508:179;;;:::o;11696:375::-;;11856:67;11920:2;11915:3;11856:67;:::i;:::-;11849:74;;11956:34;11952:1;11947:3;11943:11;11936:55;12025:8;12020:2;12015:3;12011:12;12004:30;12062:2;12057:3;12053:12;12046:19;;11842:229;;;:::o;12080:381::-;;12240:67;12304:2;12299:3;12240:67;:::i;:::-;12233:74;;12340:34;12336:1;12331:3;12327:11;12320:55;12409:14;12404:2;12399:3;12395:12;12388:36;12452:2;12447:3;12443:12;12436:19;;12226:235;;;:::o;12470:393::-;;12630:67;12694:2;12689:3;12630:67;:::i;:::-;12623:74;;12730:34;12726:1;12721:3;12717:11;12710:55;12799:26;12794:2;12789:3;12785:12;12778:48;12854:2;12849:3;12845:12;12838:19;;12616:247;;;:::o;12872:379::-;;13032:67;13096:2;13091:3;13032:67;:::i;:::-;13025:74;;13132:34;13128:1;13123:3;13119:11;13112:55;13201:12;13196:2;13191:3;13187:12;13180:34;13242:2;13237:3;13233:12;13226:19;;13018:233;;;:::o;13260:371::-;;13420:67;13484:2;13479:3;13420:67;:::i;:::-;13413:74;;13520:34;13516:1;13511:3;13507:11;13500:55;13589:4;13584:2;13579:3;13575:12;13568:26;13622:2;13617:3;13613:12;13606:19;;13406:225;;;:::o;13640:332::-;;13800:67;13864:2;13859:3;13800:67;:::i;:::-;13793:74;;13900:34;13896:1;13891:3;13887:11;13880:55;13963:2;13958:3;13954:12;13947:19;;13786:186;;;:::o;13981:381::-;;14141:67;14205:2;14200:3;14141:67;:::i;:::-;14134:74;;14241:34;14237:1;14232:3;14228:11;14221:55;14310:14;14305:2;14300:3;14296:12;14289:36;14353:2;14348:3;14344:12;14337:19;;14127:235;;;:::o;14371:332::-;;14531:67;14595:2;14590:3;14531:67;:::i;:::-;14524:74;;14631:34;14627:1;14622:3;14618:11;14611:55;14694:2;14689:3;14685:12;14678:19;;14517:186;;;:::o;14712:378::-;;14872:67;14936:2;14931:3;14872:67;:::i;:::-;14865:74;;14972:34;14968:1;14963:3;14959:11;14952:55;15041:11;15036:2;15031:3;15027:12;15020:33;15081:2;15076:3;15072:12;15065:19;;14858:232;;;:::o;15099:384::-;;15259:67;15323:2;15318:3;15259:67;:::i;:::-;15252:74;;15359:34;15355:1;15350:3;15346:11;15339:55;15428:17;15423:2;15418:3;15414:12;15407:39;15474:2;15469:3;15465:12;15458:19;;15245:238;;;:::o;15492:370::-;;15652:67;15716:2;15711:3;15652:67;:::i;:::-;15645:74;;15752:34;15748:1;15743:3;15739:11;15732:55;15821:3;15816:2;15811:3;15807:12;15800:25;15853:2;15848:3;15844:12;15837:19;;15638:224;;;:::o;15871:386::-;;16031:67;16095:2;16090:3;16031:67;:::i;:::-;16024:74;;16131:34;16127:1;16122:3;16118:11;16111:55;16200:19;16195:2;16190:3;16186:12;16179:41;16248:2;16243:3;16239:12;16232:19;;16017:240;;;:::o;16266:329::-;;16426:67;16490:2;16485:3;16426:67;:::i;:::-;16419:74;;16526:31;16522:1;16517:3;16513:11;16506:52;16586:2;16581:3;16577:12;16570:19;;16412:183;;;:::o;16654:787::-;16787:4;16782:3;16778:14;16873:4;16866:5;16862:16;16856:23;16885:63;16942:4;16937:3;16933:14;16919:12;16885:63;:::i;:::-;16807:147;17030:4;17023:5;17019:16;17013:23;17042:63;17099:4;17094:3;17090:14;17076:12;17042:63;:::i;:::-;16964:147;17191:4;17184:5;17180:16;17174:23;17203:63;17260:4;17255:3;17251:14;17237:12;17203:63;:::i;:::-;17121:151;17351:4;17344:5;17340:16;17334:23;17363:57;17414:4;17409:3;17405:14;17391:12;17363:57;:::i;:::-;17282:144;16760:681;;;:::o;17448:103::-;17521:24;17539:5;17521:24;:::i;:::-;17516:3;17509:37;17503:48;;:::o;17558:113::-;17641:24;17659:5;17641:24;:::i;:::-;17636:3;17629:37;17623:48;;:::o;17678:271::-;;17831:93;17920:3;17911:6;17831:93;:::i;:::-;17824:100;;17941:3;17934:10;;17812:137;;;;:::o;17956:436::-;;18159:95;18250:3;18241:6;18159:95;:::i;:::-;18152:102;;18272:95;18363:3;18354:6;18272:95;:::i;:::-;18265:102;;18384:3;18377:10;;18140:252;;;;;:::o;18399:222::-;;18526:2;18515:9;18511:18;18503:26;;18540:71;18608:1;18597:9;18593:17;18584:6;18540:71;:::i;:::-;18497:124;;;;:::o;18628:238::-;;18763:2;18752:9;18748:18;18740:26;;18777:79;18853:1;18842:9;18838:17;18829:6;18777:79;:::i;:::-;18734:132;;;;:::o;18873:672::-;;19118:3;19107:9;19103:19;19095:27;;19133:87;19217:1;19206:9;19202:17;19193:6;19133:87;:::i;:::-;19231:72;19299:2;19288:9;19284:18;19275:6;19231:72;:::i;:::-;19314;19382:2;19371:9;19367:18;19358:6;19314:72;:::i;:::-;19434:9;19428:4;19424:20;19419:2;19408:9;19404:18;19397:48;19459:76;19530:4;19521:6;19459:76;:::i;:::-;19451:84;;19089:456;;;;;;;:::o;19552:370::-;;19729:2;19718:9;19714:18;19706:26;;19779:9;19773:4;19769:20;19765:1;19754:9;19750:17;19743:47;19804:108;19907:4;19898:6;19804:108;:::i;:::-;19796:116;;19700:222;;;;:::o;19929:210::-;;20050:2;20039:9;20035:18;20027:26;;20064:65;20126:1;20115:9;20111:17;20102:6;20064:65;:::i;:::-;20021:118;;;;:::o;20146:310::-;;20293:2;20282:9;20278:18;20270:26;;20343:9;20337:4;20333:20;20329:1;20318:9;20314:17;20307:47;20368:78;20441:4;20432:6;20368:78;:::i;:::-;20360:86;;20264:192;;;;:::o;20463:416::-;;20663:2;20652:9;20648:18;20640:26;;20713:9;20707:4;20703:20;20699:1;20688:9;20684:17;20677:47;20738:131;20864:4;20738:131;:::i;:::-;20730:139;;20634:245;;;:::o;20886:416::-;;21086:2;21075:9;21071:18;21063:26;;21136:9;21130:4;21126:20;21122:1;21111:9;21107:17;21100:47;21161:131;21287:4;21161:131;:::i;:::-;21153:139;;21057:245;;;:::o;21309:416::-;;21509:2;21498:9;21494:18;21486:26;;21559:9;21553:4;21549:20;21545:1;21534:9;21530:17;21523:47;21584:131;21710:4;21584:131;:::i;:::-;21576:139;;21480:245;;;:::o;21732:416::-;;21932:2;21921:9;21917:18;21909:26;;21982:9;21976:4;21972:20;21968:1;21957:9;21953:17;21946:47;22007:131;22133:4;22007:131;:::i;:::-;21999:139;;21903:245;;;:::o;22155:416::-;;22355:2;22344:9;22340:18;22332:26;;22405:9;22399:4;22395:20;22391:1;22380:9;22376:17;22369:47;22430:131;22556:4;22430:131;:::i;:::-;22422:139;;22326:245;;;:::o;22578:416::-;;22778:2;22767:9;22763:18;22755:26;;22828:9;22822:4;22818:20;22814:1;22803:9;22799:17;22792:47;22853:131;22979:4;22853:131;:::i;:::-;22845:139;;22749:245;;;:::o;23001:416::-;;23201:2;23190:9;23186:18;23178:26;;23251:9;23245:4;23241:20;23237:1;23226:9;23222:17;23215:47;23276:131;23402:4;23276:131;:::i;:::-;23268:139;;23172:245;;;:::o;23424:416::-;;23624:2;23613:9;23609:18;23601:26;;23674:9;23668:4;23664:20;23660:1;23649:9;23645:17;23638:47;23699:131;23825:4;23699:131;:::i;:::-;23691:139;;23595:245;;;:::o;23847:416::-;;24047:2;24036:9;24032:18;24024:26;;24097:9;24091:4;24087:20;24083:1;24072:9;24068:17;24061:47;24122:131;24248:4;24122:131;:::i;:::-;24114:139;;24018:245;;;:::o;24270:416::-;;24470:2;24459:9;24455:18;24447:26;;24520:9;24514:4;24510:20;24506:1;24495:9;24491:17;24484:47;24545:131;24671:4;24545:131;:::i;:::-;24537:139;;24441:245;;;:::o;24693:416::-;;24893:2;24882:9;24878:18;24870:26;;24943:9;24937:4;24933:20;24929:1;24918:9;24914:17;24907:47;24968:131;25094:4;24968:131;:::i;:::-;24960:139;;24864:245;;;:::o;25116:416::-;;25316:2;25305:9;25301:18;25293:26;;25366:9;25360:4;25356:20;25352:1;25341:9;25337:17;25330:47;25391:131;25517:4;25391:131;:::i;:::-;25383:139;;25287:245;;;:::o;25539:416::-;;25739:2;25728:9;25724:18;25716:26;;25789:9;25783:4;25779:20;25775:1;25764:9;25760:17;25753:47;25814:131;25940:4;25814:131;:::i;:::-;25806:139;;25710:245;;;:::o;25962:416::-;;26162:2;26151:9;26147:18;26139:26;;26212:9;26206:4;26202:20;26198:1;26187:9;26183:17;26176:47;26237:131;26363:4;26237:131;:::i;:::-;26229:139;;26133:245;;;:::o;26385:416::-;;26585:2;26574:9;26570:18;26562:26;;26635:9;26629:4;26625:20;26621:1;26610:9;26606:17;26599:47;26660:131;26786:4;26660:131;:::i;:::-;26652:139;;26556:245;;;:::o;26808:416::-;;27008:2;26997:9;26993:18;26985:26;;27058:9;27052:4;27048:20;27044:1;27033:9;27029:17;27022:47;27083:131;27209:4;27083:131;:::i;:::-;27075:139;;26979:245;;;:::o;27231:416::-;;27431:2;27420:9;27416:18;27408:26;;27481:9;27475:4;27471:20;27467:1;27456:9;27452:17;27445:47;27506:131;27632:4;27506:131;:::i;:::-;27498:139;;27402:245;;;:::o;27654:416::-;;27854:2;27843:9;27839:18;27831:26;;27904:9;27898:4;27894:20;27890:1;27879:9;27875:17;27868:47;27929:131;28055:4;27929:131;:::i;:::-;27921:139;;27825:245;;;:::o;28077:416::-;;28277:2;28266:9;28262:18;28254:26;;28327:9;28321:4;28317:20;28313:1;28302:9;28298:17;28291:47;28352:131;28478:4;28352:131;:::i;:::-;28344:139;;28248:245;;;:::o;28500:303::-;;28667:3;28656:9;28652:19;28644:27;;28682:111;28790:1;28779:9;28775:17;28766:6;28682:111;:::i;:::-;28638:165;;;;:::o;28810:222::-;;28937:2;28926:9;28922:18;28914:26;;28951:71;29019:1;29008:9;29004:17;28995:6;28951:71;:::i;:::-;28908:124;;;;:::o;29039:256::-;;29101:2;29095:9;29085:19;;29139:4;29131:6;29127:17;29238:6;29226:10;29223:22;29202:18;29190:10;29187:34;29184:62;29181:2;;;29259:1;29256;29249:12;29181:2;29279:10;29275:2;29268:22;29079:216;;;;:::o;29302:324::-;;29481:18;29473:6;29470:30;29467:2;;;29513:1;29510;29503:12;29467:2;29548:4;29540:6;29536:17;29528:25;;29611:4;29605;29601:15;29593:23;;29404:222;;;:::o;29633:321::-;;29776:18;29768:6;29765:30;29762:2;;;29808:1;29805;29798:12;29762:2;29875:4;29871:9;29864:4;29856:6;29852:17;29848:33;29840:41;;29939:4;29933;29929:15;29921:23;;29699:255;;;:::o;29961:151::-;;30047:3;30039:11;;30085:4;30080:3;30076:14;30068:22;;30033:79;;;:::o;30119:137::-;;30228:5;30222:12;30212:22;;30193:63;;;:::o;30263:121::-;;30356:5;30350:12;30340:22;;30321:63;;;:::o;30391:122::-;;30485:5;30479:12;30469:22;;30450:63;;;:::o;30520:108::-;;30618:4;30613:3;30609:14;30601:22;;30595:33;;;:::o;30636:178::-;;30766:6;30761:3;30754:19;30803:4;30798:3;30794:14;30779:29;;30747:67;;;;:::o;30823:162::-;;30937:6;30932:3;30925:19;30974:4;30969:3;30965:14;30950:29;;30918:67;;;;:::o;30994:144::-;;31129:3;31114:18;;31107:31;;;;:::o;31147:163::-;;31262:6;31257:3;31250:19;31299:4;31294:3;31290:14;31275:29;;31243:67;;;;:::o;31319:145::-;;31455:3;31440:18;;31433:31;;;;:::o;31472:91::-;;31534:24;31552:5;31534:24;:::i;:::-;31523:35;;31517:46;;;:::o;31570:99::-;;31640:24;31658:5;31640:24;:::i;:::-;31629:35;;31623:46;;;:::o;31676:85::-;;31749:5;31742:13;31735:21;31724:32;;31718:43;;;:::o;31768:144::-;;31840:66;31833:5;31829:78;31818:89;;31812:100;;;:::o;31919:121::-;;31992:42;31985:5;31981:54;31970:65;;31964:76;;;:::o;32047:72::-;;32109:5;32098:16;;32092:27;;;:::o;32126:129::-;;32213:37;32244:5;32213:37;:::i;:::-;32200:50;;32194:61;;;:::o;32262:121::-;;32341:37;32372:5;32341:37;:::i;:::-;32328:50;;32322:61;;;:::o;32390:108::-;;32469:24;32487:5;32469:24;:::i;:::-;32456:37;;32450:48;;;:::o;32506:145::-;32587:6;32582:3;32577;32564:30;32643:1;32634:6;32629:3;32625:16;32618:27;32557:94;;;:::o;32660:268::-;32725:1;32732:101;32746:6;32743:1;32740:13;32732:101;;;32822:1;32817:3;32813:11;32807:18;32803:1;32798:3;32794:11;32787:39;32768:2;32765:1;32761:10;32756:15;;32732:101;;;32848:6;32845:1;32842:13;32839:2;;;32913:1;32904:6;32899:3;32895:16;32888:27;32839:2;32709:219;;;;:::o;32936:97::-;;33024:2;33020:7;33015:2;33008:5;33004:14;33000:28;32990:38;;32984:49;;;:::o;33041:117::-;33110:24;33128:5;33110:24;:::i;:::-;33103:5;33100:35;33090:2;;33149:1;33146;33139:12;33090:2;33084:74;:::o;33165:111::-;33231:21;33246:5;33231:21;:::i;:::-;33224:5;33221:32;33211:2;;33267:1;33264;33257:12;33211:2;33205:71;:::o;33283:115::-;33351:23;33368:5;33351:23;:::i;:::-;33344:5;33341:34;33331:2;;33389:1;33386;33379:12;33331:2;33325:73;:::o;33405:117::-;33474:24;33492:5;33474:24;:::i;:::-;33467:5;33464:35;33454:2;;33513:1;33510;33503:12;33454:2;33448:74;:::o",
  "source": "pragma solidity >=0.4.22 <0.8.0;\r\npragma experimental ABIEncoderV2;\r\n\r\nimport \"@openzeppelin/contracts/token/ERC721/ERC721.sol\";\r\nimport \"@openzeppelin/contracts/access/Ownable.sol\";\r\n\r\ncontract CardGame is ERC721, Ownable {\r\n\tconstructor() ERC721(\"CasinoNFT\", \"MOO\") public {\r\n\t}\r\n\r\n\tstruct Card {\r\n\t\tuint deckIdx;\r\n\t\tuint cardIdx;\r\n\t\tuint suitTypeIdx;\r\n\t\tbool isHandCard;\r\n\t}\r\n\r\n\tuint public nftId = 0;\r\n\tmapping(uint256 => Card) private _cardStack;\r\n\tmapping(address => uint[]) private _inHandTokens;\r\n\tevent HandMinted(address player);\r\n\r\n\tfunction getTokenDetails(uint256 tokenId) public view returns (Card memory) {\r\n\t\treturn _cardStack[tokenId];\r\n\t}\r\n\r\n\tfunction getOwnerOf(uint256 tokenId) public view returns (address){\r\n\t\treturn ownerOf(tokenId);\r\n\t}\r\n\r\n\tfunction getInHandTokens(address myAddr) public view returns(uint [] memory) {\r\n\t\treturn _inHandTokens[myAddr];\r\n\t}\r\n\r\n\tfunction mintNewHand(Card[] memory card_hand) public {\r\n\t\tfor (uint i = 0; i < card_hand.length; i++) {\r\n\t\t\tuint deckIdx = card_hand[i].deckIdx;\r\n\t\t\t_cardStack[nftId] = Card(card_hand[i].deckIdx, card_hand[i].cardIdx, card_hand[i].suitTypeIdx, true);\r\n\t\t\t_inHandTokens[msg.sender].push(nftId);\r\n\t\t\t_safeMint(msg.sender, nftId);\r\n\t\t\tnftId++;\r\n\t\t}\r\n\t\temit HandMinted(msg.sender);\r\n\t}\r\n}",
  "sourcePath": "C:/Users/swapp/Documents/MyProjects/Crypto/crypto_casino/truffle/contracts/CardGame.sol",
  "ast": {
    "absolutePath": "/C/Users/swapp/Documents/MyProjects/Crypto/crypto_casino/truffle/contracts/CardGame.sol",
    "exportedSymbols": {
      "CardGame": [
        148
      ]
    },
    "id": 149,
    "license": null,
    "nodeType": "SourceUnit",
    "nodes": [
      {
        "id": 1,
        "literals": [
          "solidity",
          ">=",
          "0.4",
          ".22",
          "<",
          "0.8",
          ".0"
        ],
        "nodeType": "PragmaDirective",
        "src": "0:32:0"
      },
      {
        "id": 2,
        "literals": [
          "experimental",
          "ABIEncoderV2"
        ],
        "nodeType": "PragmaDirective",
        "src": "34:33:0"
      },
      {
        "absolutePath": "@openzeppelin/contracts/token/ERC721/ERC721.sol",
        "file": "@openzeppelin/contracts/token/ERC721/ERC721.sol",
        "id": 3,
        "nodeType": "ImportDirective",
        "scope": 149,
        "sourceUnit": 1627,
        "src": "71:57:0",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "@openzeppelin/contracts/access/Ownable.sol",
        "file": "@openzeppelin/contracts/access/Ownable.sol",
        "id": 4,
        "nodeType": "ImportDirective",
        "scope": 149,
        "sourceUnit": 259,
        "src": "130:52:0",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "abstract": false,
        "baseContracts": [
          {
            "arguments": null,
            "baseName": {
              "contractScope": null,
              "id": 5,
              "name": "ERC721",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 1626,
              "src": "207:6:0",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_ERC721_$1626",
                "typeString": "contract ERC721"
              }
            },
            "id": 6,
            "nodeType": "InheritanceSpecifier",
            "src": "207:6:0"
          },
          {
            "arguments": null,
            "baseName": {
              "contractScope": null,
              "id": 7,
              "name": "Ownable",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 258,
              "src": "215:7:0",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_Ownable_$258",
                "typeString": "contract Ownable"
              }
            },
            "id": 8,
            "nodeType": "InheritanceSpecifier",
            "src": "215:7:0"
          }
        ],
        "contractDependencies": [
          258,
          315,
          327,
          1626,
          1742,
          1773,
          1800,
          2137
        ],
        "contractKind": "contract",
        "documentation": null,
        "fullyImplemented": true,
        "id": 148,
        "linearizedBaseContracts": [
          148,
          258,
          1626,
          1773,
          1800,
          1742,
          315,
          327,
          2137
        ],
        "name": "CardGame",
        "nodeType": "ContractDefinition",
        "nodes": [
          {
            "body": {
              "id": 15,
              "nodeType": "Block",
              "src": "275:5:0",
              "statements": []
            },
            "documentation": null,
            "id": 16,
            "implemented": true,
            "kind": "constructor",
            "modifiers": [
              {
                "arguments": [
                  {
                    "argumentTypes": null,
                    "hexValue": "436173696e6f4e4654",
                    "id": 11,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "kind": "string",
                    "lValueRequested": false,
                    "nodeType": "Literal",
                    "src": "248:11:0",
                    "subdenomination": null,
                    "typeDescriptions": {
                      "typeIdentifier": "t_stringliteral_874cdc01750587db96279788da401d7a1c70b15fa3a061af2673939225461489",
                      "typeString": "literal_string \"CasinoNFT\""
                    },
                    "value": "CasinoNFT"
                  },
                  {
                    "argumentTypes": null,
                    "hexValue": "4d4f4f",
                    "id": 12,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "kind": "string",
                    "lValueRequested": false,
                    "nodeType": "Literal",
                    "src": "261:5:0",
                    "subdenomination": null,
                    "typeDescriptions": {
                      "typeIdentifier": "t_stringliteral_d4ec9cc5262f3c3be5a42f04bb21b119846a40d494c41534c9a8044716e7463b",
                      "typeString": "literal_string \"MOO\""
                    },
                    "value": "MOO"
                  }
                ],
                "id": 13,
                "modifierName": {
                  "argumentTypes": null,
                  "id": 10,
                  "name": "ERC721",
                  "nodeType": "Identifier",
                  "overloadedDeclarations": [],
                  "referencedDeclaration": 1626,
                  "src": "241:6:0",
                  "typeDescriptions": {
                    "typeIdentifier": "t_type$_t_contract$_ERC721_$1626_$",
                    "typeString": "type(contract ERC721)"
                  }
                },
                "nodeType": "ModifierInvocation",
                "src": "241:26:0"
              }
            ],
            "name": "",
            "nodeType": "FunctionDefinition",
            "overrides": null,
            "parameters": {
              "id": 9,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "238:2:0"
            },
            "returnParameters": {
              "id": 14,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "275:0:0"
            },
            "scope": 148,
            "src": "227:53:0",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "canonicalName": "CardGame.Card",
            "id": 25,
            "members": [
              {
                "constant": false,
                "id": 18,
                "mutability": "mutable",
                "name": "deckIdx",
                "nodeType": "VariableDeclaration",
                "overrides": null,
                "scope": 25,
                "src": "302:12:0",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint256",
                  "typeString": "uint256"
                },
                "typeName": {
                  "id": 17,
                  "name": "uint",
                  "nodeType": "ElementaryTypeName",
                  "src": "302:4:0",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  }
                },
                "value": null,
                "visibility": "internal"
              },
              {
                "constant": false,
                "id": 20,
                "mutability": "mutable",
                "name": "cardIdx",
                "nodeType": "VariableDeclaration",
                "overrides": null,
                "scope": 25,
                "src": "319:12:0",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint256",
                  "typeString": "uint256"
                },
                "typeName": {
                  "id": 19,
                  "name": "uint",
                  "nodeType": "ElementaryTypeName",
                  "src": "319:4:0",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  }
                },
                "value": null,
                "visibility": "internal"
              },
              {
                "constant": false,
                "id": 22,
                "mutability": "mutable",
                "name": "suitTypeIdx",
                "nodeType": "VariableDeclaration",
                "overrides": null,
                "scope": 25,
                "src": "336:16:0",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint256",
                  "typeString": "uint256"
                },
                "typeName": {
                  "id": 21,
                  "name": "uint",
                  "nodeType": "ElementaryTypeName",
                  "src": "336:4:0",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  }
                },
                "value": null,
                "visibility": "internal"
              },
              {
                "constant": false,
                "id": 24,
                "mutability": "mutable",
                "name": "isHandCard",
                "nodeType": "VariableDeclaration",
                "overrides": null,
                "scope": 25,
                "src": "357:15:0",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_bool",
                  "typeString": "bool"
                },
                "typeName": {
                  "id": 23,
                  "name": "bool",
                  "nodeType": "ElementaryTypeName",
                  "src": "357:4:0",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  }
                },
                "value": null,
                "visibility": "internal"
              }
            ],
            "name": "Card",
            "nodeType": "StructDefinition",
            "scope": 148,
            "src": "285:92:0",
            "visibility": "public"
          },
          {
            "constant": false,
            "functionSelector": "c6bc5182",
            "id": 28,
            "mutability": "mutable",
            "name": "nftId",
            "nodeType": "VariableDeclaration",
            "overrides": null,
            "scope": 148,
            "src": "382:21:0",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_uint256",
              "typeString": "uint256"
            },
            "typeName": {
              "id": 26,
              "name": "uint",
              "nodeType": "ElementaryTypeName",
              "src": "382:4:0",
              "typeDescriptions": {
                "typeIdentifier": "t_uint256",
                "typeString": "uint256"
              }
            },
            "value": {
              "argumentTypes": null,
              "hexValue": "30",
              "id": 27,
              "isConstant": false,
              "isLValue": false,
              "isPure": true,
              "kind": "number",
              "lValueRequested": false,
              "nodeType": "Literal",
              "src": "402:1:0",
              "subdenomination": null,
              "typeDescriptions": {
                "typeIdentifier": "t_rational_0_by_1",
                "typeString": "int_const 0"
              },
              "value": "0"
            },
            "visibility": "public"
          },
          {
            "constant": false,
            "id": 32,
            "mutability": "mutable",
            "name": "_cardStack",
            "nodeType": "VariableDeclaration",
            "overrides": null,
            "scope": 148,
            "src": "407:43:0",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_Card_$25_storage_$",
              "typeString": "mapping(uint256 => struct CardGame.Card)"
            },
            "typeName": {
              "id": 31,
              "keyType": {
                "id": 29,
                "name": "uint256",
                "nodeType": "ElementaryTypeName",
                "src": "415:7:0",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint256",
                  "typeString": "uint256"
                }
              },
              "nodeType": "Mapping",
              "src": "407:24:0",
              "typeDescriptions": {
                "typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_Card_$25_storage_$",
                "typeString": "mapping(uint256 => struct CardGame.Card)"
              },
              "valueType": {
                "contractScope": null,
                "id": 30,
                "name": "Card",
                "nodeType": "UserDefinedTypeName",
                "referencedDeclaration": 25,
                "src": "426:4:0",
                "typeDescriptions": {
                  "typeIdentifier": "t_struct$_Card_$25_storage_ptr",
                  "typeString": "struct CardGame.Card"
                }
              }
            },
            "value": null,
            "visibility": "private"
          },
          {
            "constant": false,
            "id": 37,
            "mutability": "mutable",
            "name": "_inHandTokens",
            "nodeType": "VariableDeclaration",
            "overrides": null,
            "scope": 148,
            "src": "454:48:0",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_mapping$_t_address_$_t_array$_t_uint256_$dyn_storage_$",
              "typeString": "mapping(address => uint256[])"
            },
            "typeName": {
              "id": 36,
              "keyType": {
                "id": 33,
                "name": "address",
                "nodeType": "ElementaryTypeName",
                "src": "462:7:0",
                "typeDescriptions": {
                  "typeIdentifier": "t_address",
                  "typeString": "address"
                }
              },
              "nodeType": "Mapping",
              "src": "454:26:0",
              "typeDescriptions": {
                "typeIdentifier": "t_mapping$_t_address_$_t_array$_t_uint256_$dyn_storage_$",
                "typeString": "mapping(address => uint256[])"
              },
              "valueType": {
                "baseType": {
                  "id": 34,
                  "name": "uint",
                  "nodeType": "ElementaryTypeName",
                  "src": "473:4:0",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  }
                },
                "id": 35,
                "length": null,
                "nodeType": "ArrayTypeName",
                "src": "473:6:0",
                "typeDescriptions": {
                  "typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
                  "typeString": "uint256[]"
                }
              }
            },
            "value": null,
            "visibility": "private"
          },
          {
            "anonymous": false,
            "documentation": null,
            "id": 41,
            "name": "HandMinted",
            "nodeType": "EventDefinition",
            "parameters": {
              "id": 40,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 39,
                  "indexed": false,
                  "mutability": "mutable",
                  "name": "player",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 41,
                  "src": "523:14:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 38,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "523:7:0",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "522:16:0"
            },
            "src": "506:33:0"
          },
          {
            "body": {
              "id": 52,
              "nodeType": "Block",
              "src": "620:36:0",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "baseExpression": {
                      "argumentTypes": null,
                      "id": 48,
                      "name": "_cardStack",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 32,
                      "src": "632:10:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_Card_$25_storage_$",
                        "typeString": "mapping(uint256 => struct CardGame.Card storage ref)"
                      }
                    },
                    "id": 50,
                    "indexExpression": {
                      "argumentTypes": null,
                      "id": 49,
                      "name": "tokenId",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 43,
                      "src": "643:7:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "isConstant": false,
                    "isLValue": true,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "IndexAccess",
                    "src": "632:19:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_Card_$25_storage",
                      "typeString": "struct CardGame.Card storage ref"
                    }
                  },
                  "functionReturnParameters": 47,
                  "id": 51,
                  "nodeType": "Return",
                  "src": "625:26:0"
                }
              ]
            },
            "documentation": null,
            "functionSelector": "c1e03728",
            "id": 53,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "getTokenDetails",
            "nodeType": "FunctionDefinition",
            "overrides": null,
            "parameters": {
              "id": 44,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 43,
                  "mutability": "mutable",
                  "name": "tokenId",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 53,
                  "src": "569:15:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 42,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "569:7:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "568:17:0"
            },
            "returnParameters": {
              "id": 47,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 46,
                  "mutability": "mutable",
                  "name": "",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 53,
                  "src": "607:11:0",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_struct$_Card_$25_memory_ptr",
                    "typeString": "struct CardGame.Card"
                  },
                  "typeName": {
                    "contractScope": null,
                    "id": 45,
                    "name": "Card",
                    "nodeType": "UserDefinedTypeName",
                    "referencedDeclaration": 25,
                    "src": "607:4:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_Card_$25_storage_ptr",
                      "typeString": "struct CardGame.Card"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "606:13:0"
            },
            "scope": 148,
            "src": "544:112:0",
            "stateMutability": "view",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 64,
              "nodeType": "Block",
              "src": "727:33:0",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "id": 61,
                        "name": "tokenId",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 55,
                        "src": "747:7:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 60,
                      "name": "ownerOf",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 830,
                      "src": "739:7:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_view$_t_uint256_$returns$_t_address_$",
                        "typeString": "function (uint256) view returns (address)"
                      }
                    },
                    "id": 62,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "739:16:0",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "functionReturnParameters": 59,
                  "id": 63,
                  "nodeType": "Return",
                  "src": "732:23:0"
                }
              ]
            },
            "documentation": null,
            "functionSelector": "83638710",
            "id": 65,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "getOwnerOf",
            "nodeType": "FunctionDefinition",
            "overrides": null,
            "parameters": {
              "id": 56,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 55,
                  "mutability": "mutable",
                  "name": "tokenId",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 65,
                  "src": "681:15:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 54,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "681:7:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "680:17:0"
            },
            "returnParameters": {
              "id": 59,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 58,
                  "mutability": "mutable",
                  "name": "",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 65,
                  "src": "719:7:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 57,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "719:7:0",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "718:9:0"
            },
            "scope": 148,
            "src": "661:99:0",
            "stateMutability": "view",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 77,
              "nodeType": "Block",
              "src": "842:38:0",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "baseExpression": {
                      "argumentTypes": null,
                      "id": 73,
                      "name": "_inHandTokens",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 37,
                      "src": "854:13:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_mapping$_t_address_$_t_array$_t_uint256_$dyn_storage_$",
                        "typeString": "mapping(address => uint256[] storage ref)"
                      }
                    },
                    "id": 75,
                    "indexExpression": {
                      "argumentTypes": null,
                      "id": 74,
                      "name": "myAddr",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 67,
                      "src": "868:6:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "isConstant": false,
                    "isLValue": true,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "IndexAccess",
                    "src": "854:21:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_uint256_$dyn_storage",
                      "typeString": "uint256[] storage ref"
                    }
                  },
                  "functionReturnParameters": 72,
                  "id": 76,
                  "nodeType": "Return",
                  "src": "847:28:0"
                }
              ]
            },
            "documentation": null,
            "functionSelector": "50f0aa99",
            "id": 78,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "getInHandTokens",
            "nodeType": "FunctionDefinition",
            "overrides": null,
            "parameters": {
              "id": 68,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 67,
                  "mutability": "mutable",
                  "name": "myAddr",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 78,
                  "src": "790:14:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 66,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "790:7:0",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "789:16:0"
            },
            "returnParameters": {
              "id": 72,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 71,
                  "mutability": "mutable",
                  "name": "",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 78,
                  "src": "826:14:0",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
                    "typeString": "uint256[]"
                  },
                  "typeName": {
                    "baseType": {
                      "id": 69,
                      "name": "uint",
                      "nodeType": "ElementaryTypeName",
                      "src": "826:4:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "id": 70,
                    "length": null,
                    "nodeType": "ArrayTypeName",
                    "src": "826:7:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
                      "typeString": "uint256[]"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "825:16:0"
            },
            "scope": 148,
            "src": "765:115:0",
            "stateMutability": "view",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 146,
              "nodeType": "Block",
              "src": "938:328:0",
              "statements": [
                {
                  "body": {
                    "id": 139,
                    "nodeType": "Block",
                    "src": "987:243:0",
                    "statements": [
                      {
                        "assignments": [
                          96
                        ],
                        "declarations": [
                          {
                            "constant": false,
                            "id": 96,
                            "mutability": "mutable",
                            "name": "deckIdx",
                            "nodeType": "VariableDeclaration",
                            "overrides": null,
                            "scope": 139,
                            "src": "993:12:0",
                            "stateVariable": false,
                            "storageLocation": "default",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            },
                            "typeName": {
                              "id": 95,
                              "name": "uint",
                              "nodeType": "ElementaryTypeName",
                              "src": "993:4:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "value": null,
                            "visibility": "internal"
                          }
                        ],
                        "id": 101,
                        "initialValue": {
                          "argumentTypes": null,
                          "expression": {
                            "argumentTypes": null,
                            "baseExpression": {
                              "argumentTypes": null,
                              "id": 97,
                              "name": "card_hand",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 81,
                              "src": "1008:9:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_array$_t_struct$_Card_$25_memory_ptr_$dyn_memory_ptr",
                                "typeString": "struct CardGame.Card memory[] memory"
                              }
                            },
                            "id": 99,
                            "indexExpression": {
                              "argumentTypes": null,
                              "id": 98,
                              "name": "i",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 85,
                              "src": "1018:1:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "nodeType": "IndexAccess",
                            "src": "1008:12:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_Card_$25_memory_ptr",
                              "typeString": "struct CardGame.Card memory"
                            }
                          },
                          "id": 100,
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "deckIdx",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 18,
                          "src": "1008:20:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "VariableDeclarationStatement",
                        "src": "993:35:0"
                      },
                      {
                        "expression": {
                          "argumentTypes": null,
                          "id": 120,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "argumentTypes": null,
                            "baseExpression": {
                              "argumentTypes": null,
                              "id": 102,
                              "name": "_cardStack",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 32,
                              "src": "1034:10:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_Card_$25_storage_$",
                                "typeString": "mapping(uint256 => struct CardGame.Card storage ref)"
                              }
                            },
                            "id": 104,
                            "indexExpression": {
                              "argumentTypes": null,
                              "id": 103,
                              "name": "nftId",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 28,
                              "src": "1045:5:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": true,
                            "nodeType": "IndexAccess",
                            "src": "1034:17:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_Card_$25_storage",
                              "typeString": "struct CardGame.Card storage ref"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "argumentTypes": null,
                            "arguments": [
                              {
                                "argumentTypes": null,
                                "expression": {
                                  "argumentTypes": null,
                                  "baseExpression": {
                                    "argumentTypes": null,
                                    "id": 106,
                                    "name": "card_hand",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 81,
                                    "src": "1059:9:0",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_array$_t_struct$_Card_$25_memory_ptr_$dyn_memory_ptr",
                                      "typeString": "struct CardGame.Card memory[] memory"
                                    }
                                  },
                                  "id": 108,
                                  "indexExpression": {
                                    "argumentTypes": null,
                                    "id": 107,
                                    "name": "i",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 85,
                                    "src": "1069:1:0",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  },
                                  "isConstant": false,
                                  "isLValue": true,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "nodeType": "IndexAccess",
                                  "src": "1059:12:0",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_struct$_Card_$25_memory_ptr",
                                    "typeString": "struct CardGame.Card memory"
                                  }
                                },
                                "id": 109,
                                "isConstant": false,
                                "isLValue": true,
                                "isPure": false,
                                "lValueRequested": false,
                                "memberName": "deckIdx",
                                "nodeType": "MemberAccess",
                                "referencedDeclaration": 18,
                                "src": "1059:20:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              {
                                "argumentTypes": null,
                                "expression": {
                                  "argumentTypes": null,
                                  "baseExpression": {
                                    "argumentTypes": null,
                                    "id": 110,
                                    "name": "card_hand",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 81,
                                    "src": "1081:9:0",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_array$_t_struct$_Card_$25_memory_ptr_$dyn_memory_ptr",
                                      "typeString": "struct CardGame.Card memory[] memory"
                                    }
                                  },
                                  "id": 112,
                                  "indexExpression": {
                                    "argumentTypes": null,
                                    "id": 111,
                                    "name": "i",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 85,
                                    "src": "1091:1:0",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  },
                                  "isConstant": false,
                                  "isLValue": true,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "nodeType": "IndexAccess",
                                  "src": "1081:12:0",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_struct$_Card_$25_memory_ptr",
                                    "typeString": "struct CardGame.Card memory"
                                  }
                                },
                                "id": 113,
                                "isConstant": false,
                                "isLValue": true,
                                "isPure": false,
                                "lValueRequested": false,
                                "memberName": "cardIdx",
                                "nodeType": "MemberAccess",
                                "referencedDeclaration": 20,
                                "src": "1081:20:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              {
                                "argumentTypes": null,
                                "expression": {
                                  "argumentTypes": null,
                                  "baseExpression": {
                                    "argumentTypes": null,
                                    "id": 114,
                                    "name": "card_hand",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 81,
                                    "src": "1103:9:0",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_array$_t_struct$_Card_$25_memory_ptr_$dyn_memory_ptr",
                                      "typeString": "struct CardGame.Card memory[] memory"
                                    }
                                  },
                                  "id": 116,
                                  "indexExpression": {
                                    "argumentTypes": null,
                                    "id": 115,
                                    "name": "i",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 85,
                                    "src": "1113:1:0",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  },
                                  "isConstant": false,
                                  "isLValue": true,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "nodeType": "IndexAccess",
                                  "src": "1103:12:0",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_struct$_Card_$25_memory_ptr",
                                    "typeString": "struct CardGame.Card memory"
                                  }
                                },
                                "id": 117,
                                "isConstant": false,
                                "isLValue": true,
                                "isPure": false,
                                "lValueRequested": false,
                                "memberName": "suitTypeIdx",
                                "nodeType": "MemberAccess",
                                "referencedDeclaration": 22,
                                "src": "1103:24:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              {
                                "argumentTypes": null,
                                "hexValue": "74727565",
                                "id": 118,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "kind": "bool",
                                "lValueRequested": false,
                                "nodeType": "Literal",
                                "src": "1129:4:0",
                                "subdenomination": null,
                                "typeDescriptions": {
                                  "typeIdentifier": "t_bool",
                                  "typeString": "bool"
                                },
                                "value": "true"
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                },
                                {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                },
                                {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                },
                                {
                                  "typeIdentifier": "t_bool",
                                  "typeString": "bool"
                                }
                              ],
                              "id": 105,
                              "name": "Card",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 25,
                              "src": "1054:4:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_struct$_Card_$25_storage_ptr_$",
                                "typeString": "type(struct CardGame.Card storage pointer)"
                              }
                            },
                            "id": 119,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "structConstructorCall",
                            "lValueRequested": false,
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "1054:80:0",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_Card_$25_memory_ptr",
                              "typeString": "struct CardGame.Card memory"
                            }
                          },
                          "src": "1034:100:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_Card_$25_storage",
                            "typeString": "struct CardGame.Card storage ref"
                          }
                        },
                        "id": 121,
                        "nodeType": "ExpressionStatement",
                        "src": "1034:100:0"
                      },
                      {
                        "expression": {
                          "argumentTypes": null,
                          "arguments": [
                            {
                              "argumentTypes": null,
                              "id": 127,
                              "name": "nftId",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 28,
                              "src": "1171:5:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            ],
                            "expression": {
                              "argumentTypes": null,
                              "baseExpression": {
                                "argumentTypes": null,
                                "id": 122,
                                "name": "_inHandTokens",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 37,
                                "src": "1140:13:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_mapping$_t_address_$_t_array$_t_uint256_$dyn_storage_$",
                                  "typeString": "mapping(address => uint256[] storage ref)"
                                }
                              },
                              "id": 125,
                              "indexExpression": {
                                "argumentTypes": null,
                                "expression": {
                                  "argumentTypes": null,
                                  "id": 123,
                                  "name": "msg",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": -15,
                                  "src": "1154:3:0",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_magic_message",
                                    "typeString": "msg"
                                  }
                                },
                                "id": 124,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "memberName": "sender",
                                "nodeType": "MemberAccess",
                                "referencedDeclaration": null,
                                "src": "1154:10:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_address_payable",
                                  "typeString": "address payable"
                                }
                              },
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": false,
                              "nodeType": "IndexAccess",
                              "src": "1140:25:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_array$_t_uint256_$dyn_storage",
                                "typeString": "uint256[] storage ref"
                              }
                            },
                            "id": 126,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "push",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": null,
                            "src": "1140:30:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_arraypush_nonpayable$_t_uint256_$returns$__$",
                              "typeString": "function (uint256)"
                            }
                          },
                          "id": 128,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "1140:37:0",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 129,
                        "nodeType": "ExpressionStatement",
                        "src": "1140:37:0"
                      },
                      {
                        "expression": {
                          "argumentTypes": null,
                          "arguments": [
                            {
                              "argumentTypes": null,
                              "expression": {
                                "argumentTypes": null,
                                "id": 131,
                                "name": "msg",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": -15,
                                "src": "1193:3:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_magic_message",
                                  "typeString": "msg"
                                }
                              },
                              "id": 132,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberName": "sender",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": null,
                              "src": "1193:10:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address_payable",
                                "typeString": "address payable"
                              }
                            },
                            {
                              "argumentTypes": null,
                              "id": 133,
                              "name": "nftId",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 28,
                              "src": "1205:5:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address_payable",
                                "typeString": "address payable"
                              },
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            ],
                            "id": 130,
                            "name": "_safeMint",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [
                              1270,
                              1299
                            ],
                            "referencedDeclaration": 1270,
                            "src": "1183:9:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$returns$__$",
                              "typeString": "function (address,uint256)"
                            }
                          },
                          "id": 134,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "1183:28:0",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 135,
                        "nodeType": "ExpressionStatement",
                        "src": "1183:28:0"
                      },
                      {
                        "expression": {
                          "argumentTypes": null,
                          "id": 137,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "UnaryOperation",
                          "operator": "++",
                          "prefix": false,
                          "src": "1217:7:0",
                          "subExpression": {
                            "argumentTypes": null,
                            "id": 136,
                            "name": "nftId",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 28,
                            "src": "1217:5:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "id": 138,
                        "nodeType": "ExpressionStatement",
                        "src": "1217:7:0"
                      }
                    ]
                  },
                  "condition": {
                    "argumentTypes": null,
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 91,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "argumentTypes": null,
                      "id": 88,
                      "name": "i",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 85,
                      "src": "960:1:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "<",
                    "rightExpression": {
                      "argumentTypes": null,
                      "expression": {
                        "argumentTypes": null,
                        "id": 89,
                        "name": "card_hand",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 81,
                        "src": "964:9:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_struct$_Card_$25_memory_ptr_$dyn_memory_ptr",
                          "typeString": "struct CardGame.Card memory[] memory"
                        }
                      },
                      "id": 90,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "length",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": null,
                      "src": "964:16:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "960:20:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 140,
                  "initializationExpression": {
                    "assignments": [
                      85
                    ],
                    "declarations": [
                      {
                        "constant": false,
                        "id": 85,
                        "mutability": "mutable",
                        "name": "i",
                        "nodeType": "VariableDeclaration",
                        "overrides": null,
                        "scope": 140,
                        "src": "948:6:0",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 84,
                          "name": "uint",
                          "nodeType": "ElementaryTypeName",
                          "src": "948:4:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "value": null,
                        "visibility": "internal"
                      }
                    ],
                    "id": 87,
                    "initialValue": {
                      "argumentTypes": null,
                      "hexValue": "30",
                      "id": 86,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "957:1:0",
                      "subdenomination": null,
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_0_by_1",
                        "typeString": "int_const 0"
                      },
                      "value": "0"
                    },
                    "nodeType": "VariableDeclarationStatement",
                    "src": "948:10:0"
                  },
                  "loopExpression": {
                    "expression": {
                      "argumentTypes": null,
                      "id": 93,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "nodeType": "UnaryOperation",
                      "operator": "++",
                      "prefix": false,
                      "src": "982:3:0",
                      "subExpression": {
                        "argumentTypes": null,
                        "id": 92,
                        "name": "i",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 85,
                        "src": "982:1:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "id": 94,
                    "nodeType": "ExpressionStatement",
                    "src": "982:3:0"
                  },
                  "nodeType": "ForStatement",
                  "src": "943:287:0"
                },
                {
                  "eventCall": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "expression": {
                          "argumentTypes": null,
                          "id": 142,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": -15,
                          "src": "1250:3:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 143,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": null,
                        "src": "1250:10:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      ],
                      "id": 141,
                      "name": "HandMinted",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 41,
                      "src": "1239:10:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_event_nonpayable$_t_address_$returns$__$",
                        "typeString": "function (address)"
                      }
                    },
                    "id": 144,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1239:22:0",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 145,
                  "nodeType": "EmitStatement",
                  "src": "1234:27:0"
                }
              ]
            },
            "documentation": null,
            "functionSelector": "fc106758",
            "id": 147,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "mintNewHand",
            "nodeType": "FunctionDefinition",
            "overrides": null,
            "parameters": {
              "id": 82,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 81,
                  "mutability": "mutable",
                  "name": "card_hand",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 147,
                  "src": "906:23:0",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_array$_t_struct$_Card_$25_memory_ptr_$dyn_memory_ptr",
                    "typeString": "struct CardGame.Card[]"
                  },
                  "typeName": {
                    "baseType": {
                      "contractScope": null,
                      "id": 79,
                      "name": "Card",
                      "nodeType": "UserDefinedTypeName",
                      "referencedDeclaration": 25,
                      "src": "906:4:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_Card_$25_storage_ptr",
                        "typeString": "struct CardGame.Card"
                      }
                    },
                    "id": 80,
                    "length": null,
                    "nodeType": "ArrayTypeName",
                    "src": "906:6:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_struct$_Card_$25_storage_$dyn_storage_ptr",
                      "typeString": "struct CardGame.Card[]"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "905:25:0"
            },
            "returnParameters": {
              "id": 83,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "938:0:0"
            },
            "scope": 148,
            "src": "885:381:0",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          }
        ],
        "scope": 149,
        "src": "186:1083:0"
      }
    ],
    "src": "0:1269:0"
  },
  "legacyAST": {
    "attributes": {
      "absolutePath": "/C/Users/swapp/Documents/MyProjects/Crypto/crypto_casino/truffle/contracts/CardGame.sol",
      "exportedSymbols": {
        "CardGame": [
          148
        ]
      },
      "license": null
    },
    "children": [
      {
        "attributes": {
          "literals": [
            "solidity",
            ">=",
            "0.4",
            ".22",
            "<",
            "0.8",
            ".0"
          ]
        },
        "id": 1,
        "name": "PragmaDirective",
        "src": "0:32:0"
      },
      {
        "attributes": {
          "literals": [
            "experimental",
            "ABIEncoderV2"
          ]
        },
        "id": 2,
        "name": "PragmaDirective",
        "src": "34:33:0"
      },
      {
        "attributes": {
          "SourceUnit": 1627,
          "absolutePath": "@openzeppelin/contracts/token/ERC721/ERC721.sol",
          "file": "@openzeppelin/contracts/token/ERC721/ERC721.sol",
          "scope": 149,
          "symbolAliases": [
            null
          ],
          "unitAlias": ""
        },
        "id": 3,
        "name": "ImportDirective",
        "src": "71:57:0"
      },
      {
        "attributes": {
          "SourceUnit": 259,
          "absolutePath": "@openzeppelin/contracts/access/Ownable.sol",
          "file": "@openzeppelin/contracts/access/Ownable.sol",
          "scope": 149,
          "symbolAliases": [
            null
          ],
          "unitAlias": ""
        },
        "id": 4,
        "name": "ImportDirective",
        "src": "130:52:0"
      },
      {
        "attributes": {
          "abstract": false,
          "contractDependencies": [
            258,
            315,
            327,
            1626,
            1742,
            1773,
            1800,
            2137
          ],
          "contractKind": "contract",
          "documentation": null,
          "fullyImplemented": true,
          "linearizedBaseContracts": [
            148,
            258,
            1626,
            1773,
            1800,
            1742,
            315,
            327,
            2137
          ],
          "name": "CardGame",
          "scope": 149
        },
        "children": [
          {
            "attributes": {
              "arguments": null
            },
            "children": [
              {
                "attributes": {
                  "contractScope": null,
                  "name": "ERC721",
                  "referencedDeclaration": 1626,
                  "type": "contract ERC721"
                },
                "id": 5,
                "name": "UserDefinedTypeName",
                "src": "207:6:0"
              }
            ],
            "id": 6,
            "name": "InheritanceSpecifier",
            "src": "207:6:0"
          },
          {
            "attributes": {
              "arguments": null
            },
            "children": [
              {
                "attributes": {
                  "contractScope": null,
                  "name": "Ownable",
                  "referencedDeclaration": 258,
                  "type": "contract Ownable"
                },
                "id": 7,
                "name": "UserDefinedTypeName",
                "src": "215:7:0"
              }
            ],
            "id": 8,
            "name": "InheritanceSpecifier",
            "src": "215:7:0"
          },
          {
            "attributes": {
              "documentation": null,
              "implemented": true,
              "isConstructor": true,
              "kind": "constructor",
              "name": "",
              "overrides": null,
              "scope": 148,
              "stateMutability": "nonpayable",
              "virtual": false,
              "visibility": "public"
            },
            "children": [
              {
                "attributes": {
                  "parameters": [
                    null
                  ]
                },
                "children": [],
                "id": 9,
                "name": "ParameterList",
                "src": "238:2:0"
              },
              {
                "attributes": {
                  "parameters": [
                    null
                  ]
                },
                "children": [],
                "id": 14,
                "name": "ParameterList",
                "src": "275:0:0"
              },
              {
                "children": [
                  {
                    "attributes": {
                      "argumentTypes": null,
                      "overloadedDeclarations": [
                        null
                      ],
                      "referencedDeclaration": 1626,
                      "type": "type(contract ERC721)",
                      "value": "ERC721"
                    },
                    "id": 10,
                    "name": "Identifier",
                    "src": "241:6:0"
                  },
                  {
                    "attributes": {
                      "argumentTypes": null,
                      "hexvalue": "436173696e6f4e4654",
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "lValueRequested": false,
                      "subdenomination": null,
                      "token": "string",
                      "type": "literal_string \"CasinoNFT\"",
                      "value": "CasinoNFT"
                    },
                    "id": 11,
                    "name": "Literal",
                    "src": "248:11:0"
                  },
                  {
                    "attributes": {
                      "argumentTypes": null,
                      "hexvalue": "4d4f4f",
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "lValueRequested": false,
                      "subdenomination": null,
                      "token": "string",
                      "type": "literal_string \"MOO\"",
                      "value": "MOO"
                    },
                    "id": 12,
                    "name": "Literal",
                    "src": "261:5:0"
                  }
                ],
                "id": 13,
                "name": "ModifierInvocation",
                "src": "241:26:0"
              },
              {
                "attributes": {
                  "statements": [
                    null
                  ]
                },
                "children": [],
                "id": 15,
                "name": "Block",
                "src": "275:5:0"
              }
            ],
            "id": 16,
            "name": "FunctionDefinition",
            "src": "227:53:0"
          },
          {
            "attributes": {
              "canonicalName": "CardGame.Card",
              "name": "Card",
              "scope": 148,
              "visibility": "public"
            },
            "children": [
              {
                "attributes": {
                  "constant": false,
                  "mutability": "mutable",
                  "name": "deckIdx",
                  "overrides": null,
                  "scope": 25,
                  "stateVariable": false,
                  "storageLocation": "default",
                  "type": "uint256",
                  "value": null,
                  "visibility": "internal"
                },
                "children": [
                  {
                    "attributes": {
                      "name": "uint",
                      "type": "uint256"
                    },
                    "id": 17,
                    "name": "ElementaryTypeName",
                    "src": "302:4:0"
                  }
                ],
                "id": 18,
                "name": "VariableDeclaration",
                "src": "302:12:0"
              },
              {
                "attributes": {
                  "constant": false,
                  "mutability": "mutable",
                  "name": "cardIdx",
                  "overrides": null,
                  "scope": 25,
                  "stateVariable": false,
                  "storageLocation": "default",
                  "type": "uint256",
                  "value": null,
                  "visibility": "internal"
                },
                "children": [
                  {
                    "attributes": {
                      "name": "uint",
                      "type": "uint256"
                    },
                    "id": 19,
                    "name": "ElementaryTypeName",
                    "src": "319:4:0"
                  }
                ],
                "id": 20,
                "name": "VariableDeclaration",
                "src": "319:12:0"
              },
              {
                "attributes": {
                  "constant": false,
                  "mutability": "mutable",
                  "name": "suitTypeIdx",
                  "overrides": null,
                  "scope": 25,
                  "stateVariable": false,
                  "storageLocation": "default",
                  "type": "uint256",
                  "value": null,
                  "visibility": "internal"
                },
                "children": [
                  {
                    "attributes": {
                      "name": "uint",
                      "type": "uint256"
                    },
                    "id": 21,
                    "name": "ElementaryTypeName",
                    "src": "336:4:0"
                  }
                ],
                "id": 22,
                "name": "VariableDeclaration",
                "src": "336:16:0"
              },
              {
                "attributes": {
                  "constant": false,
                  "mutability": "mutable",
                  "name": "isHandCard",
                  "overrides": null,
                  "scope": 25,
                  "stateVariable": false,
                  "storageLocation": "default",
                  "type": "bool",
                  "value": null,
                  "visibility": "internal"
                },
                "children": [
                  {
                    "attributes": {
                      "name": "bool",
                      "type": "bool"
                    },
                    "id": 23,
                    "name": "ElementaryTypeName",
                    "src": "357:4:0"
                  }
                ],
                "id": 24,
                "name": "VariableDeclaration",
                "src": "357:15:0"
              }
            ],
            "id": 25,
            "name": "StructDefinition",
            "src": "285:92:0"
          },
          {
            "attributes": {
              "constant": false,
              "functionSelector": "c6bc5182",
              "mutability": "mutable",
              "name": "nftId",
              "overrides": null,
              "scope": 148,
              "stateVariable": true,
              "storageLocation": "default",
              "type": "uint256",
              "visibility": "public"
            },
            "children": [
              {
                "attributes": {
                  "name": "uint",
                  "type": "uint256"
                },
                "id": 26,
                "name": "ElementaryTypeName",
                "src": "382:4:0"
              },
              {
                "attributes": {
                  "argumentTypes": null,
                  "hexvalue": "30",
                  "isConstant": false,
                  "isLValue": false,
                  "isPure": true,
                  "lValueRequested": false,
                  "subdenomination": null,
                  "token": "number",
                  "type": "int_const 0",
                  "value": "0"
                },
                "id": 27,
                "name": "Literal",
                "src": "402:1:0"
              }
            ],
            "id": 28,
            "name": "VariableDeclaration",
            "src": "382:21:0"
          },
          {
            "attributes": {
              "constant": false,
              "mutability": "mutable",
              "name": "_cardStack",
              "overrides": null,
              "scope": 148,
              "stateVariable": true,
              "storageLocation": "default",
              "type": "mapping(uint256 => struct CardGame.Card)",
              "value": null,
              "visibility": "private"
            },
            "children": [
              {
                "attributes": {
                  "type": "mapping(uint256 => struct CardGame.Card)"
                },
                "children": [
                  {
                    "attributes": {
                      "name": "uint256",
                      "type": "uint256"
                    },
                    "id": 29,
                    "name": "ElementaryTypeName",
                    "src": "415:7:0"
                  },
                  {
                    "attributes": {
                      "contractScope": null,
                      "name": "Card",
                      "referencedDeclaration": 25,
                      "type": "struct CardGame.Card"
                    },
                    "id": 30,
                    "name": "UserDefinedTypeName",
                    "src": "426:4:0"
                  }
                ],
                "id": 31,
                "name": "Mapping",
                "src": "407:24:0"
              }
            ],
            "id": 32,
            "name": "VariableDeclaration",
            "src": "407:43:0"
          },
          {
            "attributes": {
              "constant": false,
              "mutability": "mutable",
              "name": "_inHandTokens",
              "overrides": null,
              "scope": 148,
              "stateVariable": true,
              "storageLocation": "default",
              "type": "mapping(address => uint256[])",
              "value": null,
              "visibility": "private"
            },
            "children": [
              {
                "attributes": {
                  "type": "mapping(address => uint256[])"
                },
                "children": [
                  {
                    "attributes": {
                      "name": "address",
                      "type": "address"
                    },
                    "id": 33,
                    "name": "ElementaryTypeName",
                    "src": "462:7:0"
                  },
                  {
                    "attributes": {
                      "length": null,
                      "type": "uint256[]"
                    },
                    "children": [
                      {
                        "attributes": {
                          "name": "uint",
                          "type": "uint256"
                        },
                        "id": 34,
                        "name": "ElementaryTypeName",
                        "src": "473:4:0"
                      }
                    ],
                    "id": 35,
                    "name": "ArrayTypeName",
                    "src": "473:6:0"
                  }
                ],
                "id": 36,
                "name": "Mapping",
                "src": "454:26:0"
              }
            ],
            "id": 37,
            "name": "VariableDeclaration",
            "src": "454:48:0"
          },
          {
            "attributes": {
              "anonymous": false,
              "documentation": null,
              "name": "HandMinted"
            },
            "children": [
              {
                "children": [
                  {
                    "attributes": {
                      "constant": false,
                      "indexed": false,
                      "mutability": "mutable",
                      "name": "player",
                      "overrides": null,
                      "scope": 41,
                      "stateVariable": false,
                      "storageLocation": "default",
                      "type": "address",
                      "value": null,
                      "visibility": "internal"
                    },
                    "children": [
                      {
                        "attributes": {
                          "name": "address",
                          "stateMutability": "nonpayable",
                          "type": "address"
                        },
                        "id": 38,
                        "name": "ElementaryTypeName",
                        "src": "523:7:0"
                      }
                    ],
                    "id": 39,
                    "name": "VariableDeclaration",
                    "src": "523:14:0"
                  }
                ],
                "id": 40,
                "name": "ParameterList",
                "src": "522:16:0"
              }
            ],
            "id": 41,
            "name": "EventDefinition",
            "src": "506:33:0"
          },
          {
            "attributes": {
              "documentation": null,
              "functionSelector": "c1e03728",
              "implemented": true,
              "isConstructor": false,
              "kind": "function",
              "modifiers": [
                null
              ],
              "name": "getTokenDetails",
              "overrides": null,
              "scope": 148,
              "stateMutability": "view",
              "virtual": false,
              "visibility": "public"
            },
            "children": [
              {
                "children": [
                  {
                    "attributes": {
                      "constant": false,
                      "mutability": "mutable",
                      "name": "tokenId",
                      "overrides": null,
                      "scope": 53,
                      "stateVariable": false,
                      "storageLocation": "default",
                      "type": "uint256",
                      "value": null,
                      "visibility": "internal"
                    },
                    "children": [
                      {
                        "attributes": {
                          "name": "uint256",
                          "type": "uint256"
                        },
                        "id": 42,
                        "name": "ElementaryTypeName",
                        "src": "569:7:0"
                      }
                    ],
                    "id": 43,
                    "name": "VariableDeclaration",
                    "src": "569:15:0"
                  }
                ],
                "id": 44,
                "name": "ParameterList",
                "src": "568:17:0"
              },
              {
                "children": [
                  {
                    "attributes": {
                      "constant": false,
                      "mutability": "mutable",
                      "name": "",
                      "overrides": null,
                      "scope": 53,
                      "stateVariable": false,
                      "storageLocation": "memory",
                      "type": "struct CardGame.Card",
                      "value": null,
                      "visibility": "internal"
                    },
                    "children": [
                      {
                        "attributes": {
                          "contractScope": null,
                          "name": "Card",
                          "referencedDeclaration": 25,
                          "type": "struct CardGame.Card"
                        },
                        "id": 45,
                        "name": "UserDefinedTypeName",
                        "src": "607:4:0"
                      }
                    ],
                    "id": 46,
                    "name": "VariableDeclaration",
                    "src": "607:11:0"
                  }
                ],
                "id": 47,
                "name": "ParameterList",
                "src": "606:13:0"
              },
              {
                "children": [
                  {
                    "attributes": {
                      "functionReturnParameters": 47
                    },
                    "children": [
                      {
                        "attributes": {
                          "argumentTypes": null,
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "type": "struct CardGame.Card storage ref"
                        },
                        "children": [
                          {
                            "attributes": {
                              "argumentTypes": null,
                              "overloadedDeclarations": [
                                null
                              ],
                              "referencedDeclaration": 32,
                              "type": "mapping(uint256 => struct CardGame.Card storage ref)",
                              "value": "_cardStack"
                            },
                            "id": 48,
                            "name": "Identifier",
                            "src": "632:10:0"
                          },
                          {
                            "attributes": {
                              "argumentTypes": null,
                              "overloadedDeclarations": [
                                null
                              ],
                              "referencedDeclaration": 43,
                              "type": "uint256",
                              "value": "tokenId"
                            },
                            "id": 49,
                            "name": "Identifier",
                            "src": "643:7:0"
                          }
                        ],
                        "id": 50,
                        "name": "IndexAccess",
                        "src": "632:19:0"
                      }
                    ],
                    "id": 51,
                    "name": "Return",
                    "src": "625:26:0"
                  }
                ],
                "id": 52,
                "name": "Block",
                "src": "620:36:0"
              }
            ],
            "id": 53,
            "name": "FunctionDefinition",
            "src": "544:112:0"
          },
          {
            "attributes": {
              "documentation": null,
              "functionSelector": "83638710",
              "implemented": true,
              "isConstructor": false,
              "kind": "function",
              "modifiers": [
                null
              ],
              "name": "getOwnerOf",
              "overrides": null,
              "scope": 148,
              "stateMutability": "view",
              "virtual": false,
              "visibility": "public"
            },
            "children": [
              {
                "children": [
                  {
                    "attributes": {
                      "constant": false,
                      "mutability": "mutable",
                      "name": "tokenId",
                      "overrides": null,
                      "scope": 65,
                      "stateVariable": false,
                      "storageLocation": "default",
                      "type": "uint256",
                      "value": null,
                      "visibility": "internal"
                    },
                    "children": [
                      {
                        "attributes": {
                          "name": "uint256",
                          "type": "uint256"
                        },
                        "id": 54,
                        "name": "ElementaryTypeName",
                        "src": "681:7:0"
                      }
                    ],
                    "id": 55,
                    "name": "VariableDeclaration",
                    "src": "681:15:0"
                  }
                ],
                "id": 56,
                "name": "ParameterList",
                "src": "680:17:0"
              },
              {
                "children": [
                  {
                    "attributes": {
                      "constant": false,
                      "mutability": "mutable",
                      "name": "",
                      "overrides": null,
                      "scope": 65,
                      "stateVariable": false,
                      "storageLocation": "default",
                      "type": "address",
                      "value": null,
                      "visibility": "internal"
                    },
                    "children": [
                      {
                        "attributes": {
                          "name": "address",
                          "stateMutability": "nonpayable",
                          "type": "address"
                        },
                        "id": 57,
                        "name": "ElementaryTypeName",
                        "src": "719:7:0"
                      }
                    ],
                    "id": 58,
                    "name": "VariableDeclaration",
                    "src": "719:7:0"
                  }
                ],
                "id": 59,
                "name": "ParameterList",
                "src": "718:9:0"
              },
              {
                "children": [
                  {
                    "attributes": {
                      "functionReturnParameters": 59
                    },
                    "children": [
                      {
                        "attributes": {
                          "argumentTypes": null,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "isStructConstructorCall": false,
                          "lValueRequested": false,
                          "names": [
                            null
                          ],
                          "tryCall": false,
                          "type": "address",
                          "type_conversion": false
                        },
                        "children": [
                          {
                            "attributes": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              ],
                              "overloadedDeclarations": [
                                null
                              ],
                              "referencedDeclaration": 830,
                              "type": "function (uint256) view returns (address)",
                              "value": "ownerOf"
                            },
                            "id": 60,
                            "name": "Identifier",
                            "src": "739:7:0"
                          },
                          {
                            "attributes": {
                              "argumentTypes": null,
                              "overloadedDeclarations": [
                                null
                              ],
                              "referencedDeclaration": 55,
                              "type": "uint256",
                              "value": "tokenId"
                            },
                            "id": 61,
                            "name": "Identifier",
                            "src": "747:7:0"
                          }
                        ],
                        "id": 62,
                        "name": "FunctionCall",
                        "src": "739:16:0"
                      }
                    ],
                    "id": 63,
                    "name": "Return",
                    "src": "732:23:0"
                  }
                ],
                "id": 64,
                "name": "Block",
                "src": "727:33:0"
              }
            ],
            "id": 65,
            "name": "FunctionDefinition",
            "src": "661:99:0"
          },
          {
            "attributes": {
              "documentation": null,
              "functionSelector": "50f0aa99",
              "implemented": true,
              "isConstructor": false,
              "kind": "function",
              "modifiers": [
                null
              ],
              "name": "getInHandTokens",
              "overrides": null,
              "scope": 148,
              "stateMutability": "view",
              "virtual": false,
              "visibility": "public"
            },
            "children": [
              {
                "children": [
                  {
                    "attributes": {
                      "constant": false,
                      "mutability": "mutable",
                      "name": "myAddr",
                      "overrides": null,
                      "scope": 78,
                      "stateVariable": false,
                      "storageLocation": "default",
                      "type": "address",
                      "value": null,
                      "visibility": "internal"
                    },
                    "children": [
                      {
                        "attributes": {
                          "name": "address",
                          "stateMutability": "nonpayable",
                          "type": "address"
                        },
                        "id": 66,
                        "name": "ElementaryTypeName",
                        "src": "790:7:0"
                      }
                    ],
                    "id": 67,
                    "name": "VariableDeclaration",
                    "src": "790:14:0"
                  }
                ],
                "id": 68,
                "name": "ParameterList",
                "src": "789:16:0"
              },
              {
                "children": [
                  {
                    "attributes": {
                      "constant": false,
                      "mutability": "mutable",
                      "name": "",
                      "overrides": null,
                      "scope": 78,
                      "stateVariable": false,
                      "storageLocation": "memory",
                      "type": "uint256[]",
                      "value": null,
                      "visibility": "internal"
                    },
                    "children": [
                      {
                        "attributes": {
                          "length": null,
                          "type": "uint256[]"
                        },
                        "children": [
                          {
                            "attributes": {
                              "name": "uint",
                              "type": "uint256"
                            },
                            "id": 69,
                            "name": "ElementaryTypeName",
                            "src": "826:4:0"
                          }
                        ],
                        "id": 70,
                        "name": "ArrayTypeName",
                        "src": "826:7:0"
                      }
                    ],
                    "id": 71,
                    "name": "VariableDeclaration",
                    "src": "826:14:0"
                  }
                ],
                "id": 72,
                "name": "ParameterList",
                "src": "825:16:0"
              },
              {
                "children": [
                  {
                    "attributes": {
                      "functionReturnParameters": 72
                    },
                    "children": [
                      {
                        "attributes": {
                          "argumentTypes": null,
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "type": "uint256[] storage ref"
                        },
                        "children": [
                          {
                            "attributes": {
                              "argumentTypes": null,
                              "overloadedDeclarations": [
                                null
                              ],
                              "referencedDeclaration": 37,
                              "type": "mapping(address => uint256[] storage ref)",
                              "value": "_inHandTokens"
                            },
                            "id": 73,
                            "name": "Identifier",
                            "src": "854:13:0"
                          },
                          {
                            "attributes": {
                              "argumentTypes": null,
                              "overloadedDeclarations": [
                                null
                              ],
                              "referencedDeclaration": 67,
                              "type": "address",
                              "value": "myAddr"
                            },
                            "id": 74,
                            "name": "Identifier",
                            "src": "868:6:0"
                          }
                        ],
                        "id": 75,
                        "name": "IndexAccess",
                        "src": "854:21:0"
                      }
                    ],
                    "id": 76,
                    "name": "Return",
                    "src": "847:28:0"
                  }
                ],
                "id": 77,
                "name": "Block",
                "src": "842:38:0"
              }
            ],
            "id": 78,
            "name": "FunctionDefinition",
            "src": "765:115:0"
          },
          {
            "attributes": {
              "documentation": null,
              "functionSelector": "fc106758",
              "implemented": true,
              "isConstructor": false,
              "kind": "function",
              "modifiers": [
                null
              ],
              "name": "mintNewHand",
              "overrides": null,
              "scope": 148,
              "stateMutability": "nonpayable",
              "virtual": false,
              "visibility": "public"
            },
            "children": [
              {
                "children": [
                  {
                    "attributes": {
                      "constant": false,
                      "mutability": "mutable",
                      "name": "card_hand",
                      "overrides": null,
                      "scope": 147,
                      "stateVariable": false,
                      "storageLocation": "memory",
                      "type": "struct CardGame.Card[]",
                      "value": null,
                      "visibility": "internal"
                    },
                    "children": [
                      {
                        "attributes": {
                          "length": null,
                          "type": "struct CardGame.Card[]"
                        },
                        "children": [
                          {
                            "attributes": {
                              "contractScope": null,
                              "name": "Card",
                              "referencedDeclaration": 25,
                              "type": "struct CardGame.Card"
                            },
                            "id": 79,
                            "name": "UserDefinedTypeName",
                            "src": "906:4:0"
                          }
                        ],
                        "id": 80,
                        "name": "ArrayTypeName",
                        "src": "906:6:0"
                      }
                    ],
                    "id": 81,
                    "name": "VariableDeclaration",
                    "src": "906:23:0"
                  }
                ],
                "id": 82,
                "name": "ParameterList",
                "src": "905:25:0"
              },
              {
                "attributes": {
                  "parameters": [
                    null
                  ]
                },
                "children": [],
                "id": 83,
                "name": "ParameterList",
                "src": "938:0:0"
              },
              {
                "children": [
                  {
                    "children": [
                      {
                        "attributes": {
                          "assignments": [
                            85
                          ]
                        },
                        "children": [
                          {
                            "attributes": {
                              "constant": false,
                              "mutability": "mutable",
                              "name": "i",
                              "overrides": null,
                              "scope": 140,
                              "stateVariable": false,
                              "storageLocation": "default",
                              "type": "uint256",
                              "value": null,
                              "visibility": "internal"
                            },
                            "children": [
                              {
                                "attributes": {
                                  "name": "uint",
                                  "type": "uint256"
                                },
                                "id": 84,
                                "name": "ElementaryTypeName",
                                "src": "948:4:0"
                              }
                            ],
                            "id": 85,
                            "name": "VariableDeclaration",
                            "src": "948:6:0"
                          },
                          {
                            "attributes": {
                              "argumentTypes": null,
                              "hexvalue": "30",
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "lValueRequested": false,
                              "subdenomination": null,
                              "token": "number",
                              "type": "int_const 0",
                              "value": "0"
                            },
                            "id": 86,
                            "name": "Literal",
                            "src": "957:1:0"
                          }
                        ],
                        "id": 87,
                        "name": "VariableDeclarationStatement",
                        "src": "948:10:0"
                      },
                      {
                        "attributes": {
                          "argumentTypes": null,
                          "commonType": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          },
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "operator": "<",
                          "type": "bool"
                        },
                        "children": [
                          {
                            "attributes": {
                              "argumentTypes": null,
                              "overloadedDeclarations": [
                                null
                              ],
                              "referencedDeclaration": 85,
                              "type": "uint256",
                              "value": "i"
                            },
                            "id": 88,
                            "name": "Identifier",
                            "src": "960:1:0"
                          },
                          {
                            "attributes": {
                              "argumentTypes": null,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "member_name": "length",
                              "referencedDeclaration": null,
                              "type": "uint256"
                            },
                            "children": [
                              {
                                "attributes": {
                                  "argumentTypes": null,
                                  "overloadedDeclarations": [
                                    null
                                  ],
                                  "referencedDeclaration": 81,
                                  "type": "struct CardGame.Card memory[] memory",
                                  "value": "card_hand"
                                },
                                "id": 89,
                                "name": "Identifier",
                                "src": "964:9:0"
                              }
                            ],
                            "id": 90,
                            "name": "MemberAccess",
                            "src": "964:16:0"
                          }
                        ],
                        "id": 91,
                        "name": "BinaryOperation",
                        "src": "960:20:0"
                      },
                      {
                        "children": [
                          {
                            "attributes": {
                              "argumentTypes": null,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "operator": "++",
                              "prefix": false,
                              "type": "uint256"
                            },
                            "children": [
                              {
                                "attributes": {
                                  "argumentTypes": null,
                                  "overloadedDeclarations": [
                                    null
                                  ],
                                  "referencedDeclaration": 85,
                                  "type": "uint256",
                                  "value": "i"
                                },
                                "id": 92,
                                "name": "Identifier",
                                "src": "982:1:0"
                              }
                            ],
                            "id": 93,
                            "name": "UnaryOperation",
                            "src": "982:3:0"
                          }
                        ],
                        "id": 94,
                        "name": "ExpressionStatement",
                        "src": "982:3:0"
                      },
                      {
                        "children": [
                          {
                            "attributes": {
                              "assignments": [
                                96
                              ]
                            },
                            "children": [
                              {
                                "attributes": {
                                  "constant": false,
                                  "mutability": "mutable",
                                  "name": "deckIdx",
                                  "overrides": null,
                                  "scope": 139,
                                  "stateVariable": false,
                                  "storageLocation": "default",
                                  "type": "uint256",
                                  "value": null,
                                  "visibility": "internal"
                                },
                                "children": [
                                  {
                                    "attributes": {
                                      "name": "uint",
                                      "type": "uint256"
                                    },
                                    "id": 95,
                                    "name": "ElementaryTypeName",
                                    "src": "993:4:0"
                                  }
                                ],
                                "id": 96,
                                "name": "VariableDeclaration",
                                "src": "993:12:0"
                              },
                              {
                                "attributes": {
                                  "argumentTypes": null,
                                  "isConstant": false,
                                  "isLValue": true,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "member_name": "deckIdx",
                                  "referencedDeclaration": 18,
                                  "type": "uint256"
                                },
                                "children": [
                                  {
                                    "attributes": {
                                      "argumentTypes": null,
                                      "isConstant": false,
                                      "isLValue": true,
                                      "isPure": false,
                                      "lValueRequested": false,
                                      "type": "struct CardGame.Card memory"
                                    },
                                    "children": [
                                      {
                                        "attributes": {
                                          "argumentTypes": null,
                                          "overloadedDeclarations": [
                                            null
                                          ],
                                          "referencedDeclaration": 81,
                                          "type": "struct CardGame.Card memory[] memory",
                                          "value": "card_hand"
                                        },
                                        "id": 97,
                                        "name": "Identifier",
                                        "src": "1008:9:0"
                                      },
                                      {
                                        "attributes": {
                                          "argumentTypes": null,
                                          "overloadedDeclarations": [
                                            null
                                          ],
                                          "referencedDeclaration": 85,
                                          "type": "uint256",
                                          "value": "i"
                                        },
                                        "id": 98,
                                        "name": "Identifier",
                                        "src": "1018:1:0"
                                      }
                                    ],
                                    "id": 99,
                                    "name": "IndexAccess",
                                    "src": "1008:12:0"
                                  }
                                ],
                                "id": 100,
                                "name": "MemberAccess",
                                "src": "1008:20:0"
                              }
                            ],
                            "id": 101,
                            "name": "VariableDeclarationStatement",
                            "src": "993:35:0"
                          },
                          {
                            "children": [
                              {
                                "attributes": {
                                  "argumentTypes": null,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "operator": "=",
                                  "type": "struct CardGame.Card storage ref"
                                },
                                "children": [
                                  {
                                    "attributes": {
                                      "argumentTypes": null,
                                      "isConstant": false,
                                      "isLValue": true,
                                      "isPure": false,
                                      "lValueRequested": true,
                                      "type": "struct CardGame.Card storage ref"
                                    },
                                    "children": [
                                      {
                                        "attributes": {
                                          "argumentTypes": null,
                                          "overloadedDeclarations": [
                                            null
                                          ],
                                          "referencedDeclaration": 32,
                                          "type": "mapping(uint256 => struct CardGame.Card storage ref)",
                                          "value": "_cardStack"
                                        },
                                        "id": 102,
                                        "name": "Identifier",
                                        "src": "1034:10:0"
                                      },
                                      {
                                        "attributes": {
                                          "argumentTypes": null,
                                          "overloadedDeclarations": [
                                            null
                                          ],
                                          "referencedDeclaration": 28,
                                          "type": "uint256",
                                          "value": "nftId"
                                        },
                                        "id": 103,
                                        "name": "Identifier",
                                        "src": "1045:5:0"
                                      }
                                    ],
                                    "id": 104,
                                    "name": "IndexAccess",
                                    "src": "1034:17:0"
                                  },
                                  {
                                    "attributes": {
                                      "argumentTypes": null,
                                      "isConstant": false,
                                      "isLValue": false,
                                      "isPure": false,
                                      "isStructConstructorCall": true,
                                      "lValueRequested": false,
                                      "names": [
                                        null
                                      ],
                                      "tryCall": false,
                                      "type": "struct CardGame.Card memory",
                                      "type_conversion": false
                                    },
                                    "children": [
                                      {
                                        "attributes": {
                                          "argumentTypes": [
                                            {
                                              "typeIdentifier": "t_uint256",
                                              "typeString": "uint256"
                                            },
                                            {
                                              "typeIdentifier": "t_uint256",
                                              "typeString": "uint256"
                                            },
                                            {
                                              "typeIdentifier": "t_uint256",
                                              "typeString": "uint256"
                                            },
                                            {
                                              "typeIdentifier": "t_bool",
                                              "typeString": "bool"
                                            }
                                          ],
                                          "overloadedDeclarations": [
                                            null
                                          ],
                                          "referencedDeclaration": 25,
                                          "type": "type(struct CardGame.Card storage pointer)",
                                          "value": "Card"
                                        },
                                        "id": 105,
                                        "name": "Identifier",
                                        "src": "1054:4:0"
                                      },
                                      {
                                        "attributes": {
                                          "argumentTypes": null,
                                          "isConstant": false,
                                          "isLValue": true,
                                          "isPure": false,
                                          "lValueRequested": false,
                                          "member_name": "deckIdx",
                                          "referencedDeclaration": 18,
                                          "type": "uint256"
                                        },
                                        "children": [
                                          {
                                            "attributes": {
                                              "argumentTypes": null,
                                              "isConstant": false,
                                              "isLValue": true,
                                              "isPure": false,
                                              "lValueRequested": false,
                                              "type": "struct CardGame.Card memory"
                                            },
                                            "children": [
                                              {
                                                "attributes": {
                                                  "argumentTypes": null,
                                                  "overloadedDeclarations": [
                                                    null
                                                  ],
                                                  "referencedDeclaration": 81,
                                                  "type": "struct CardGame.Card memory[] memory",
                                                  "value": "card_hand"
                                                },
                                                "id": 106,
                                                "name": "Identifier",
                                                "src": "1059:9:0"
                                              },
                                              {
                                                "attributes": {
                                                  "argumentTypes": null,
                                                  "overloadedDeclarations": [
                                                    null
                                                  ],
                                                  "referencedDeclaration": 85,
                                                  "type": "uint256",
                                                  "value": "i"
                                                },
                                                "id": 107,
                                                "name": "Identifier",
                                                "src": "1069:1:0"
                                              }
                                            ],
                                            "id": 108,
                                            "name": "IndexAccess",
                                            "src": "1059:12:0"
                                          }
                                        ],
                                        "id": 109,
                                        "name": "MemberAccess",
                                        "src": "1059:20:0"
                                      },
                                      {
                                        "attributes": {
                                          "argumentTypes": null,
                                          "isConstant": false,
                                          "isLValue": true,
                                          "isPure": false,
                                          "lValueRequested": false,
                                          "member_name": "cardIdx",
                                          "referencedDeclaration": 20,
                                          "type": "uint256"
                                        },
                                        "children": [
                                          {
                                            "attributes": {
                                              "argumentTypes": null,
                                              "isConstant": false,
                                              "isLValue": true,
                                              "isPure": false,
                                              "lValueRequested": false,
                                              "type": "struct CardGame.Card memory"
                                            },
                                            "children": [
                                              {
                                                "attributes": {
                                                  "argumentTypes": null,
                                                  "overloadedDeclarations": [
                                                    null
                                                  ],
                                                  "referencedDeclaration": 81,
                                                  "type": "struct CardGame.Card memory[] memory",
                                                  "value": "card_hand"
                                                },
                                                "id": 110,
                                                "name": "Identifier",
                                                "src": "1081:9:0"
                                              },
                                              {
                                                "attributes": {
                                                  "argumentTypes": null,
                                                  "overloadedDeclarations": [
                                                    null
                                                  ],
                                                  "referencedDeclaration": 85,
                                                  "type": "uint256",
                                                  "value": "i"
                                                },
                                                "id": 111,
                                                "name": "Identifier",
                                                "src": "1091:1:0"
                                              }
                                            ],
                                            "id": 112,
                                            "name": "IndexAccess",
                                            "src": "1081:12:0"
                                          }
                                        ],
                                        "id": 113,
                                        "name": "MemberAccess",
                                        "src": "1081:20:0"
                                      },
                                      {
                                        "attributes": {
                                          "argumentTypes": null,
                                          "isConstant": false,
                                          "isLValue": true,
                                          "isPure": false,
                                          "lValueRequested": false,
                                          "member_name": "suitTypeIdx",
                                          "referencedDeclaration": 22,
                                          "type": "uint256"
                                        },
                                        "children": [
                                          {
                                            "attributes": {
                                              "argumentTypes": null,
                                              "isConstant": false,
                                              "isLValue": true,
                                              "isPure": false,
                                              "lValueRequested": false,
                                              "type": "struct CardGame.Card memory"
                                            },
                                            "children": [
                                              {
                                                "attributes": {
                                                  "argumentTypes": null,
                                                  "overloadedDeclarations": [
                                                    null
                                                  ],
                                                  "referencedDeclaration": 81,
                                                  "type": "struct CardGame.Card memory[] memory",
                                                  "value": "card_hand"
                                                },
                                                "id": 114,
                                                "name": "Identifier",
                                                "src": "1103:9:0"
                                              },
                                              {
                                                "attributes": {
                                                  "argumentTypes": null,
                                                  "overloadedDeclarations": [
                                                    null
                                                  ],
                                                  "referencedDeclaration": 85,
                                                  "type": "uint256",
                                                  "value": "i"
                                                },
                                                "id": 115,
                                                "name": "Identifier",
                                                "src": "1113:1:0"
                                              }
                                            ],
                                            "id": 116,
                                            "name": "IndexAccess",
                                            "src": "1103:12:0"
                                          }
                                        ],
                                        "id": 117,
                                        "name": "MemberAccess",
                                        "src": "1103:24:0"
                                      },
                                      {
                                        "attributes": {
                                          "argumentTypes": null,
                                          "hexvalue": "74727565",
                                          "isConstant": false,
                                          "isLValue": false,
                                          "isPure": true,
                                          "lValueRequested": false,
                                          "subdenomination": null,
                                          "token": "bool",
                                          "type": "bool",
                                          "value": "true"
                                        },
                                        "id": 118,
                                        "name": "Literal",
                                        "src": "1129:4:0"
                                      }
                                    ],
                                    "id": 119,
                                    "name": "FunctionCall",
                                    "src": "1054:80:0"
                                  }
                                ],
                                "id": 120,
                                "name": "Assignment",
                                "src": "1034:100:0"
                              }
                            ],
                            "id": 121,
                            "name": "ExpressionStatement",
                            "src": "1034:100:0"
                          },
                          {
                            "children": [
                              {
                                "attributes": {
                                  "argumentTypes": null,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "isStructConstructorCall": false,
                                  "lValueRequested": false,
                                  "names": [
                                    null
                                  ],
                                  "tryCall": false,
                                  "type": "tuple()",
                                  "type_conversion": false
                                },
                                "children": [
                                  {
                                    "attributes": {
                                      "argumentTypes": [
                                        {
                                          "typeIdentifier": "t_uint256",
                                          "typeString": "uint256"
                                        }
                                      ],
                                      "isConstant": false,
                                      "isLValue": false,
                                      "isPure": false,
                                      "lValueRequested": false,
                                      "member_name": "push",
                                      "referencedDeclaration": null,
                                      "type": "function (uint256)"
                                    },
                                    "children": [
                                      {
                                        "attributes": {
                                          "argumentTypes": null,
                                          "isConstant": false,
                                          "isLValue": true,
                                          "isPure": false,
                                          "lValueRequested": false,
                                          "type": "uint256[] storage ref"
                                        },
                                        "children": [
                                          {
                                            "attributes": {
                                              "argumentTypes": null,
                                              "overloadedDeclarations": [
                                                null
                                              ],
                                              "referencedDeclaration": 37,
                                              "type": "mapping(address => uint256[] storage ref)",
                                              "value": "_inHandTokens"
                                            },
                                            "id": 122,
                                            "name": "Identifier",
                                            "src": "1140:13:0"
                                          },
                                          {
                                            "attributes": {
                                              "argumentTypes": null,
                                              "isConstant": false,
                                              "isLValue": false,
                                              "isPure": false,
                                              "lValueRequested": false,
                                              "member_name": "sender",
                                              "referencedDeclaration": null,
                                              "type": "address payable"
                                            },
                                            "children": [
                                              {
                                                "attributes": {
                                                  "argumentTypes": null,
                                                  "overloadedDeclarations": [
                                                    null
                                                  ],
                                                  "referencedDeclaration": -15,
                                                  "type": "msg",
                                                  "value": "msg"
                                                },
                                                "id": 123,
                                                "name": "Identifier",
                                                "src": "1154:3:0"
                                              }
                                            ],
                                            "id": 124,
                                            "name": "MemberAccess",
                                            "src": "1154:10:0"
                                          }
                                        ],
                                        "id": 125,
                                        "name": "IndexAccess",
                                        "src": "1140:25:0"
                                      }
                                    ],
                                    "id": 126,
                                    "name": "MemberAccess",
                                    "src": "1140:30:0"
                                  },
                                  {
                                    "attributes": {
                                      "argumentTypes": null,
                                      "overloadedDeclarations": [
                                        null
                                      ],
                                      "referencedDeclaration": 28,
                                      "type": "uint256",
                                      "value": "nftId"
                                    },
                                    "id": 127,
                                    "name": "Identifier",
                                    "src": "1171:5:0"
                                  }
                                ],
                                "id": 128,
                                "name": "FunctionCall",
                                "src": "1140:37:0"
                              }
                            ],
                            "id": 129,
                            "name": "ExpressionStatement",
                            "src": "1140:37:0"
                          },
                          {
                            "children": [
                              {
                                "attributes": {
                                  "argumentTypes": null,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "isStructConstructorCall": false,
                                  "lValueRequested": false,
                                  "names": [
                                    null
                                  ],
                                  "tryCall": false,
                                  "type": "tuple()",
                                  "type_conversion": false
                                },
                                "children": [
                                  {
                                    "attributes": {
                                      "argumentTypes": [
                                        {
                                          "typeIdentifier": "t_address_payable",
                                          "typeString": "address payable"
                                        },
                                        {
                                          "typeIdentifier": "t_uint256",
                                          "typeString": "uint256"
                                        }
                                      ],
                                      "overloadedDeclarations": [
                                        1270,
                                        1299
                                      ],
                                      "referencedDeclaration": 1270,
                                      "type": "function (address,uint256)",
                                      "value": "_safeMint"
                                    },
                                    "id": 130,
                                    "name": "Identifier",
                                    "src": "1183:9:0"
                                  },
                                  {
                                    "attributes": {
                                      "argumentTypes": null,
                                      "isConstant": false,
                                      "isLValue": false,
                                      "isPure": false,
                                      "lValueRequested": false,
                                      "member_name": "sender",
                                      "referencedDeclaration": null,
                                      "type": "address payable"
                                    },
                                    "children": [
                                      {
                                        "attributes": {
                                          "argumentTypes": null,
                                          "overloadedDeclarations": [
                                            null
                                          ],
                                          "referencedDeclaration": -15,
                                          "type": "msg",
                                          "value": "msg"
                                        },
                                        "id": 131,
                                        "name": "Identifier",
                                        "src": "1193:3:0"
                                      }
                                    ],
                                    "id": 132,
                                    "name": "MemberAccess",
                                    "src": "1193:10:0"
                                  },
                                  {
                                    "attributes": {
                                      "argumentTypes": null,
                                      "overloadedDeclarations": [
                                        null
                                      ],
                                      "referencedDeclaration": 28,
                                      "type": "uint256",
                                      "value": "nftId"
                                    },
                                    "id": 133,
                                    "name": "Identifier",
                                    "src": "1205:5:0"
                                  }
                                ],
                                "id": 134,
                                "name": "FunctionCall",
                                "src": "1183:28:0"
                              }
                            ],
                            "id": 135,
                            "name": "ExpressionStatement",
                            "src": "1183:28:0"
                          },
                          {
                            "children": [
                              {
                                "attributes": {
                                  "argumentTypes": null,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "operator": "++",
                                  "prefix": false,
                                  "type": "uint256"
                                },
                                "children": [
                                  {
                                    "attributes": {
                                      "argumentTypes": null,
                                      "overloadedDeclarations": [
                                        null
                                      ],
                                      "referencedDeclaration": 28,
                                      "type": "uint256",
                                      "value": "nftId"
                                    },
                                    "id": 136,
                                    "name": "Identifier",
                                    "src": "1217:5:0"
                                  }
                                ],
                                "id": 137,
                                "name": "UnaryOperation",
                                "src": "1217:7:0"
                              }
                            ],
                            "id": 138,
                            "name": "ExpressionStatement",
                            "src": "1217:7:0"
                          }
                        ],
                        "id": 139,
                        "name": "Block",
                        "src": "987:243:0"
                      }
                    ],
                    "id": 140,
                    "name": "ForStatement",
                    "src": "943:287:0"
                  },
                  {
                    "children": [
                      {
                        "attributes": {
                          "argumentTypes": null,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "isStructConstructorCall": false,
                          "lValueRequested": false,
                          "names": [
                            null
                          ],
                          "tryCall": false,
                          "type": "tuple()",
                          "type_conversion": false
                        },
                        "children": [
                          {
                            "attributes": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_address_payable",
                                  "typeString": "address payable"
                                }
                              ],
                              "overloadedDeclarations": [
                                null
                              ],
                              "referencedDeclaration": 41,
                              "type": "function (address)",
                              "value": "HandMinted"
                            },
                            "id": 141,
                            "name": "Identifier",
                            "src": "1239:10:0"
                          },
                          {
                            "attributes": {
                              "argumentTypes": null,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "member_name": "sender",
                              "referencedDeclaration": null,
                              "type": "address payable"
                            },
                            "children": [
                              {
                                "attributes": {
                                  "argumentTypes": null,
                                  "overloadedDeclarations": [
                                    null
                                  ],
                                  "referencedDeclaration": -15,
                                  "type": "msg",
                                  "value": "msg"
                                },
                                "id": 142,
                                "name": "Identifier",
                                "src": "1250:3:0"
                              }
                            ],
                            "id": 143,
                            "name": "MemberAccess",
                            "src": "1250:10:0"
                          }
                        ],
                        "id": 144,
                        "name": "FunctionCall",
                        "src": "1239:22:0"
                      }
                    ],
                    "id": 145,
                    "name": "EmitStatement",
                    "src": "1234:27:0"
                  }
                ],
                "id": 146,
                "name": "Block",
                "src": "938:328:0"
              }
            ],
            "id": 147,
            "name": "FunctionDefinition",
            "src": "885:381:0"
          }
        ],
        "id": 148,
        "name": "ContractDefinition",
        "src": "186:1083:0"
      }
    ],
    "id": 149,
    "name": "SourceUnit",
    "src": "0:1269:0"
  },
  "compiler": {
    "name": "solc",
    "version": "0.6.12+commit.27d51765.Emscripten.clang"
  },
  "networks": {
    "2": {
      "events": {
        "0x8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925": {
          "anonymous": false,
          "inputs": [
            {
              "indexed": true,
              "internalType": "address",
              "name": "owner",
              "type": "address"
            },
            {
              "indexed": true,
              "internalType": "address",
              "name": "approved",
              "type": "address"
            },
            {
              "indexed": true,
              "internalType": "uint256",
              "name": "tokenId",
              "type": "uint256"
            }
          ],
          "name": "Approval",
          "type": "event"
        },
        "0x17307eab39ab6107e8899845ad3d59bd9653f200f220920489ca2b5937696c31": {
          "anonymous": false,
          "inputs": [
            {
              "indexed": true,
              "internalType": "address",
              "name": "owner",
              "type": "address"
            },
            {
              "indexed": true,
              "internalType": "address",
              "name": "operator",
              "type": "address"
            },
            {
              "indexed": false,
              "internalType": "bool",
              "name": "approved",
              "type": "bool"
            }
          ],
          "name": "ApprovalForAll",
          "type": "event"
        },
        "0x8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0": {
          "anonymous": false,
          "inputs": [
            {
              "indexed": true,
              "internalType": "address",
              "name": "previousOwner",
              "type": "address"
            },
            {
              "indexed": true,
              "internalType": "address",
              "name": "newOwner",
              "type": "address"
            }
          ],
          "name": "OwnershipTransferred",
          "type": "event"
        },
        "0xddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef": {
          "anonymous": false,
          "inputs": [
            {
              "indexed": true,
              "internalType": "address",
              "name": "from",
              "type": "address"
            },
            {
              "indexed": true,
              "internalType": "address",
              "name": "to",
              "type": "address"
            },
            {
              "indexed": true,
              "internalType": "uint256",
              "name": "tokenId",
              "type": "uint256"
            }
          ],
          "name": "Transfer",
          "type": "event"
        },
        "0xe25990158cef48394eca25688e50df28632515e25370a164815fa8151dc447e2": {
          "anonymous": false,
          "inputs": [
            {
              "indexed": false,
              "internalType": "address",
              "name": "player",
              "type": "address"
            }
          ],
          "name": "HandMinted",
          "type": "event"
        }
      },
      "links": {},
      "address": "0x29706E3aa3e3B298eb9267df262B3799D9afD1AE",
      "transactionHash": "0xf9c81deaa63a1edcdca8f3e11d8ddbf071ceb7bb72fd17a2d436671e5d17ccaa"
    }
  },
  "schemaVersion": "3.4.1",
  "updatedAt": "2021-07-28T08:47:03.985Z",
  "networkType": "ethereum",
  "devdoc": {
    "kind": "dev",
    "methods": {
      "approve(address,uint256)": {
        "details": "See {IERC721-approve}."
      },
      "balanceOf(address)": {
        "details": "See {IERC721-balanceOf}."
      },
      "baseURI()": {
        "details": "Returns the base URI set via {_setBaseURI}. This will be automatically added as a prefix in {tokenURI} to each token's URI, or to the token ID if no specific URI is set for that token ID."
      },
      "getApproved(uint256)": {
        "details": "See {IERC721-getApproved}."
      },
      "isApprovedForAll(address,address)": {
        "details": "See {IERC721-isApprovedForAll}."
      },
      "name()": {
        "details": "See {IERC721Metadata-name}."
      },
      "owner()": {
        "details": "Returns the address of the current owner."
      },
      "ownerOf(uint256)": {
        "details": "See {IERC721-ownerOf}."
      },
      "renounceOwnership()": {
        "details": "Leaves the contract without owner. It will not be possible to call `onlyOwner` functions anymore. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby removing any functionality that is only available to the owner."
      },
      "safeTransferFrom(address,address,uint256)": {
        "details": "See {IERC721-safeTransferFrom}."
      },
      "safeTransferFrom(address,address,uint256,bytes)": {
        "details": "See {IERC721-safeTransferFrom}."
      },
      "setApprovalForAll(address,bool)": {
        "details": "See {IERC721-setApprovalForAll}."
      },
      "supportsInterface(bytes4)": {
        "details": "See {IERC165-supportsInterface}. Time complexity O(1), guaranteed to always use less than 30 000 gas."
      },
      "symbol()": {
        "details": "See {IERC721Metadata-symbol}."
      },
      "tokenByIndex(uint256)": {
        "details": "See {IERC721Enumerable-tokenByIndex}."
      },
      "tokenOfOwnerByIndex(address,uint256)": {
        "details": "See {IERC721Enumerable-tokenOfOwnerByIndex}."
      },
      "tokenURI(uint256)": {
        "details": "See {IERC721Metadata-tokenURI}."
      },
      "totalSupply()": {
        "details": "See {IERC721Enumerable-totalSupply}."
      },
      "transferFrom(address,address,uint256)": {
        "details": "See {IERC721-transferFrom}."
      },
      "transferOwnership(address)": {
        "details": "Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner."
      }
    },
    "version": 1
  },
  "userdoc": {
    "kind": "user",
    "methods": {},
    "version": 1
  }
}